{
  "app.jsx": "import React from 'react';\nimport { IonApp, IonRouterOutlet } from '@ionic/react';\nimport { IonReactHashRouter } from '@ionic/react-router';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport HomePage from './pages/HomePage';\nimport AddPage from './pages/AddPage';\n\nimport './styles/global.css';\n\nconst App = () => {\n  return (\n    <IonApp>\n      <IonReactHashRouter>\n        <IonRouterOutlet>\n          <Switch>\n            <Route path=\"/home\" component={HomePage} exact={true} />\n            <Route path=\"/add\" component={AddPage} exact={true} />\n            <Route path=\"/edit/:id\" component={AddPage} exact={true} />\n            <Redirect from=\"/\" to=\"/home\" exact={true} />\n          </Switch>\n        </IonRouterOutlet>\n      </IonReactHashRouter>\n    </IonApp>\n  );\n};\n\nexport default App;",
  "components/DateInput.jsx": "import React from 'react';\nimport styles from './DateInput.module.css';\n\nconst DateInput = ({ value, onChange, ...props }) => {\n  return (\n    <input\n      type=\"date\"\n      value={value}\n      onChange={onChange}\n      className={styles.dateInput}\n      {...props}\n    />\n  );\n};\n\nexport default DateInput;",
  "components/DateInput.module.css": ".dateInput {\n  width: 100%;\n  padding: 12px 16px;\n  border: 1px solid var(--ion-color-light-shade);\n  border-radius: 8px;\n  font-size: 16px;\n  background-color: var(--ion-item-background);\n  color: var(--ion-text-color);\n  font-family: inherit;\n  transition: all 0.2s ease;\n}\n\n.dateInput:focus {\n  outline: none;\n  border-color: var(--ion-color-primary);\n  box-shadow: 0 0 0 2px var(--ion-color-primary-tint);\n}\n\n.dateInput::-webkit-calendar-picker-indicator {\n  filter: var(--date-picker-filter, none);\n  cursor: pointer;\n}\n\n/* 深色模式适配 */\n@media (prefers-color-scheme: dark) {\n  .dateInput {\n    --date-picker-filter: invert(1);\n    border-color: var(--ion-color-dark-tint);\n    background-color: var(--ion-color-dark);\n    color: var(--ion-color-light);\n  }\n  \n  .dateInput:focus {\n    border-color: var(--ion-color-primary);\n    box-shadow: 0 0 0 2px var(--ion-color-primary-tint);\n  }\n}\n\n/* iOS Safari 特殊处理 */\n.dateInput::-webkit-datetime-edit {\n  color: inherit;\n}\n\n.dateInput::-webkit-datetime-edit-fields-wrapper {\n  color: inherit;\n}\n\n.dateInput::-webkit-datetime-edit-text {\n  color: inherit;\n}",
  "components/EmptyState.jsx": "import React from 'react';\nimport { IonText } from '@ionic/react';\nimport styles from './EmptyState.module.css';\n\nconst EmptyState = ({ message = \"暂无数据，请先新增\", showButton = true }) => {\n  return (\n    <div className={styles.emptyState}>\n      <div className={styles.illustration}>\n        {/* You can use an SVG or an image here */}\n        <svg width=\"120\" height=\"120\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M20 7.5L12 3L4 7.5L12 12L20 7.5Z\" stroke=\"#d0d0d0\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n          <path d=\"M4 7.5V16.5L12 21L20 16.5V7.5\" stroke=\"#d0d0d0\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n          <path d=\"M12 12V21\" stroke=\"#d0d0d0\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n          <path d=\"M20 7.5L16 9.5\" stroke=\"#d0d0d0\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n          <path d=\"M8 9.5L4 7.5\" stroke=\"#d0d0d0\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n        </svg>\n      </div>\n      <IonText className={styles.message}>{message}</IonText>\n    </div>\n  );\n};\n\nexport default EmptyState;\n",
  "components/EmptyState.module.css": ".emptyState {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 50vh;\n  text-align: center;\n}\n\n.illustration {\n  margin-bottom: 24px;\n  opacity: 0.5;\n}\n\n.message {\n  color: #888;\n  font-size: 16px;\n}\n",
  "components/FloatingButton.jsx": "import React from 'react';\nimport { IonFab, IonFabButton, IonIcon, IonLabel } from '@ionic/react';\nimport { add } from 'ionicons/icons';\nimport { useHistory } from 'react-router-dom';\nimport styles from './FloatingButton.module.css';\n\nconst FloatingButton = ({ children, onClick }) => {\n    const history = useHistory();\n\n    const handleClick = () => {\n        if (onClick) {\n            onClick();\n        } else {\n            history.push('/add');\n        }\n    };\n\n  return (\n    <IonFab vertical=\"bottom\" horizontal=\"center\" slot=\"fixed\" className={styles.fab}>\n      <IonFabButton onClick={handleClick} className={styles.fabButton}>\n        {children ? (\n          <span className={styles.buttonText}>{children}</span>\n        ) : (\n          <IonIcon icon={add} />\n        )}\n      </IonFabButton>\n    </IonFab>\n  );\n};\n\nexport default FloatingButton;\n",
  "components/FloatingButton.module.css": ".fab {\n  margin-bottom: 16px;\n}\n\n.fabButton {\n  --background: #5d58e0;\n  --background-activated: #4c47d0;\n  --box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  width: 120px;\n  height: 48px;\n  --border-radius: 24px;\n}\n\n.buttonText {\n  font-size: 16px;\n  font-weight: 500;\n  color: white;\n}\n",
  "components/FormField.jsx": "import React from 'react';\nimport { IonItem, IonLabel, IonText, IonIcon } from '@ionic/react';\nimport { chevronForward } from 'ionicons/icons';\nimport styles from './FormField.module.css';\n\nconst FormField = ({ label, children, onClick, value }) => {\n  return (\n    <IonItem onClick={onClick} className={styles.formField} lines=\"none\">\n      <IonLabel className={styles.label}>{label}</IonLabel>\n      <div className={styles.valueContainer}>\n        {value && <IonText className={styles.value}>{value}</IonText>}\n        {children}\n        {onClick && <IonIcon icon={chevronForward} color=\"medium\" />}\n      </div>\n    </IonItem>\n  );\n};\n\nexport default FormField;\n",
  "components/FormField.module.css": ".formField {\n  --background: var(--ion-item-background);\n  --padding-start: 16px;\n  --inner-padding-end: 16px;\n  --min-height: 50px;\n  border-bottom: 1px solid var(--ion-color-light-shade);\n}\n\n.label {\n  font-weight: 500;\n  color: var(--ion-text-color);\n}\n\n.valueContainer {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.value {\n  color: var(--ion-color-medium);\n}\n\n/* 深色模式适配 */\n@media (prefers-color-scheme: dark) {\n  .formField {\n    --background: var(--ion-color-dark);\n    border-bottom: 1px solid var(--ion-color-dark-tint);\n  }\n  \n  .label {\n    color: var(--ion-color-light);\n  }\n  \n  .value {\n    color: var(--ion-color-light-shade);\n  }\n}\n",
  "components/FormSection.jsx": "import React from 'react';\nimport { IonText } from '@ionic/react';\nimport styles from './FormSection.module.css';\n\nconst FormSection = ({ title, children }) => {\n  return (\n    <div className={styles.formSection}>\n      {title && <IonText className={styles.title}>{title}</IonText>}\n      <div className={styles.content}>{children}</div>\n    </div>\n  );\n};\n\nexport default FormSection;\n",
  "components/FormSection.module.css": ".formSection {\n  margin-bottom: 12px;\n}\n\n.title {\n  display: block;\n  font-size: 14px;\n  color: var(--ion-color-medium);\n  padding: 8px 16px;\n}\n\n.content {\n  background-color: var(--ion-item-background);\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n/* 深色模式适配 */\n@media (prefers-color-scheme: dark) {\n  .content {\n    background-color: var(--ion-color-dark);\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\n  }\n}\n",
  "components/HeaderTabs.jsx": "import React from 'react';\nimport { IonSegment, IonSegmentButton, IonLabel } from '@ionic/react';\nimport styles from './HeaderTabs.module.css';\n\nconst HeaderTabs = ({ selectedTab, onTabChange }) => {\n  const tabs = ['全部', '服役中', '已超期', '已退役', '预备役'];\n\n  return (\n    <div className={styles.headerTabsContainer}>\n      <IonSegment value={selectedTab} onIonChange={e => onTabChange(e.detail.value)} scrollable>\n        {tabs.map(tab => (\n          <IonSegmentButton key={tab} value={tab} className={styles.segmentButton}>\n            <IonLabel>{tab}</IonLabel>\n          </IonSegmentButton>\n        ))}\n      </IonSegment>\n    </div>\n  );\n};\n\nexport default HeaderTabs;\n",
  "components/HeaderTabs.module.css": ".headerTabsContainer {\n  display: flex;\n  align-items: center;\n  padding: 0 16px;\n  background-color: var(--ion-background-color);\n}\n\n.headerTabsContainer ion-segment {\n  --background: transparent;\n  width: 100%;\n}\n\n.segmentButton {\n  --color: #888;\n  --color-checked: var(--ion-color-primary);\n  --indicator-color: transparent;\n  text-transform: none;\n  font-weight: 500;\n   border-radius: 0;\n  border-bottom: 2px solid transparent;\n}\n\n.segmentButton.segment-button-checked {\n  border-bottom: 2px solid var(--ion-color-primary);\n}\n",
  "components/ItemList.jsx": "import React from 'react';\nimport { IonList, IonItem, IonLabel, IonText } from '@ionic/react';\nimport { useHistory } from 'react-router-dom';\nimport styles from './ItemList.module.css';\n\nconst ItemList = ({ items }) => {\n  const history = useHistory();\n\n  const handleItemClick = (id) => {\n    if (id.startsWith('demo-')) return;\n    history.push(`/edit/${id}`);\n  };\n\n  return (\n    <div>\n      <IonList className={styles.itemList}>\n        {items.map(item => {\n          const purchaseDate = item.purchaseDate ? new Date(item.purchaseDate) : null;\n          const isValidDate = purchaseDate && !isNaN(purchaseDate.getTime());\n          const daysSincePurchase = isValidDate \n            ? Math.max(0, Math.ceil((Date.now() - purchaseDate.getTime()) / (1000 * 60 * 60 * 24)))\n            : 0;\n\n          return (\n            <IonItem \n              key={item.id} \n              button={!item._isDemo}\n              onClick={() => handleItemClick(item.id)} \n              className={`${styles.item} ${item._optimistic ? styles.optimisticItem : ''} ${item._isDemo ? styles.demoItem : ''}`}\n            >\n              <div className={styles.itemContent}>\n                <div className={styles.itemInfo}>\n                  <IonLabel className={styles.itemName}>\n                    {item.name || '未命名物品'}\n                  </IonLabel>\n                  <IonText className={styles.itemMeta}>\n                    {item.status || '服役中'} • ×{item.quantity || 1} {item.price ? `• ${item.price}元` : ''}\n                  </IonText>\n                </div>\n                <div className={styles.itemValue}>\n                  <IonText className={styles.itemDays}>\n                    {daysSincePurchase}天\n                  </IonText>\n                </div>\n              </div>\n            </IonItem>\n          );\n        })}\n      </IonList>\n      \n      {items.some(item => item._isDemo) && (\n        <div className={styles.demoTip}>\n          <IonText>小提示：长按可快速操作哦～</IonText>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ItemList;",
  "components/ItemList.module.css": ".itemList {\n  background: transparent;\n  padding: 0 16px;\n}\n\n.item {\n  --background: #ffffff;\n  --padding-start: 16px;\n  --inner-padding-end: 16px;\n  border-radius: 12px;\n  margin-bottom: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n  display: flex;\n  align-items: center;\n}\n\n.itemContent {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px 0;\n}\n\n.itemInfo {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n}\n\n.itemName {\n  font-weight: 600;\n  font-size: 16px;\n  color: #333;\n  margin-bottom: 4px;\n}\n\n.itemMeta {\n  font-size: 13px;\n  color: #888;\n}\n\n.itemValue {\n  text-align: right;\n}\n\n.itemDays {\n  font-size: 16px;\n  color: #333;\n  font-weight: 500;\n}\n\n.demoItem {\n  opacity: 0.8;\n}\n\n.demoTip {\n  padding: 16px;\n  text-align: center;\n}\n\n.demoTip ion-text {\n  font-size: 14px;\n  color: #999;\n}\n\n.optimisticItem {\n  opacity: 0.7;\n  background: #f8f9fa !important;\n}\n\n.optimisticItem .itemContent {\n  position: relative;\n}\n\n.optimisticItem .itemContent::after {\n  content: '';\n  position: absolute;\n  top: 50%;\n  right: -8px;\n  width: 12px;\n  height: 12px;\n  border: 2px solid var(--ion-color-primary);\n  border-top: 2px solid transparent;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% { transform: translateY(-50%) rotate(0deg); }\n  100% { transform: translateY(-50%) rotate(360deg); }\n}\n",
  "components/StatsCard.jsx": "import React from 'react';\nimport { IonRow, IonCol, IonText, IonIcon } from '@ionic/react';\nimport { chevronDownOutline } from 'ionicons/icons';\nimport styles from './StatsCard.module.css';\n\nconst StatsCard = ({ totalValue, dailyAverage, itemCount }) => {\n  return (\n    <div className={styles.statsCardContainer}>\n      <IonRow className={styles.titleRow}>\n        <IonCol size=\"auto\" className={styles.title}>\n          <IonText>全部物品</IonText>\n        </IonCol>\n        <IonCol className={styles.filter}>\n          <IonText>默认</IonText>\n          <IonIcon icon={chevronDownOutline} />\n        </IonCol>\n      </IonRow>\n      <IonRow className={styles.statsRow}>\n        <IonCol className={styles.statCol}>\n          <IonText className={styles.statValue}>{totalValue.toFixed(2)}</IonText>\n          <IonText className={styles.statLabel}>资产总计 (¥)</IonText>\n        </IonCol>\n        <IonCol className={styles.statCol}>\n          <IonText className={styles.statValue}>{dailyAverage.toFixed(2)}</IonText>\n          <IonText className={styles.statLabel}>总日均 (¥)</IonText>\n        </IonCol>\n        <IonCol className={styles.statCol}>\n          <IonText className={styles.statValue}>{itemCount}</IonText>\n          <IonText className={styles.statLabel}>数量 (个)</IonText>\n        </IonCol>\n      </IonRow>\n    </div>\n  );\n};\n\nexport default StatsCard;",
  "components/StatsCard.module.css": ".statsCardContainer {\n  background: linear-gradient(135deg, #7b68ee 0%, #5d58e0 100%);\n  border-radius: 20px;\n  padding: 16px;\n  color: white;\n  margin: 16px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.titleRow {\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.title {\n  font-size: 18px;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n}\n\n.filter {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  font-size: 14px;\n  opacity: 0.8;\n}\n\n.statsRow {\n  text-align: center;\n}\n\n.statCol {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.statValue {\n  font-size: 22px;\n  font-weight: bold;\n  display: block;\n}\n\n.statLabel {\n  font-size: 12px;\n  opacity: 0.8;\n  display: block;\n  margin-top: 4px;\n}\n\n/* 深色模式适配 */\n@media (prefers-color-scheme: dark) {\n  .statsCardContainer {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);\n  }\n}\n",
  "components/SubmitButton.jsx": "import React, { useState } from 'react';\nimport { IonButton, IonSpinner } from '@ionic/react';\nimport styles from './SubmitButton.module.css';\n\nconst SubmitButton = ({ children, onClick, disabled }) => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClick = async () => {\n    if (isLoading || disabled) return;\n    \n    setIsLoading(true);\n    try {\n      await onClick();\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className={styles.buttonContainer}>\n      <IonButton \n        expand=\"block\" \n        onClick={handleClick} \n        disabled={disabled || isLoading} \n        className={styles.button}\n      >\n        {isLoading ? (\n          <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n            <IonSpinner name=\"dots\" />\n            保存中...\n          </div>\n        ) : (\n          children\n        )}\n      </IonButton>\n    </div>\n  );\n};\n\nexport default SubmitButton;\n",
  "components/SubmitButton.module.css": ".buttonContainer {\n  padding: 16px;\n  position: sticky;\n  bottom: 0;\n  background: var(--ion-background-color);\n  border-top: 1px solid var(--ion-color-light-shade);\n}\n\n.button {\n  height: 48px;\n  --border-radius: 24px;\n  font-weight: bold;\n  text-transform: none;\n  --background: var(--ion-color-primary);\n  --color: white;\n}\n\n/* 深色模式适配 */\n@media (prefers-color-scheme: dark) {\n  .buttonContainer {\n    background: var(--ion-color-dark);\n    border-top: 1px solid var(--ion-color-dark-tint);\n  }\n  \n  .button {\n    --background: var(--ion-color-primary);\n    --color: var(--ion-color-primary-contrast);\n  }\n}\n",
  "components/Welcome.jsx": "import React from 'react';\nimport { IonIcon } from '@ionic/react';\nimport { downloadOutline, globeOutline} from 'ionicons/icons';\nimport styles from '../styles/Welcome.module.css';\n\n/**\n * 欢迎组件 - 仅用于演示\n * \n * 这个组件用于展示 Morphix AI Code 的功能和界面设计\n * 在实际开发中，请删除此组件并创建您自己的应用界面\n * \n * @component\n * @returns {JSX.Element} 欢迎页面组件\n */\nexport default function Welcome() {\n    const openDownload = () => {\n        window.open('https://baibian.app/mobile-download', '_blank');\n    };\n\n    const openWebsite = () => {\n        window.open('https://baibian.app/', '_blank');\n    };\n\n    return (\n        <div className={styles.welcomeContainer}>\n\n            {/* 头部 */}\n            <div className={styles.header}>\n                <div className={styles.logo}>\n                    <img\n                        src=\"https://app-shell.focusbe.com/Icon-60@3x.png\"\n                        alt=\"Morphix AI Logo\"\n                        className={styles.logoImage}\n                        onError={(e) => {\n                            e.target.style.display = 'none';\n                        }}\n                    />\n                    <div className={styles.logoGlow}></div>\n                </div>\n\n                <h1 className={styles.title}>\n                    <span className={styles.titleGradient}>Morphix AI</span>\n                    <span className={styles.titleSubtext}>Code</span>\n                </h1>\n                <p className={styles.subtitle}>Create your own app with AI</p>\n            </div>\n\n            {/* 三个步骤 */}\n            <div className={styles.steps}>\n                <div className={styles.step}>\n                    <div className={styles.stepNumber}>1</div>\n                    <div className={styles.stepContent}>\n                        <h3>Describe</h3>\n                        <p>Your app idea</p>\n                    </div>\n                </div>\n\n                <div className={styles.step}>\n                    <div className={styles.stepNumber}>2</div>\n                    <div className={styles.stepContent}>\n                        <h3>Generate</h3>\n                        <p>AI builds a preview</p>\n                    </div>\n                </div>\n\n                <div className={styles.step}>\n                    <div className={styles.stepNumber}>3</div>\n                    <div className={styles.stepContent}>\n                        <h3>Launch</h3>\n                        <p>Use in Morphix</p>\n                    </div>\n                </div>\n            </div>\n\n            {/* 行动按钮 */}\n            <div className={styles.ctaSection}>\n                <button \n                    className={styles.primaryBtn}\n                    onClick={openDownload}\n                >\n                    <IonIcon icon={downloadOutline} />\n                    Download Morphix AI\n                </button>\n                \n                <button \n                    className={styles.secondaryBtn}\n                    onClick={openWebsite}\n                >\n                    <IonIcon icon={globeOutline} />\n                    Visit Website\n                </button>\n            </div>\n\n            {/* 底部 */}\n            <div className={styles.footer}>\n                <p>2024 Morphix AI. Empowering everyone to create apps.</p>\n            </div>\n        </div>\n    );\n}\n",
  "pages/AddPage.jsx": "import React, { useState, useEffect } from 'react';\nimport {\n  IonPage,\n  IonContent,\n  IonInput,\n  IonSegment,\n  IonSegmentButton,\n  IonLabel,\n  IonToggle,\n  useIonToast,\n} from '@ionic/react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { PageHeader } from '@morphixai/components';\nimport useItemStore from '../store/useItemStore';\nimport FormField from '../components/FormField';\nimport FormSection from '../components/FormSection';\nimport SubmitButton from '../components/SubmitButton';\nimport DateInput from '../components/DateInput';\nimport styles from './AddPage.module.css';\n\nconst AddPage = () => {\n  const history = useHistory();\n  const { id: editId } = useParams();\n  const { addItem, updateItem, getItem } = useItemStore();\n  const [present] = useIonToast();\n\n  const [formData, setFormData] = useState({\n    name: '',\n    purchaseDate: new Date().toISOString().split('T')[0],\n    price: '',\n    quantity: 1,\n    status: '服役中',\n    includeSecondHandValue: false,\n    calculatePerUse: false,\n  });\n\n  useEffect(() => {\n    if (editId) {\n      const item = getItem(editId);\n      if (item) {\n        setFormData(item);\n      }\n    }\n  }, [editId, getItem]);\n\n  const handleInputChange = (field, value) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const handleSubmit = async () => {\n    if (!formData.name || !formData.price) {\n      present({ message: '请填写必填项', duration: 2000 });\n      return;\n    }\n\n    const { id, _optimistic, _isDemo, createdAt, ...cleanData } = formData;\n\n    const result = editId\n      ? await updateItem(editId, cleanData)\n      : await addItem(cleanData);\n\n    if (result.success) {\n      present({ message: editId ? '更新成功' : '保存成功', duration: 2000 });\n      history.goBack();\n    } else {\n      present({ message: '操作失败', duration: 2000 });\n    }\n  };\n\n  return (\n    <IonPage>\n      <PageHeader title={editId ? '编辑物品' : '新增物品'} />\n      <IonContent>\n        <FormSection title=\"基本信息\">\n          <FormField label=\"名称\">\n            <IonInput\n              value={formData.name}\n              placeholder=\"输入名称\"\n              onIonChange={e => handleInputChange('name', e.detail.value)}\n              className={styles.inputField}\n            />\n          </FormField>\n          <FormField label=\"购买时间\">\n            <DateInput\n              value={formData.purchaseDate}\n              onChange={e => handleInputChange('purchaseDate', e.target.value)}\n            />\n          </FormField>\n        </FormSection>\n\n        <FormSection title=\"以下为选填项\">\n          <FormField label=\"价格\">\n            <IonInput\n              type=\"number\"\n              value={formData.price}\n              placeholder=\"输入价格\"\n              onIonChange={e => handleInputChange('price', e.detail.value)}\n              className={styles.inputField}\n            />\n          </FormField>\n           <FormField label=\"使用状态\">\n            <IonSegment \n              value={formData.status} \n              onIonChange={e => handleInputChange('status', e.detail.value)}\n              className={styles.statusSegment}>\n              <IonSegmentButton value=\"服役中\">\n                <IonLabel>服役中</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value=\"预备役\">\n                <IonLabel>预备役</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value=\"已退役\">\n                <IonLabel>已退役</IonLabel>\n              </IonSegmentButton>\n            </IonSegment>\n          </FormField>\n        </FormSection>\n\n        <FormSection title=\"价值计算\">\n          <FormField label=\"包含二手价值\" className={styles.toggleField}>\n            <IonToggle\n              checked={formData.includeSecondHandValue}\n              onIonChange={e => handleInputChange('includeSecondHandValue', e.detail.checked)}\n            />\n          </FormField>\n          <FormField label=\"计算每次的使用价格\" className={styles.toggleField}>\n            <IonToggle\n              checked={formData.calculatePerUse}\n              onIonChange={e => handleInputChange('calculatePerUse', e.detail.checked)}\n            />\n          </FormField>\n        </FormSection>\n\n        <SubmitButton onClick={handleSubmit}>保存</SubmitButton>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default AddPage;",
  "pages/AddPage.module.css": "/* 状态选择器深色模式适配 */\n.statusSegment {\n  --background: transparent;\n}\n\n.statusSegment ion-segment-button {\n  --color: var(--ion-color-medium);\n  --color-checked: white;\n  --indicator-color: var(--ion-color-primary);\n  --background-checked: var(--ion-color-primary);\n  --background: transparent;\n  border-radius: 8px;\n  margin: 2px;\n  font-weight: 500;\n  transition: all 0.2s ease;\n}\n\n.statusSegment ion-segment-button:hover {\n  --background: var(--ion-color-light-shade);\n}\n\n/* 切换开关深色模式适配 */\n.toggleField ion-toggle {\n  --background: var(--ion-color-light-shade);\n  --background-checked: var(--ion-color-primary);\n  --handle-background: var(--ion-item-background);\n  --handle-background-checked: var(--ion-color-primary-contrast);\n}\n\n/* 输入框深色模式适配 */\n.inputField ion-input {\n  --background: transparent;\n  --color: var(--ion-text-color);\n  --placeholder-color: var(--ion-color-medium);\n}\n\n/* 深色模式特殊处理 */\n@media (prefers-color-scheme: dark) {\n  .statusSegment ion-segment-button {\n    --color: var(--ion-color-light-shade);\n    --color-checked: white;\n    --background-checked: var(--ion-color-primary);\n  }\n  \n  .statusSegment ion-segment-button:hover {\n    --background: var(--ion-color-dark-tint);\n  }\n  \n  .toggleField ion-toggle {\n    --background: var(--ion-color-dark-tint);\n    --handle-background: var(--ion-color-light);\n  }\n}",
  "pages/HomePage.jsx": "import React, { useState, useMemo } from 'react';\nimport { IonPage, IonContent, useIonViewWillEnter, IonRefresher, IonRefresherContent, IonSpinner, IonButton } from '@ionic/react';\nimport { PageHeader } from '@morphixai/components';\nimport { reportError } from '@morphixai/lib';\n\nimport useItemStore from '../store/useItemStore';\nimport StatsCard from '../components/StatsCard';\nimport HeaderTabs from '../components/HeaderTabs';\nimport ItemList from '../components/ItemList';\nimport EmptyState from '../components/EmptyState';\nimport FloatingButton from '../components/FloatingButton';\n\nconst HomePage = () => {\n  const { items, loadItems, initialLoading } = useItemStore();\n  const [selectedTab, setSelectedTab] = useState('全部');\n  const [refreshing, setRefreshing] = useState(false);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [loadError, setLoadError] = useState(null);\n\n  useIonViewWillEnter(() => {\n    if (initialLoading && !dataLoaded) {\n      loadData();\n    }\n  });\n\n  const loadData = async () => {\n    try {\n      setLoadError(null);\n      await loadItems();\n      setDataLoaded(true);\n    } catch (error) {\n      console.error('Failed to load data:', error);\n      const errorContext = {\n        operation: 'loadItems',\n        online: navigator.onLine,\n        userAgent: navigator.userAgent,\n        timestamp: new Date().toISOString()\n      };\n      await reportError(error, 'JavaScriptError', errorContext);\n      setLoadError(error);\n      setDataLoaded(true);\n    }\n  };\n\n  const handleRefresh = async (event) => {\n    setRefreshing(true);\n    try {\n      setLoadError(null);\n      await loadItems();\n    } catch (error) {\n      setLoadError(error);\n    }\n    setRefreshing(false);\n    event.detail.complete();\n  };\n\n  const handleRetry = () => {\n    setDataLoaded(false);\n    loadData();\n  };\n\n  const filteredItems = useMemo(() => {\n    if (selectedTab === '全部') return items;\n    return items.filter(item => item.status === selectedTab);\n  }, [items, selectedTab]);\n\n  const stats = useMemo(() => {\n    const result = items.reduce((acc, item) => {\n      const price = Number(item.price) || 0;\n      acc.totalValue += price;\n      \n      if (item.purchaseDate) {\n        const purchaseDate = new Date(item.purchaseDate);\n        const currentDate = new Date();\n        const daysDiff = Math.max(1, Math.ceil((currentDate - purchaseDate) / (1000 * 60 * 60 * 24)));\n        acc.dailyAverage += price / daysDiff;\n      } else {\n        acc.dailyAverage += price / 365;\n      }\n      \n      return acc;\n    }, { totalValue: 0, dailyAverage: 0 });\n    \n    return { ...result, itemCount: items.length };\n  }, [items]);\n\n  return (\n    <IonPage>\n      <PageHeader title=\"全部物品\" />\n      <IonContent fullscreen>\n        <IonRefresher slot=\"fixed\" onIonRefresh={handleRefresh}>\n          <IonRefresherContent\n            pullingIcon=\"chevron-down-circle-outline\"\n            pullingText=\"下拉刷新\"\n            refreshingSpinner=\"circles\"\n            refreshingText=\"刷新中...\"\n          />\n        </IonRefresher>\n        \n        {initialLoading && !dataLoaded ? (\n          <div style={{ \n            display: 'flex', \n            justifyContent: 'center', \n            alignItems: 'center', \n            height: '300px',\n            flexDirection: 'column',\n            gap: '16px',\n            color: '#666',\n            padding: '20px'\n          }}>\n            <IonSpinner name=\"circles\" />\n            <div>正在加载数据...</div>\n          </div>\n        ) : loadError ? (\n          <div style={{ \n            display: 'flex', \n            justifyContent: 'center', \n            alignItems: 'center', \n            height: '300px',\n            flexDirection: 'column',\n            gap: '16px',\n            padding: '20px',\n            textAlign: 'center'\n          }}>\n            <div style={{ fontSize: '48px' }}>⚠️</div>\n            <div style={{ color: '#666', fontSize: '16px' }}>加载失败</div>\n            <div style={{ color: '#999', fontSize: '14px' }}>\n              {!navigator.onLine ? '网络连接已断开，请检查网络设置' : '数据加载出错，请重试'}\n            </div>\n            <IonButton onClick={handleRetry} color=\"primary\">\n              重试\n            </IonButton>\n          </div>\n        ) : (\n          <>\n            <StatsCard \n              totalValue={stats.totalValue} \n              dailyAverage={stats.dailyAverage} \n              itemCount={stats.itemCount} \n            />\n            <HeaderTabs selectedTab={selectedTab} onTabChange={setSelectedTab} />\n            \n            {filteredItems.length === 0 ? (\n              <EmptyState />\n            ) : (\n              <ItemList items={filteredItems} />\n            )}\n          </>\n        )}\n        \n        <FloatingButton>新增</FloatingButton>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default HomePage;",
  "pages/SettingsPage.jsx": "// 此文件已被删除",
  "pages/SettingsPage.module.css": "/* 此文件已被删除 */",
  "store/useItemStore.js": "import AppSdk from '@morphixai/app-sdk';\nimport { reportError } from '@morphixai/lib';\n\nimport {create} from 'zustand'\n\nconst COLLECTION_NAME = 'items';\n\nconst sanitizeQuery = (query) => {\n  if (!Array.isArray(query)) return [];\n  return query\n    .filter(item => item && item.key && item.operator && item.value !== undefined)\n    .map(item => ({\n      ...item,\n      value: item.value === null ? null : item.value\n    }));\n};\n\nconst getErrorContext = (operation) => ({\n  operation,\n  online: navigator.onLine,\n  timestamp: new Date().toISOString(),\n  userAgent: navigator.userAgent\n});\n\nconst useItemStore = create((set, get) => ({\n  items: [],\n  initialLoading: true,\n  loadItems: async () => {\n    try {\n      const storedItems = await AppSdk.appData.queryData({\n        collection: COLLECTION_NAME,\n        query: sanitizeQuery([])\n      });\n      set({ items: storedItems || [], initialLoading: false });\n    } catch (error) {\n      console.error(\"Failed to load items:\", error);\n      await reportError(error, 'JavaScriptError', getErrorContext('loadItems'));\n      set({ initialLoading: false });\n      throw error;\n    }\n  },\n  addItem: async (item) => {\n    const tempId = `temp-${Date.now()}`;\n    const newItem = { ...item, createdAt: Date.now() };\n    \n    set((state) => ({ \n      items: [...state.items, { id: tempId, ...newItem, _optimistic: true }] \n    }));\n    \n    try {\n      const result = await AppSdk.appData.createData({\n        collection: COLLECTION_NAME,\n        data: newItem\n      });\n      set((state) => ({\n        items: state.items.map(i => \n          i.id === tempId ? result : i\n        )\n      }));\n      return { success: true, id: result.id };\n    } catch (error) {\n      console.error(\"Failed to add item:\", error);\n      await reportError(error, 'JavaScriptError', getErrorContext('addItem'));\n      set((state) => ({\n        items: state.items.filter(i => i.id !== tempId)\n      }));\n      return { success: false, error };\n    }\n  },\n  updateItem: async (id, itemToUpdate) => {\n    const state = get();\n    const originalItem = state.items.find(item => item.id === id);\n    \n    if (!originalItem) {\n      return { success: false, error: 'Item not found' };\n    }\n    \n    set((state) => ({\n      items: state.items.map((item) =>\n        item.id === id ? { ...item, ...itemToUpdate, _optimistic: true } : item\n      ),\n    }));\n    \n    try {\n      await AppSdk.appData.updateData({\n        collection: COLLECTION_NAME,\n        id,\n        data: itemToUpdate\n      });\n      set((state) => ({\n        items: state.items.map((item) =>\n          item.id === id ? { ...item, _optimistic: undefined } : item\n        ),\n      }));\n      return { success: true };\n    } catch (error) {\n      console.error(\"Failed to update item:\", error);\n      await reportError(error, 'JavaScriptError', getErrorContext('updateItem'));\n      set((state) => ({\n        items: state.items.map((item) =>\n          item.id === id ? originalItem : item\n        ),\n      }));\n      return { success: false, error };\n    }\n  },\n  deleteItem: async (id) => {\n    const state = get();\n    const itemToDelete = state.items.find(item => item.id === id);\n    \n    if (!itemToDelete) {\n      return { success: false, error: 'Item not found' };\n    }\n    \n    set((state) => ({ \n      items: state.items.filter((item) => item.id !== id) \n    }));\n    \n    try {\n      await AppSdk.appData.deleteData({\n        collection: COLLECTION_NAME,\n        id\n      });\n      return { success: true };\n    } catch (error) {\n      console.error(\"Failed to delete item:\", error);\n      await reportError(error, 'JavaScriptError', getErrorContext('deleteItem'));\n      set((state) => ({ \n        items: [...state.items, itemToDelete].sort((a, b) => b.createdAt - a.createdAt)\n      }));\n      return { success: false, error };\n    }\n  },\n  getItem: (id) => {\n    return get().items.find(item => item.id === id);\n  },\n}));\n\nexport default useItemStore;",
  "styles/App.module.css": "/* 主应用样式 */\n\n.content {\n  --padding: 0;\n  background: #ffffff;\n  min-height: 100vh;\n  color: #1f2937;\n}",
  "styles/Welcome.module.css": "/* Welcome 组件样式 - 简约风格 */\n\n.welcomeContainer {\n  background: #ffffff;\n  min-height: 100vh;\n  color: #333333;\n  position: relative;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n}\n\n/* 头部 */\n.header {\n  text-align: center;\n  padding: 56px 16px 16px;\n}\n\n.logo {\n  display: inline-block;\n  margin-bottom: 12px;\n}\n\n.logoImage {\n  width: 64px;\n  height: 64px;\n  border-radius: 12px;\n  transition: opacity 0.2s ease;\n  box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1);\n}\n\n.logoImage:hover {\n  opacity: 0.8;\n}\n\n.title {\n  font-size: 2.1rem;\n  font-weight: 600;\n  margin: 0 0 6px 0;\n  line-height: 1.2;\n  letter-spacing: -0.02em;\n}\n\n.titleGradient {\n  color: #1a1a1a;\n}\n\n.titleSubtext {\n  color: #666666;\n  font-weight: 400;\n  margin-left: 6px;\n}\n\n.subtitle {\n  font-size: 1rem;\n  color: #666666;\n  margin: 0;\n  font-weight: 400;\n}\n\n/* 步骤 */\n.steps {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 8px 16px 16px;\n  max-width: 560px;\n  margin: 0 auto;\n}\n\n.step {\n  padding: 12px 12px;\n  background: #fff;\n  border-radius: 12px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  position: relative;\n  text-align: center;\n  transition: background-color 0.2s ease;\n}\n\n.stepContent {\n  margin-top: 0;\n}\n\n.stepContent h3 {\n  font-size: 1.1rem;\n  font-weight: 500;\n  color: #1a1a1a;\n  margin: 0 0 4px 0;\n}\n\n.stepContent p {\n  color: #666666;\n  margin: 0;\n  font-size: 0.95rem;\n  line-height: 1.4;\n}\n\n.stepNumber {\n  position: absolute;\n  top: 8px;\n  left: 8px;\n  background: #e5e5e5;\n  color: #666666;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 500;\n  font-size: 0.75rem;\n}\n\n/* 行动按钮 */\n.ctaSection {\n  text-align: center;\n  padding: 16px 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  align-items: center;\n}\n\n.primaryBtn {\n  background: #1a1a1a;\n  color: #ffffff;\n  border: none;\n  border-radius: 6px;\n  padding: 10px 18px;\n  font-weight: 500;\n  font-size: 0.95rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  justify-content: center;\n  transition: background-color 0.2s ease;\n  width: 180px;\n  max-width: 90%;\n}\n\n.primaryBtn:hover {\n  background: #333333;\n}\n\n.primaryBtn:active {\n  background: #000000;\n}\n\n.secondaryBtn {\n  background: transparent;\n  color: #666666;\n  border: 1px solid #d5d5d5;\n  border-radius: 6px;\n  padding: 10px 18px;\n  font-weight: 500;\n  font-size: 0.95rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  justify-content: center;\n  transition: all 0.2s ease;\n  width: 180px;\n  max-width: 90%;\n}\n\n.secondaryBtn:hover {\n  background: #fafafa;\n  border-color: #999999;\n}\n\n/* 底部 */\n.footer {\n  text-align: center;\n  padding: 8px 16px 16px;\n  color: #999999;\n  font-size: 0.85rem;\n}\n\n.footer p {\n  margin: 0;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .header {\n    padding: 40px 12px 16px;\n  }\n  \n  .title {\n    font-size: 2rem;\n  }\n  \n  .subtitle {\n    font-size: 1rem;\n  }\n  \n  .steps {\n    padding: 8px 12px 16px;\n  }\n  \n  .step {\n    padding: 12px 12px;\n  }\n  \n  .ctaSection {\n    padding: 16px 12px;\n  }\n}\n\n@media (max-width: 480px) {\n  .header {\n    padding: 32px 12px 14px;\n  }\n  \n  .logoImage {\n    width: 52px;\n    height: 52px;\n  }\n  \n  .title {\n    font-size: 1.7rem;\n  }\n  \n  .primaryBtn, .secondaryBtn {\n    width: 100%;\n    max-width: 280px;\n  }\n}\n\n/* 桌面端更紧凑的步骤布局 */\n@media (min-width: 768px) {\n  .steps {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 10px;\n    max-width: 840px;\n  }\n  .step {\n    text-align: left;\n    padding: 12px;\n  }\n  .stepNumber {\n    top: 10px;\n    left: 10px;\n  }\n}\n\n/* 简化动画 */\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(12px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* 基础进场动画 */\n.logo,\n.title,\n.subtitle,\n.step,\n.ctaSection {\n  opacity: 0;\n  animation: fadeIn 0.5s ease-out forwards;\n}\n\n.logo {\n  animation-delay: 0s;\n}\n\n.title {\n  animation-delay: 0.1s;\n}\n\n.subtitle {\n  animation-delay: 0.2s;\n}\n\n.step:nth-child(1) { \n  animation-delay: 0.3s;\n}\n\n.step:nth-child(2) { \n  animation-delay: 0.4s;\n}\n\n.step:nth-child(3) { \n  animation-delay: 0.5s;\n}\n\n.ctaSection {\n  animation-delay: 0.6s;\n}\n",
  "styles/global.css": ":root {\n  --ion-color-primary: #5d58e0;\n  --ion-color-primary-rgb: 93,88,224;\n  --ion-color-primary-contrast: #ffffff;\n  --ion-color-primary-contrast-rgb: 255,255,255;\n  --ion-color-primary-shade: #4c47d0;\n  --ion-color-primary-tint: #7b68ee;\n\n  --ion-background-color: #f8f9fa;\n  --ion-item-background: #ffffff;\n  --ion-text-color: #000000;\n  --ion-color-light-shade: #e0e0e0;\n  --ion-color-medium: #888888;\n  --ion-color-dark: #222222;\n  --ion-color-dark-tint: #383838;\n  --ion-color-light: #ffffff;\n  --ion-color-light-shade: #f5f5f5;\n}\n\n/* 自动深色模式 */\n@media (prefers-color-scheme: dark) {\n  :root {\n    --ion-background-color: #121212;\n    --ion-item-background: #1e1e1e;\n    --ion-text-color: #ffffff;\n    --ion-color-light-shade: #383838;\n    --ion-color-medium: #b0b0b0;\n    --ion-color-dark: #2a2a2a;\n    --ion-color-dark-tint: #404040;\n    --ion-color-light: #ffffff;\n    --ion-color-light-shade: #cccccc;\n  }\n}\n\n/* 手动深色模式类（如果需要） */\nbody.dark {\n  --ion-background-color: #121212;\n  --ion-item-background: #1e1e1e;\n  --ion-text-color: #ffffff;\n  --ion-color-light-shade: #383838;\n  --ion-color-medium: #b0b0b0;\n  --ion-color-dark: #2a2a2a;\n  --ion-color-dark-tint: #404040;\n  --ion-color-light: #ffffff;\n  --ion-color-light-shade: #cccccc;\n}\n\n.header-no-border .header-background-light {\n    border-bottom: none !important;\n}\n\n.ion-page {\n    background-color: var(--ion-background-color);\n}\n"
}