{
  "app.jsx": "import React from 'react';\nimport { \n    IonTabs, \n    IonTab, \n    IonTabBar, \n    IonTabButton, \n    IonIcon, \n    IonPage, \n    IonContent \n} from '@ionic/react';\nimport { PageHeader } from '@morphixai/components';\nimport { add, addOutline, checkmarkCircle, checkmarkCircleOutline } from 'ionicons/icons';\nimport CouponCreator from './components/CouponCreator';\nimport CouponValidator from './components/CouponValidator';\nimport styles from './styles/App.module.css';\n\n/**\n * 主应用组件\n * \n * 优惠券管理系统，包含创建优惠券和验券管理两个功能模块\n * 使用 IonTabs 布局实现无刷新切换\n */\nexport default function App() {\n    return (\n        <IonTabs>\n            {/* 创建优惠券 Tab */}\n            <IonTab tab=\"create\">\n                <IonPage>\n                    <PageHeader title=\"创建优惠券\" />\n                    <IonContent className={styles.content}>\n                        <CouponCreator />\n                    </IonContent>\n                </IonPage>\n            </IonTab>\n\n            {/* 验券管理 Tab */}\n            <IonTab tab=\"validate\">\n                <IonPage>\n                    <PageHeader title=\"验券管理\" />\n                    <IonContent className={styles.content}>\n                        <CouponValidator />\n                    </IonContent>\n                </IonPage>\n            </IonTab>\n\n            {/* Tab 导航栏 */}\n            <IonTabBar slot=\"bottom\">\n                <IonTabButton tab=\"create\">\n                    <IonIcon icon={add} />\n                    创建优惠券\n                </IonTabButton>\n                <IonTabButton tab=\"validate\">\n                    <IonIcon icon={checkmarkCircle} />\n                    验券管理\n                </IonTabButton>\n            </IonTabBar>\n        </IonTabs>\n    );\n}",
  "components/CouponCreator.jsx": "/**\n * 优惠券创建组件\n * \n * 提供优惠券创建表单，包括金额输入、验证和优惠券生成功能\n * 支持显示生成的优惠券信息和图片保存功能\n */\n\nimport React, { useState } from 'react';\nimport { \n  IonButton, \n  IonInput, \n  IonItem, \n  IonLabel, \n  IonSpinner,\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardTitle,\n  IonText,\n  IonToast\n} from '@ionic/react';\nimport { validateAmount } from '../utils/validators';\nimport useCouponManager from '../hooks/useCouponManager';\nimport useImageGenerator from '../hooks/useImageGenerator';\nimport styles from '../styles/CouponCreator.module.css';\n\nconst CouponCreator = () => {\n  const [amount, setAmount] = useState('');\n  const [amountError, setAmountError] = useState('');\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  \n  const { \n    createCoupon, \n    isLoading: isCouponLoading, \n    error: couponError, \n    currentCoupon,\n    clearError,\n    clearCurrentCoupon\n  } = useCouponManager();\n  \n  const {\n    generateAndSave,\n    isGenerating: isImageGenerating,\n    error: imageError\n  } = useImageGenerator();\n\n  /**\n   * 处理金额输入变化\n   */\n  const handleAmountChange = (e) => {\n    const value = e.detail.value;\n    setAmount(value);\n    \n    // 清除之前的错误\n    if (amountError) {\n      setAmountError('');\n    }\n    if (couponError) {\n      clearError();\n    }\n  };\n\n  /**\n   * 验证金额输入\n   */\n  const validateAmountInput = () => {\n    if (!amount.trim()) {\n      setAmountError('请输入优惠券金额');\n      return false;\n    }\n    \n    const numAmount = parseFloat(amount);\n    if (!validateAmount(numAmount)) {\n      setAmountError('请输入有效的金额（大于0的数字）');\n      return false;\n    }\n    \n    return true;\n  };\n\n  /**\n   * 处理创建优惠券\n   */\n  const handleCreateCoupon = async () => {\n    if (!validateAmountInput()) {\n      return;\n    }\n\n    const numAmount = parseFloat(amount);\n    const coupon = await createCoupon(numAmount);\n    \n    if (coupon) {\n      // 创建成功，清空输入\n      setAmount('');\n      setAmountError('');\n    }\n  };\n\n  /**\n   * 处理保存图片\n   */\n  const handleSaveImage = async () => {\n    if (!currentCoupon) {\n      return;\n    }\n\n    const result = await generateAndSave(currentCoupon);\n    \n    if (result.success) {\n      setToastMessage('优惠券图片已保存到相册');\n      setShowToast(true);\n    } else {\n      setToastMessage(result.error || imageError || '保存图片失败，请重试');\n      setShowToast(true);\n    }\n  };\n\n  /**\n   * 创建新优惠券（清除当前显示的优惠券）\n   */\n  const handleCreateNew = () => {\n    clearCurrentCoupon();\n    setAmount('');\n    setAmountError('');\n  };\n\n  return (\n    <div className={styles.container}>\n      {!currentCoupon ? (\n        // 创建优惠券表单\n        <div className={styles.createForm}>\n          <IonCard className={styles.formCard}>\n            <IonCardHeader>\n              <IonCardTitle>创建优惠券</IonCardTitle>\n            </IonCardHeader>\n            <IonCardContent>\n              <IonItem className={styles.inputItem}>\n                <IonLabel position=\"stacked\">优惠券金额 (元)</IonLabel>\n                <IonInput\n                  type=\"number\"\n                  placeholder=\"请输入金额\"\n                  value={amount}\n                  onIonInput={handleAmountChange}\n                  className={amountError ? styles.inputError : ''}\n                />\n              </IonItem>\n              \n              {amountError && (\n                <IonText color=\"danger\" className={styles.errorText}>\n                  <p>{amountError}</p>\n                </IonText>\n              )}\n              \n              {couponError && (\n                <IonText color=\"danger\" className={styles.errorText}>\n                  <p>{couponError}</p>\n                </IonText>\n              )}\n              \n              <IonButton\n                expand=\"block\"\n                onClick={handleCreateCoupon}\n                disabled={isCouponLoading}\n                className={styles.createButton}\n              >\n                {isCouponLoading ? (\n                  <>\n                    <IonSpinner name=\"crescent\" />\n                    <span className={styles.buttonText}>创建中...</span>\n                  </>\n                ) : (\n                  '创建优惠券'\n                )}\n              </IonButton>\n            </IonCardContent>\n          </IonCard>\n        </div>\n      ) : (\n        // 显示生成的优惠券\n        <div className={styles.couponDisplay}>\n          <IonCard className={styles.couponCard}>\n            <IonCardHeader>\n              <IonCardTitle>优惠券创建成功</IonCardTitle>\n            </IonCardHeader>\n            <IonCardContent>\n              <div className={styles.couponInfo}>\n                <div className={styles.amountSection}>\n                  <IonText className={styles.amountLabel}>\n                    <p>优惠金额</p>\n                  </IonText>\n                  <IonText className={styles.amountValue}>\n                    <h2>¥{currentCoupon.amount}</h2>\n                  </IonText>\n                </div>\n                \n                <div className={styles.codeSection}>\n                  <IonText className={styles.codeLabel}>\n                    <p>优惠券编码</p>\n                  </IonText>\n                  <IonText className={styles.codeValue}>\n                    <h3>{currentCoupon.code}</h3>\n                  </IonText>\n                </div>\n              </div>\n              \n              <div className={styles.actionButtons}>\n                <IonButton\n                  expand=\"block\"\n                  fill=\"solid\"\n                  onClick={handleSaveImage}\n                  disabled={isImageGenerating}\n                  className={styles.saveButton}\n                >\n                  {isImageGenerating ? (\n                    <>\n                      <IonSpinner name=\"crescent\" />\n                      <span className={styles.buttonText}>保存中...</span>\n                    </>\n                  ) : (\n                    '保存图片到相册'\n                  )}\n                </IonButton>\n                \n                <IonButton\n                  expand=\"block\"\n                  fill=\"outline\"\n                  onClick={handleCreateNew}\n                  className={styles.newButton}\n                >\n                  创建新优惠券\n                </IonButton>\n              </div>\n            </IonCardContent>\n          </IonCard>\n        </div>\n      )}\n      \n      {/* Toast 提示 */}\n      <IonToast\n        isOpen={showToast}\n        onDidDismiss={() => setShowToast(false)}\n        message={toastMessage}\n        duration={3000}\n        position=\"top\"\n      />\n    </div>\n  );\n};\n\nexport default CouponCreator;",
  "components/CouponValidator.jsx": "/**\n * 优惠券验证组件\n * \n * 提供优惠券验证功能，包括编码输入、查询验证和使用操作\n * 支持显示验证结果和二次确认验券功能\n */\n\nimport React, { useState } from 'react';\nimport { \n  IonButton, \n  IonInput, \n  IonItem, \n  IonLabel, \n  IonSpinner,\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardTitle,\n  IonText,\n  IonToast,\n  IonAlert\n} from '@ionic/react';\nimport { validateCouponCode } from '../utils/validators';\nimport useCouponManager from '../hooks/useCouponManager';\nimport styles from '../styles/CouponValidator.module.css';\n\nconst CouponValidator = () => {\n  const [inputCode, setInputCode] = useState('');\n  const [codeError, setCodeError] = useState('');\n  const [validationResult, setValidationResult] = useState(null);\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  \n  const { \n    validateCoupon, \n    useCoupon,\n    isLoading, \n    error: serviceError, \n    clearError\n  } = useCouponManager();\n\n  /**\n   * 处理编码输入变化\n   */\n  const handleCodeChange = (e) => {\n    const value = e.detail.value.toUpperCase(); // 转换为大写\n    setInputCode(value);\n    \n    // 清除之前的错误和结果\n    if (codeError) {\n      setCodeError('');\n    }\n    if (serviceError) {\n      clearError();\n    }\n    if (validationResult) {\n      setValidationResult(null);\n    }\n  };\n\n  /**\n   * 验证编码输入\n   */\n  const validateCodeInput = () => {\n    if (!inputCode.trim()) {\n      setCodeError('请输入优惠券编码');\n      return false;\n    }\n    \n    if (!validateCouponCode(inputCode)) {\n      setCodeError('请输入6位有效编码（字母和数字）');\n      return false;\n    }\n    \n    return true;\n  };\n\n  /**\n   * 处理查询优惠券\n   */\n  const handleValidateCoupon = async () => {\n    if (!validateCodeInput()) {\n      return;\n    }\n\n    const result = await validateCoupon(inputCode);\n    \n    if (result) {\n      setValidationResult(result);\n      setCodeError('');\n    }\n  };\n\n  /**\n   * 处理验券操作（显示确认对话框）\n   */\n  const handleUseCoupon = () => {\n    setShowConfirmDialog(true);\n  };\n\n  /**\n   * 确认验券操作\n   */\n  const confirmUseCoupon = async () => {\n    setShowConfirmDialog(false);\n    \n    const success = await useCoupon(inputCode);\n    \n    if (success) {\n      // 更新验证结果状态\n      setValidationResult(prev => ({\n        ...prev,\n        coupon: {\n          ...prev.coupon,\n          isUsed: true,\n          usedAt: new Date()\n        },\n        message: '优惠券已使用',\n        canUse: false\n      }));\n      \n      setToastMessage('验券成功！优惠券已使用');\n      setShowToast(true);\n    } else {\n      setToastMessage(serviceError || '验券失败，请重试');\n      setShowToast(true);\n    }\n  };\n\n  /**\n   * 取消验券操作\n   */\n  const cancelUseCoupon = () => {\n    setShowConfirmDialog(false);\n  };\n\n  /**\n   * 重新查询（清除当前结果）\n   */\n  const handleNewQuery = () => {\n    setInputCode('');\n    setValidationResult(null);\n    setCodeError('');\n    clearError();\n  };\n\n  return (\n    <div className={styles.container}>\n      {!validationResult ? (\n        // 验券输入表单\n        <div className={styles.queryForm}>\n          <IonCard className={styles.formCard}>\n            <IonCardHeader>\n              <IonCardTitle>验券查询</IonCardTitle>\n            </IonCardHeader>\n            <IonCardContent>\n              <IonItem className={styles.inputItem}>\n                <IonLabel position=\"stacked\">优惠券编码</IonLabel>\n                <IonInput\n                  type=\"text\"\n                  placeholder=\"请输入6位编码\"\n                  value={inputCode}\n                  onIonInput={handleCodeChange}\n                  maxlength={6}\n                  className={codeError ? styles.inputError : ''}\n                />\n              </IonItem>\n              \n              {codeError && (\n                <IonText color=\"danger\" className={styles.errorText}>\n                  <p>{codeError}</p>\n                </IonText>\n              )}\n              \n              {serviceError && (\n                <IonText color=\"danger\" className={styles.errorText}>\n                  <p>{serviceError}</p>\n                </IonText>\n              )}\n              \n              <IonButton\n                expand=\"block\"\n                onClick={handleValidateCoupon}\n                disabled={isLoading}\n                className={styles.queryButton}\n              >\n                {isLoading ? (\n                  <>\n                    <IonSpinner name=\"crescent\" />\n                    <span className={styles.buttonText}>查询中...</span>\n                  </>\n                ) : (\n                  '查询优惠券'\n                )}\n              </IonButton>\n            </IonCardContent>\n          </IonCard>\n        </div>\n      ) : (\n        // 显示验证结果\n        <div className={styles.resultDisplay}>\n          <IonCard className={styles.resultCard}>\n            <IonCardHeader>\n              <IonCardTitle>验券结果</IonCardTitle>\n            </IonCardHeader>\n            <IonCardContent>\n              {validationResult.isValid ? (\n                <div className={styles.validResult}>\n                  <div className={styles.couponInfo}>\n                    <div className={styles.codeSection}>\n                      <IonText className={styles.codeLabel}>\n                        <p>优惠券编码</p>\n                      </IonText>\n                      <IonText className={styles.codeValue}>\n                        <h3>{validationResult.coupon.code}</h3>\n                      </IonText>\n                    </div>\n                    \n                    <div className={styles.amountSection}>\n                      <IonText className={styles.amountLabel}>\n                        <p>优惠金额</p>\n                      </IonText>\n                      <IonText className={styles.amountValue}>\n                        <h2>¥{validationResult.coupon.amount}</h2>\n                      </IonText>\n                    </div>\n                    \n                    <div className={styles.statusSection}>\n                      <IonText className={styles.statusLabel}>\n                        <p>使用状态</p>\n                      </IonText>\n                      <IonText \n                        className={`${styles.statusValue} ${\n                          validationResult.coupon.isUsed ? styles.usedStatus : styles.availableStatus\n                        }`}\n                      >\n                        <p>{validationResult.coupon.isUsed ? '已使用' : '未使用'}</p>\n                      </IonText>\n                    </div>\n                  </div>\n                  \n                  <div className={styles.messageSection}>\n                    <IonText \n                      color={validationResult.canUse ? 'success' : 'medium'}\n                      className={styles.messageText}\n                    >\n                      <p>{validationResult.message}</p>\n                    </IonText>\n                  </div>\n                  \n                  <div className={styles.actionButtons}>\n                    {validationResult.canUse && (\n                      <IonButton\n                        expand=\"block\"\n                        fill=\"solid\"\n                        color=\"primary\"\n                        onClick={handleUseCoupon}\n                        disabled={isLoading}\n                        className={styles.useButton}\n                      >\n                        验券使用\n                      </IonButton>\n                    )}\n                    \n                    <IonButton\n                      expand=\"block\"\n                      fill=\"outline\"\n                      onClick={handleNewQuery}\n                      className={styles.newQueryButton}\n                    >\n                      查询其他优惠券\n                    </IonButton>\n                  </div>\n                </div>\n              ) : (\n                // 无效优惠券结果\n                <div className={styles.invalidResult}>\n                  <div className={styles.messageSection}>\n                    <IonText color=\"danger\" className={styles.errorMessage}>\n                      <h3>{validationResult.message}</h3>\n                    </IonText>\n                  </div>\n                  \n                  <div className={styles.actionButtons}>\n                    <IonButton\n                      expand=\"block\"\n                      fill=\"outline\"\n                      onClick={handleNewQuery}\n                      className={styles.newQueryButton}\n                    >\n                      重新查询\n                    </IonButton>\n                  </div>\n                </div>\n              )}\n            </IonCardContent>\n          </IonCard>\n        </div>\n      )}\n      \n      {/* 验券确认对话框 */}\n      <IonAlert\n        isOpen={showConfirmDialog}\n        onDidDismiss={cancelUseCoupon}\n        header=\"确认验券\"\n        message={`确定要使用这张 ¥${validationResult?.coupon?.amount} 的优惠券吗？使用后将无法撤销。`}\n        buttons={[\n          {\n            text: '取消',\n            role: 'cancel',\n            handler: cancelUseCoupon\n          },\n          {\n            text: '确认使用',\n            handler: confirmUseCoupon\n          }\n        ]}\n      />\n      \n      {/* Toast 提示 */}\n      <IonToast\n        isOpen={showToast}\n        onDidDismiss={() => setShowToast(false)}\n        message={toastMessage}\n        duration={3000}\n        position=\"top\"\n      />\n    </div>\n  );\n};\n\nexport default CouponValidator;",
  "components/Welcome.jsx": "import React from 'react';\nimport { IonIcon } from '@ionic/react';\nimport { downloadOutline, globeOutline} from 'ionicons/icons';\nimport styles from '../styles/Welcome.module.css';\n\n/**\n * 欢迎组件 - 仅用于演示\n * \n * 这个组件用于展示 Morphix AI Code 的功能和界面设计\n * 在实际开发中，请删除此组件并创建您自己的应用界面\n * \n * @component\n * @returns {JSX.Element} 欢迎页面组件\n */\nexport default function Welcome() {\n    const openDownload = () => {\n        window.open('https://baibian.app/mobile-download', '_blank');\n    };\n\n    const openWebsite = () => {\n        window.open('https://baibian.app/', '_blank');\n    };\n\n    return (\n        <div className={styles.welcomeContainer}>\n\n            {/* 头部 */}\n            <div className={styles.header}>\n                <div className={styles.logo}>\n                    <img\n                        src=\"https://app-shell.focusbe.com/Icon-60@3x.png\"\n                        alt=\"Morphix AI Logo\"\n                        className={styles.logoImage}\n                        onError={(e) => {\n                            e.target.style.display = 'none';\n                        }}\n                    />\n                    <div className={styles.logoGlow}></div>\n                </div>\n\n                <h1 className={styles.title}>\n                    <span className={styles.titleGradient}>Morphix AI</span>\n                    <span className={styles.titleSubtext}>Code</span>\n                </h1>\n                <p className={styles.subtitle}>Create your own app with AI</p>\n            </div>\n\n            {/* 三个步骤 */}\n            <div className={styles.steps}>\n                <div className={styles.step}>\n                    <div className={styles.stepNumber}>1</div>\n                    <div className={styles.stepContent}>\n                        <h3>Describe</h3>\n                        <p>Your app idea</p>\n                    </div>\n                </div>\n\n                <div className={styles.step}>\n                    <div className={styles.stepNumber}>2</div>\n                    <div className={styles.stepContent}>\n                        <h3>Generate</h3>\n                        <p>AI builds a preview</p>\n                    </div>\n                </div>\n\n                <div className={styles.step}>\n                    <div className={styles.stepNumber}>3</div>\n                    <div className={styles.stepContent}>\n                        <h3>Launch</h3>\n                        <p>Use in Morphix</p>\n                    </div>\n                </div>\n            </div>\n\n            {/* 行动按钮 */}\n            <div className={styles.ctaSection}>\n                <button \n                    className={styles.primaryBtn}\n                    onClick={openDownload}\n                >\n                    <IonIcon icon={downloadOutline} />\n                    Download Morphix AI\n                </button>\n                \n                <button \n                    className={styles.secondaryBtn}\n                    onClick={openWebsite}\n                >\n                    <IonIcon icon={globeOutline} />\n                    Visit Website\n                </button>\n            </div>\n\n            {/* 底部 */}\n            <div className={styles.footer}>\n                <p>2024 Morphix AI. Empowering everyone to create apps.</p>\n            </div>\n        </div>\n    );\n}\n",
  "hooks/index.js": "// Custom hooks export file\nexport { default as useCouponManager } from './useCouponManager';\nexport { default as useImageGenerator } from './useImageGenerator';",
  "hooks/useCouponManager.js": "/**\n * 优惠券管理自定义Hook\n * 封装优惠券创建、查询、使用逻辑和状态管理\n */\n\nimport { useState, useCallback } from 'react';\nimport CouponService from '../services/CouponService';\n\nconst useCouponManager = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [coupons, setCoupons] = useState([]);\n  const [currentCoupon, setCurrentCoupon] = useState(null);\n\n  // 创建优惠券服务实例\n  const couponService = new CouponService();\n\n  /**\n   * 创建新优惠券\n   * @param {number} amount - 优惠券金额\n   * @returns {Promise<Object|null>} 创建的优惠券对象\n   */\n  const createCoupon = useCallback(async (amount) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const coupon = await couponService.createCoupon(amount);\n      setCurrentCoupon(coupon);\n      \n      // 更新优惠券列表\n      setCoupons(prev => [coupon, ...prev]);\n      \n      return coupon;\n    } catch (err) {\n      setError(err.message);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  /**\n   * 验证优惠券\n   * @param {string} code - 优惠券编码\n   * @returns {Promise<Object|null>} 验证结果\n   */\n  const validateCoupon = useCallback(async (code) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const result = await couponService.validateCoupon(code);\n      return result;\n    } catch (err) {\n      setError(err.message);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  /**\n   * 使用优惠券\n   * @param {string} code - 优惠券编码\n   * @returns {Promise<boolean>} 是否成功使用\n   */\n  const useCoupon = useCallback(async (code) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const success = await couponService.useCoupon(code);\n      \n      if (success) {\n        // 更新本地状态中的优惠券\n        setCoupons(prev => prev.map(coupon => \n          coupon.code === code \n            ? { ...coupon, isUsed: true, usedAt: new Date() }\n            : coupon\n        ));\n      }\n      \n      return success;\n    } catch (err) {\n      setError(err.message);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  /**\n   * 获取单个优惠券\n   * @param {string} code - 优惠券编码\n   * @returns {Promise<Object|null>} 优惠券对象\n   */\n  const getCoupon = useCallback(async (code) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const coupon = await couponService.getCoupon(code);\n      return coupon;\n    } catch (err) {\n      setError(err.message);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  /**\n   * 获取所有优惠券\n   * @returns {Promise<Array>} 优惠券列表\n   */\n  const getAllCoupons = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const allCoupons = await couponService.getAllCoupons();\n      setCoupons(allCoupons);\n      return allCoupons;\n    } catch (err) {\n      setError(err.message);\n      return [];\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  /**\n   * 清除错误状态\n   */\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  /**\n   * 清除当前优惠券\n   */\n  const clearCurrentCoupon = useCallback(() => {\n    setCurrentCoupon(null);\n  }, []);\n\n  return {\n    // 状态\n    isLoading,\n    error,\n    coupons,\n    currentCoupon,\n    \n    // 操作方法\n    createCoupon,\n    validateCoupon,\n    useCoupon,\n    getCoupon,\n    getAllCoupons,\n    clearError,\n    clearCurrentCoupon\n  };\n};\n\nexport default useCouponManager;",
  "hooks/useImageGenerator.js": "/**\n * 图片生成自定义Hook\n * 封装Canvas图片生成逻辑和状态管理\n */\n\nimport { useState, useCallback } from 'react';\nimport ImageService from '../services/ImageService';\n\nconst useImageGenerator = () => {\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [generatedImage, setGeneratedImage] = useState(null);\n\n  // 创建图片服务实例\n  const imageService = new ImageService();\n\n  /**\n   * 生成优惠券图片\n   * @param {Object} coupon - 优惠券对象\n   * @param {Object} config - 图片配置（可选）\n   * @returns {Promise<string|null>} Base64格式的图片数据\n   */\n  const generateImage = useCallback(async (coupon, config = null) => {\n    setIsGenerating(true);\n    setError(null);\n    \n    try {\n      const base64Data = await imageService.generateCouponImage(coupon, config);\n      setGeneratedImage(base64Data);\n      return base64Data;\n    } catch (err) {\n      setError(err.message);\n      return null;\n    } finally {\n      setIsGenerating(false);\n    }\n  }, []);\n\n  /**\n   * 保存图片到相册\n   * @param {string} base64Data - Base64格式的图片数据\n   * @param {string} filename - 文件名（可选）\n   * @returns {Promise<Object>} 保存结果\n   */\n  const saveToAlbum = useCallback(async (base64Data, filename = null) => {\n    setIsSaving(true);\n    setError(null);\n    \n    try {\n      const result = await imageService.saveImageToAlbum(base64Data, filename);\n      \n      if (!result.success && result.error) {\n        setError(result.error);\n      }\n      \n      return result;\n    } catch (err) {\n      setError(err.message);\n      return {\n        success: false,\n        filename: filename || null,\n        error: err.message\n      };\n    } finally {\n      setIsSaving(false);\n    }\n  }, []);\n\n  /**\n   * 生成并保存优惠券图片\n   * @param {Object} coupon - 优惠券对象\n   * @param {Object} config - 图片配置（可选）\n   * @returns {Promise<Object>} 生成和保存结果\n   */\n  const generateAndSave = useCallback(async (coupon, config = null) => {\n    setIsGenerating(true);\n    setIsSaving(true);\n    setError(null);\n    \n    try {\n      const result = await imageService.generateAndSaveImage(coupon, config);\n      \n      if (result.success && result.base64Data) {\n        setGeneratedImage(result.base64Data);\n      }\n      \n      return result;\n    } catch (err) {\n      setError(err.message);\n      return {\n        success: false,\n        base64Data: null,\n        filename: null,\n        error: err.message\n      };\n    } finally {\n      setIsGenerating(false);\n      setIsSaving(false);\n    }\n  }, []);\n\n  /**\n   * 清除生成的图片\n   */\n  const clearImage = useCallback(() => {\n    setGeneratedImage(null);\n  }, []);\n\n  /**\n   * 清除错误状态\n   */\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  return {\n    // 状态\n    isGenerating,\n    isSaving,\n    error,\n    generatedImage,\n    \n    // 操作方法\n    generateImage,\n    saveToAlbum,\n    generateAndSave,\n    clearImage,\n    clearError\n  };\n};\n\nexport default useImageGenerator;",
  "services/CouponService.js": "/**\n * 优惠券业务服务\n * 负责优惠券的创建、验证和状态管理\n */\n\nimport { COUPON_CODE_LENGTH, COUPON_CODE_CHARS } from '../utils/constants';\nimport { createCoupon, createValidationResult, CouponErrorType } from '../utils/types';\nimport { validateAmount, validateCouponCode } from '../utils/validators';\nimport StorageService from './StorageService';\n\nclass CouponService {\n  constructor() {\n    this.storageService = new StorageService();\n  }\n\n  /**\n   * 生成6位唯一优惠券编码\n   * @returns {string} 6位编码\n   */\n  generateCouponCode() {\n    let code = '';\n    for (let i = 0; i < COUPON_CODE_LENGTH; i++) {\n      const randomIndex = Math.floor(Math.random() * COUPON_CODE_CHARS.length);\n      code += COUPON_CODE_CHARS[randomIndex];\n    }\n    return code;\n  }\n\n  /**\n   * 创建新优惠券\n   * @param {number} amount - 优惠券金额\n   * @returns {Promise<Object>} 创建的优惠券对象\n   * @throws {Error} 当金额无效时抛出错误\n   */\n  async createCoupon(amount) {\n    if (!validateAmount(amount)) {\n      throw new Error('Invalid amount format');\n    }\n\n    // 生成唯一编码，确保不重复\n    let code;\n    let attempts = 0;\n    const maxAttempts = 10;\n\n    do {\n      code = this.generateCouponCode();\n      attempts++;\n      \n      if (attempts > maxAttempts) {\n        throw new Error('Failed to generate unique coupon code');\n      }\n    } while (await this.storageService.getCoupon(code));\n\n    const coupon = createCoupon({\n      id: code, // 使用编码作为ID\n      code,\n      amount: Number(amount),\n      isUsed: false,\n      createdAt: new Date()\n    });\n\n    return await this.storageService.saveCoupon(coupon);\n  }\n\n  /**\n   * 验证优惠券编码\n   * @param {string} code - 优惠券编码\n   * @returns {Promise<Object>} 验证结果\n   */\n  async validateCoupon(code) {\n    if (!validateCouponCode(code)) {\n      return createValidationResult({\n        isValid: false,\n        message: '优惠券编码格式无效',\n        canUse: false\n      });\n    }\n\n    try {\n      const coupon = await this.storageService.getCoupon(code);\n      \n      if (!coupon) {\n        return createValidationResult({\n          isValid: false,\n          message: '优惠券不存在',\n          canUse: false\n        });\n      }\n\n      if (coupon.isUsed) {\n        return createValidationResult({\n          isValid: true,\n          coupon,\n          message: '优惠券已使用',\n          canUse: false\n        });\n      }\n\n      return createValidationResult({\n        isValid: true,\n        coupon,\n        message: '优惠券有效',\n        canUse: true\n      });\n    } catch (error) {\n      return createValidationResult({\n        isValid: false,\n        message: '查询优惠券时发生错误',\n        canUse: false\n      });\n    }\n  }\n\n  /**\n   * 使用优惠券\n   * @param {string} code - 优惠券编码\n   * @returns {Promise<boolean>} 是否成功使用\n   */\n  async useCoupon(code) {\n    try {\n      const coupon = await this.storageService.getCoupon(code);\n      \n      if (!coupon) {\n        throw new Error('Coupon not found');\n      }\n\n      if (coupon.isUsed) {\n        throw new Error('Coupon already used');\n      }\n\n      const updatedCoupon = await this.storageService.updateCoupon(code, {\n        isUsed: true,\n        usedAt: new Date()\n      });\n\n      return !!updatedCoupon;\n    } catch (error) {\n      console.error('Error using coupon:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 获取所有优惠券\n   * @returns {Promise<Array>} 优惠券列表\n   */\n  async getAllCoupons() {\n    try {\n      return await this.storageService.getAllCoupons();\n    } catch (error) {\n      console.error('Error getting all coupons:', error);\n      return [];\n    }\n  }\n\n  /**\n   * 获取单个优惠券\n   * @param {string} code - 优惠券编码\n   * @returns {Promise<Object|null>} 优惠券对象或null\n   */\n  async getCoupon(code) {\n    try {\n      return await this.storageService.getCoupon(code);\n    } catch (error) {\n      console.error('Error getting coupon:', error);\n      return null;\n    }\n  }\n}\n\nexport default CouponService;",
  "services/ImageService.js": "/**\n * 图片生成服务\n * 基于Canvas实现优惠券图片生成和AppSdk.fileSystem.saveImageToAlbum保存功能\n */\n\nimport AppSdk from '@morphixai/app-sdk';\nimport { createCouponImageConfig, CouponErrorType, createCouponError } from '../utils/types';\n\nclass ImageService {\n  constructor() {\n    // 默认图片配置\n    this.defaultConfig = createCouponImageConfig();\n  }\n\n  /**\n   * 生成优惠券图片\n   * @param {Object} coupon - 优惠券对象\n   * @param {Object} config - 可选的图片配置\n   * @returns {Promise<string>} Base64编码的图片数据\n   */\n  async generateCouponImage(coupon, config = {}) {\n    try {\n      const imageConfig = { ...this.defaultConfig, ...config };\n      \n      // 创建Canvas元素\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      \n      // 设置画布尺寸\n      canvas.width = imageConfig.width;\n      canvas.height = imageConfig.height;\n      \n      // 绘制背景渐变\n      this._drawBackground(ctx, imageConfig);\n      \n      // 绘制优惠券内容\n      this._drawCouponContent(ctx, coupon, imageConfig);\n      \n      // 转换为Base64\n      const base64Data = canvas.toDataURL('image/png');\n      \n      return base64Data;\n    } catch (error) {\n      console.error('Error generating coupon image:', error);\n      throw createCouponError({\n        type: CouponErrorType.IMAGE_GENERATION_ERROR,\n        message: 'Failed to generate coupon image',\n        details: error\n      });\n    }\n  }\n\n  /**\n   * 保存图片到设备相册\n   * @param {string} base64Data - Base64编码的图片数据\n   * @param {string} filename - 可选的文件名\n   * @returns {Promise<Object>} 保存结果\n   */\n  async saveImageToAlbum(base64Data, filename) {\n    try {\n      // 提取纯Base64数据（去除data:image/png;base64,前缀）\n      const pureBase64 = base64Data.replace(/^data:image\\/[a-z]+;base64,/, '');\n      \n      // 生成文件名（如果未提供）\n      const finalFilename = filename || `coupon_${Date.now()}.png`;\n      \n      // 调用AppSdk保存到相册\n      const result = await AppSdk.fileSystem.saveImageToAlbum({\n        base64Data: pureBase64,\n        filename: finalFilename\n      });\n      \n      return {\n        success: result.success,\n        filename: finalFilename,\n        error: result.error || null\n      };\n    } catch (error) {\n      console.error('Error saving image to album:', error);\n      return {\n        success: false,\n        filename: filename || null,\n        error: error.message || 'Failed to save image'\n      };\n    }\n  }\n\n  /**\n   * 生成并保存优惠券图片到相册\n   * @param {Object} coupon - 优惠券对象\n   * @param {Object} config - 可选的图片配置\n   * @returns {Promise<Object>} 生成和保存结果\n   */\n  async generateAndSaveImage(coupon, config = {}) {\n    try {\n      // 生成图片\n      const base64Data = await this.generateCouponImage(coupon, config);\n      \n      // 生成文件名\n      const filename = `coupon_${coupon.code}_${Date.now()}.png`;\n      \n      // 保存到相册\n      const saveResult = await this.saveImageToAlbum(base64Data, filename);\n      \n      return {\n        success: saveResult.success,\n        base64Data: saveResult.success ? base64Data : null,\n        filename: saveResult.filename,\n        error: saveResult.error\n      };\n    } catch (error) {\n      console.error('Error generating and saving image:', error);\n      return {\n        success: false,\n        base64Data: null,\n        filename: null,\n        error: error.message || 'Failed to generate and save image'\n      };\n    }\n  }\n\n  /**\n   * 绘制背景渐变\n   * @param {CanvasRenderingContext2D} ctx - Canvas上下文\n   * @param {Object} config - 图片配置\n   * @private\n   */\n  _drawBackground(ctx, config) {\n    // 创建渐变背景\n    const gradient = ctx.createLinearGradient(0, 0, config.width, config.height);\n    gradient.addColorStop(0, '#4F46E5'); // 蓝紫色\n    gradient.addColorStop(1, '#7C3AED'); // 紫色\n    \n    // 填充背景\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, config.width, config.height);\n    \n    // 添加圆角效果（通过绘制圆角矩形）\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-in';\n    this._drawRoundedRect(ctx, 0, 0, config.width, config.height, 12);\n    ctx.restore();\n  }\n\n  /**\n   * 绘制优惠券内容\n   * @param {CanvasRenderingContext2D} ctx - Canvas上下文\n   * @param {Object} coupon - 优惠券对象\n   * @param {Object} config - 图片配置\n   * @private\n   */\n  _drawCouponContent(ctx, coupon, config) {\n    ctx.fillStyle = config.textColor;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    \n    const centerX = config.width / 2;\n    const centerY = config.height / 2;\n    \n    // 绘制\"优惠券\"标题\n    ctx.font = `${config.fontSize.label}px -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif`;\n    ctx.fillText('优惠券', centerX, centerY - 50);\n    \n    // 绘制金额\n    ctx.font = `bold ${config.fontSize.amount}px -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif`;\n    ctx.fillText(`¥${coupon.amount}`, centerX, centerY - 10);\n    \n    // 绘制编码标签\n    ctx.font = `${config.fontSize.label}px -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif`;\n    ctx.fillText('优惠券编码', centerX, centerY + 25);\n    \n    // 绘制编码\n    ctx.font = `${config.fontSize.code}px 'Courier New', monospace`;\n    ctx.fillText(coupon.code, centerX, centerY + 50);\n    \n    // 如果已使用，添加水印\n    if (coupon.isUsed) {\n      this._drawUsedWatermark(ctx, config);\n    }\n  }\n\n  /**\n   * 绘制\"已使用\"水印\n   * @param {CanvasRenderingContext2D} ctx - Canvas上下文\n   * @param {Object} config - 图片配置\n   * @private\n   */\n  _drawUsedWatermark(ctx, config) {\n    ctx.save();\n    \n    // 设置半透明红色\n    ctx.fillStyle = 'rgba(239, 68, 68, 0.8)';\n    ctx.strokeStyle = 'rgba(239, 68, 68, 1)';\n    ctx.lineWidth = 2;\n    \n    // 旋转画布\n    ctx.translate(config.width / 2, config.height / 2);\n    ctx.rotate(-Math.PI / 6); // -30度\n    \n    // 绘制水印文字\n    ctx.font = `bold 28px -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif`;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    \n    // 绘制文字描边和填充\n    ctx.strokeText('已使用', 0, 0);\n    ctx.fillText('已使用', 0, 0);\n    \n    ctx.restore();\n  }\n\n  /**\n   * 绘制圆角矩形\n   * @param {CanvasRenderingContext2D} ctx - Canvas上下文\n   * @param {number} x - X坐标\n   * @param {number} y - Y坐标\n   * @param {number} width - 宽度\n   * @param {number} height - 高度\n   * @param {number} radius - 圆角半径\n   * @private\n   */\n  _drawRoundedRect(ctx, x, y, width, height, radius) {\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  /**\n   * 获取默认图片配置\n   * @returns {Object} 默认配置对象\n   */\n  getDefaultConfig() {\n    return { ...this.defaultConfig };\n  }\n\n  /**\n   * 更新默认图片配置\n   * @param {Object} newConfig - 新的配置\n   */\n  updateDefaultConfig(newConfig) {\n    this.defaultConfig = { ...this.defaultConfig, ...newConfig };\n  }\n}\n\nexport default ImageService;",
  "services/StorageService.js": "/**\n * 云端存储服务\n * 基于AppSdk.appData实现优惠券数据的云端存储\n */\n\nimport { STORAGE_COLLECTION_NAME } from '../utils/constants';\n\nclass StorageService {\n  constructor() {\n    this.collectionName = STORAGE_COLLECTION_NAME;\n  }\n\n  /**\n   * 保存优惠券到云端存储\n   * @param {Object} coupon - 优惠券对象\n   * @returns {Promise<Object>} 保存的优惠券对象\n   */\n  async saveCoupon(coupon) {\n    try {\n      // 使用优惠券编码作为记录ID\n      const result = await AppSdk.appData.setRecord(\n        this.collectionName,\n        coupon.code,\n        {\n          ...coupon,\n          // 确保日期对象被正确序列化\n          createdAt: coupon.createdAt.toISOString(),\n          usedAt: coupon.usedAt ? coupon.usedAt.toISOString() : null\n        }\n      );\n      \n      return this._deserializeCoupon(result);\n    } catch (error) {\n      console.error('Error saving coupon:', error);\n      throw new Error('Failed to save coupon');\n    }\n  }\n\n  /**\n   * 从云端存储获取优惠券\n   * @param {string} code - 优惠券编码\n   * @returns {Promise<Object|null>} 优惠券对象或null\n   */\n  async getCoupon(code) {\n    try {\n      const result = await AppSdk.appData.getRecord(this.collectionName, code);\n      return result ? this._deserializeCoupon(result) : null;\n    } catch (error) {\n      console.error('Error getting coupon:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 获取所有优惠券\n   * @returns {Promise<Array>} 优惠券列表\n   */\n  async getAllCoupons() {\n    try {\n      const result = await AppSdk.appData.getRecords(this.collectionName);\n      return result.map(record => this._deserializeCoupon(record));\n    } catch (error) {\n      console.error('Error getting all coupons:', error);\n      return [];\n    }\n  }\n\n  /**\n   * 更新优惠券\n   * @param {string} code - 优惠券编码\n   * @param {Object} updates - 更新数据\n   * @returns {Promise<Object|null>} 更新后的优惠券对象\n   */\n  async updateCoupon(code, updates) {\n    try {\n      const existingCoupon = await this.getCoupon(code);\n      if (!existingCoupon) {\n        return null;\n      }\n\n      const updatedCoupon = {\n        ...existingCoupon,\n        ...updates\n      };\n\n      // 如果更新包含日期，确保正确序列化\n      const serializedUpdates = {\n        ...updatedCoupon,\n        createdAt: updatedCoupon.createdAt.toISOString(),\n        usedAt: updatedCoupon.usedAt ? updatedCoupon.usedAt.toISOString() : null\n      };\n\n      const result = await AppSdk.appData.setRecord(\n        this.collectionName,\n        code,\n        serializedUpdates\n      );\n\n      return this._deserializeCoupon(result);\n    } catch (error) {\n      console.error('Error updating coupon:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 删除优惠券\n   * @param {string} code - 优惠券编码\n   * @returns {Promise<boolean>} 是否成功删除\n   */\n  async deleteCoupon(code) {\n    try {\n      await AppSdk.appData.deleteRecord(this.collectionName, code);\n      return true;\n    } catch (error) {\n      console.error('Error deleting coupon:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 反序列化优惠券数据（将字符串日期转换为Date对象）\n   * @param {Object} data - 序列化的优惠券数据\n   * @returns {Object} 反序列化的优惠券对象\n   * @private\n   */\n  _deserializeCoupon(data) {\n    return {\n      ...data,\n      createdAt: new Date(data.createdAt),\n      usedAt: data.usedAt ? new Date(data.usedAt) : null\n    };\n  }\n}\n\nexport default StorageService;",
  "services/__test_ImageService.js": "/**\n * ImageService 集成测试\n * 用于验证图片生成和保存功能\n */\n\nimport ImageService from './ImageService';\nimport { createCoupon } from '../utils/types';\n\n/**\n * 测试图片生成功能\n */\nasync function testImageGeneration() {\n  console.log('Testing ImageService...');\n  \n  const imageService = new ImageService();\n  \n  // 创建测试优惠券\n  const testCoupon = createCoupon({\n    id: 'test-001',\n    code: 'ABC123',\n    amount: 50,\n    isUsed: false,\n    createdAt: new Date()\n  });\n  \n  try {\n    // 测试图片生成\n    console.log('1. Testing image generation...');\n    const base64Data = await imageService.generateCouponImage(testCoupon);\n    console.log('✓ Image generated successfully');\n    console.log('Base64 data length:', base64Data.length);\n    \n    // 测试已使用优惠券的图片生成\n    console.log('2. Testing used coupon image generation...');\n    const usedCoupon = { ...testCoupon, isUsed: true, usedAt: new Date() };\n    const usedBase64Data = await imageService.generateCouponImage(usedCoupon);\n    console.log('✓ Used coupon image generated successfully');\n    \n    // 测试自定义配置\n    console.log('3. Testing custom config...');\n    const customConfig = {\n      width: 500,\n      height: 250,\n      fontSize: { amount: 36, code: 28, label: 18 }\n    };\n    const customBase64Data = await imageService.generateCouponImage(testCoupon, customConfig);\n    console.log('✓ Custom config image generated successfully');\n    \n    // 测试保存到相册功能（注意：这需要在真实设备上测试）\n    console.log('4. Testing save to album...');\n    const saveResult = await imageService.saveImageToAlbum(base64Data, 'test_coupon.png');\n    console.log('Save result:', saveResult);\n    \n    // 测试生成并保存功能\n    console.log('5. Testing generate and save...');\n    const generateAndSaveResult = await imageService.generateAndSaveImage(testCoupon);\n    console.log('Generate and save result:', generateAndSaveResult);\n    \n    console.log('✓ All ImageService tests completed successfully!');\n    return true;\n    \n  } catch (error) {\n    console.error('✗ ImageService test failed:', error);\n    return false;\n  }\n}\n\n/**\n * 测试配置管理功能\n */\nfunction testConfigManagement() {\n  console.log('Testing config management...');\n  \n  const imageService = new ImageService();\n  \n  // 获取默认配置\n  const defaultConfig = imageService.getDefaultConfig();\n  console.log('Default config:', defaultConfig);\n  \n  // 更新默认配置\n  imageService.updateDefaultConfig({\n    backgroundColor: '#FF6B6B',\n    textColor: '#000000'\n  });\n  \n  const updatedConfig = imageService.getDefaultConfig();\n  console.log('Updated config:', updatedConfig);\n  \n  console.log('✓ Config management test completed');\n}\n\n// 导出测试函数供外部调用\nexport { testImageGeneration, testConfigManagement };\n\n// 如果直接运行此文件，执行测试\nif (typeof window !== 'undefined') {\n  // 在浏览器环境中，可以通过控制台调用测试\n  window.testImageService = async () => {\n    testConfigManagement();\n    await testImageGeneration();\n  };\n  \n  console.log('ImageService test functions loaded. Call window.testImageService() to run tests.');\n}",
  "services/index.js": "// Services export file\nexport { default as CouponService } from './CouponService';\nexport { default as StorageService } from './StorageService';\nexport { default as ImageService } from './ImageService';",
  "styles/App.module.css": "/* 主应用样式 */\n\n.content {\n  --padding: 16px;\n  background: #ffffff;\n  min-height: 100vh;\n  color: #1f2937;\n}\n\n/* Tab 内容区域样式 */\n.tabContent {\n  padding: 20px;\n  text-align: center;\n}\n\n.tabContent h2 {\n  margin: 0 0 16px 0;\n  font-size: 24px;\n  font-weight: 600;\n  color: #1f2937;\n}\n\n.tabContent p {\n  margin: 0;\n  font-size: 16px;\n  color: #6b7280;\n  line-height: 1.5;\n}\n\n/* 暗色模式支持 */\n@media (prefers-color-scheme: dark) {\n  .content {\n    background: #1f2937;\n    color: #f9fafb;\n  }\n  \n  .tabContent h2 {\n    color: #f9fafb;\n  }\n  \n  .tabContent p {\n    color: #d1d5db;\n  }\n}",
  "styles/CouponCreator.module.css": "/* 优惠券创建组件样式 */\n\n.container {\n  padding: 16px;\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n/* 创建表单样式 */\n.createForm {\n  width: 100%;\n}\n\n.formCard {\n  margin: 0;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.inputItem {\n  margin-bottom: 16px;\n  --border-radius: 8px;\n  --background: #f8fafc;\n}\n\n.inputItem ion-label {\n  font-weight: 600;\n  color: #374151;\n  margin-bottom: 8px;\n}\n\n.inputItem ion-input {\n  --padding-start: 12px;\n  --padding-end: 12px;\n  --padding-top: 12px;\n  --padding-bottom: 12px;\n  font-size: 16px;\n}\n\n.inputError {\n  --border-color: #ef4444;\n  --color: #ef4444;\n}\n\n.errorText {\n  margin-top: 8px;\n  font-size: 14px;\n}\n\n.errorText p {\n  margin: 0;\n}\n\n.createButton {\n  margin-top: 24px;\n  --border-radius: 8px;\n  --background: #4f46e5;\n  --background-activated: #4338ca;\n  --color: white;\n  font-weight: 600;\n  height: 48px;\n}\n\n.buttonText {\n  margin-left: 8px;\n}\n\n/* 优惠券显示样式 */\n.couponDisplay {\n  width: 100%;\n}\n\n.couponCard {\n  margin: 0;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);\n  color: white;\n}\n\n.couponCard ion-card-header {\n  text-align: center;\n  padding-bottom: 8px;\n}\n\n.couponCard ion-card-title {\n  color: white;\n  font-size: 18px;\n  font-weight: 600;\n}\n\n.couponInfo {\n  text-align: center;\n  padding: 20px 0;\n}\n\n.amountSection {\n  margin-bottom: 24px;\n}\n\n.amountLabel p {\n  margin: 0 0 8px 0;\n  font-size: 14px;\n  opacity: 0.9;\n}\n\n.amountValue h2 {\n  margin: 0;\n  font-size: 36px;\n  font-weight: 700;\n  color: white;\n}\n\n.codeSection {\n  padding: 16px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 8px;\n  margin: 0 16px;\n}\n\n.codeLabel p {\n  margin: 0 0 8px 0;\n  font-size: 14px;\n  opacity: 0.9;\n}\n\n.codeValue h3 {\n  margin: 0;\n  font-size: 24px;\n  font-weight: 600;\n  letter-spacing: 2px;\n  color: white;\n  font-family: 'Courier New', monospace;\n}\n\n.actionButtons {\n  margin-top: 24px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.saveButton {\n  --border-radius: 8px;\n  --background: white;\n  --background-activated: #f1f5f9;\n  --color: #4f46e5;\n  font-weight: 600;\n  height: 48px;\n}\n\n.newButton {\n  --border-radius: 8px;\n  --border-color: white;\n  --color: white;\n  font-weight: 600;\n  height: 48px;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .container {\n    padding: 12px;\n  }\n  \n  .amountValue h2 {\n    font-size: 32px;\n  }\n  \n  .codeValue h3 {\n    font-size: 20px;\n  }\n}\n\n/* 暗色模式支持 */\n@media (prefers-color-scheme: dark) {\n  .formCard {\n    --background: #374151;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\n  }\n  \n  .inputItem {\n    --background: #4b5563;\n  }\n  \n  .inputItem ion-label {\n    color: #f9fafb;\n  }\n  \n  .inputItem ion-input {\n    --color: #f9fafb;\n  }\n}",
  "styles/CouponValidator.module.css": "/* 优惠券验证组件样式 */\n\n.container {\n  padding: 16px;\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n/* 查询表单样式 */\n.queryForm {\n  margin-bottom: 20px;\n}\n\n.formCard {\n  margin: 0;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.inputItem {\n  margin-bottom: 16px;\n  --border-radius: 8px;\n  --background: #f8f9fa;\n}\n\n.inputError {\n  --border-color: var(--ion-color-danger);\n}\n\n.errorText {\n  margin: 8px 0;\n  font-size: 14px;\n}\n\n.queryButton {\n  margin-top: 16px;\n  --border-radius: 8px;\n  height: 48px;\n  font-weight: 600;\n}\n\n.buttonText {\n  margin-left: 8px;\n}\n\n/* 结果显示样式 */\n.resultDisplay {\n  margin-bottom: 20px;\n}\n\n.resultCard {\n  margin: 0;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* 有效优惠券结果样式 */\n.validResult {\n  text-align: center;\n}\n\n.couponInfo {\n  margin-bottom: 24px;\n  padding: 16px;\n  background: linear-gradient(135deg, #f8f9ff 0%, #f0f4ff 100%);\n  border-radius: 12px;\n  border: 1px solid #e0e7ff;\n}\n\n.codeSection {\n  margin-bottom: 16px;\n}\n\n.codeLabel {\n  font-size: 14px;\n  color: #6b7280;\n  margin-bottom: 4px;\n}\n\n.codeValue {\n  font-family: 'Courier New', monospace;\n  font-weight: bold;\n  color: #374151;\n  letter-spacing: 2px;\n}\n\n.amountSection {\n  margin-bottom: 16px;\n}\n\n.amountLabel {\n  font-size: 14px;\n  color: #6b7280;\n  margin-bottom: 4px;\n}\n\n.amountValue {\n  color: #059669;\n  font-weight: bold;\n}\n\n.statusSection {\n  margin-bottom: 8px;\n}\n\n.statusLabel {\n  font-size: 14px;\n  color: #6b7280;\n  margin-bottom: 4px;\n}\n\n.statusValue {\n  font-weight: 600;\n}\n\n.availableStatus {\n  color: #059669;\n}\n\n.usedStatus {\n  color: #dc2626;\n}\n\n.messageSection {\n  margin: 16px 0;\n  padding: 12px;\n  border-radius: 8px;\n  background: #f0f9ff;\n}\n\n.messageText {\n  font-size: 16px;\n  font-weight: 500;\n}\n\n/* 无效优惠券结果样式 */\n.invalidResult {\n  text-align: center;\n}\n\n.errorMessage {\n  margin: 24px 0;\n  padding: 16px;\n  background: #fef2f2;\n  border-radius: 8px;\n  border: 1px solid #fecaca;\n}\n\n/* 操作按钮样式 */\n.actionButtons {\n  margin-top: 24px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.useButton {\n  --border-radius: 8px;\n  height: 48px;\n  font-weight: 600;\n  --background: #3b82f6;\n  --background-activated: #2563eb;\n}\n\n.newQueryButton {\n  --border-radius: 8px;\n  height: 44px;\n  font-weight: 500;\n  --color: #6b7280;\n  --border-color: #d1d5db;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .container {\n    padding: 12px;\n  }\n  \n  .couponInfo {\n    padding: 12px;\n  }\n  \n  .amountValue h2 {\n    font-size: 28px;\n  }\n  \n  .codeValue h3 {\n    font-size: 20px;\n  }\n}\n\n/* 加载状态样式 */\n.queryButton:disabled {\n  opacity: 0.6;\n}\n\n.useButton:disabled {\n  opacity: 0.6;\n}\n\n/* 动画效果 */\n.resultCard {\n  animation: slideIn 0.3s ease-out;\n}\n\n@keyframes slideIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}",
  "styles/Welcome.module.css": "/* Welcome 组件样式 - 简约风格 */\n\n.welcomeContainer {\n  background: #ffffff;\n  min-height: 100vh;\n  color: #333333;\n  position: relative;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n}\n\n/* 头部 */\n.header {\n  text-align: center;\n  padding: 56px 16px 16px;\n}\n\n.logo {\n  display: inline-block;\n  margin-bottom: 12px;\n}\n\n.logoImage {\n  width: 64px;\n  height: 64px;\n  border-radius: 12px;\n  transition: opacity 0.2s ease;\n  box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1);\n}\n\n.logoImage:hover {\n  opacity: 0.8;\n}\n\n.title {\n  font-size: 2.1rem;\n  font-weight: 600;\n  margin: 0 0 6px 0;\n  line-height: 1.2;\n  letter-spacing: -0.02em;\n}\n\n.titleGradient {\n  color: #1a1a1a;\n}\n\n.titleSubtext {\n  color: #666666;\n  font-weight: 400;\n  margin-left: 6px;\n}\n\n.subtitle {\n  font-size: 1rem;\n  color: #666666;\n  margin: 0;\n  font-weight: 400;\n}\n\n/* 步骤 */\n.steps {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 8px 16px 16px;\n  max-width: 560px;\n  margin: 0 auto;\n}\n\n.step {\n  padding: 12px 12px;\n  background: #fff;\n  border-radius: 12px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  position: relative;\n  text-align: center;\n  transition: background-color 0.2s ease;\n}\n\n.stepContent {\n  margin-top: 0;\n}\n\n.stepContent h3 {\n  font-size: 1.1rem;\n  font-weight: 500;\n  color: #1a1a1a;\n  margin: 0 0 4px 0;\n}\n\n.stepContent p {\n  color: #666666;\n  margin: 0;\n  font-size: 0.95rem;\n  line-height: 1.4;\n}\n\n.stepNumber {\n  position: absolute;\n  top: 8px;\n  left: 8px;\n  background: #e5e5e5;\n  color: #666666;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 500;\n  font-size: 0.75rem;\n}\n\n/* 行动按钮 */\n.ctaSection {\n  text-align: center;\n  padding: 16px 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  align-items: center;\n}\n\n.primaryBtn {\n  background: #1a1a1a;\n  color: #ffffff;\n  border: none;\n  border-radius: 6px;\n  padding: 10px 18px;\n  font-weight: 500;\n  font-size: 0.95rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  justify-content: center;\n  transition: background-color 0.2s ease;\n  width: 180px;\n  max-width: 90%;\n}\n\n.primaryBtn:hover {\n  background: #333333;\n}\n\n.primaryBtn:active {\n  background: #000000;\n}\n\n.secondaryBtn {\n  background: transparent;\n  color: #666666;\n  border: 1px solid #d5d5d5;\n  border-radius: 6px;\n  padding: 10px 18px;\n  font-weight: 500;\n  font-size: 0.95rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  justify-content: center;\n  transition: all 0.2s ease;\n  width: 180px;\n  max-width: 90%;\n}\n\n.secondaryBtn:hover {\n  background: #fafafa;\n  border-color: #999999;\n}\n\n/* 底部 */\n.footer {\n  text-align: center;\n  padding: 8px 16px 16px;\n  color: #999999;\n  font-size: 0.85rem;\n}\n\n.footer p {\n  margin: 0;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .header {\n    padding: 40px 12px 16px;\n  }\n  \n  .title {\n    font-size: 2rem;\n  }\n  \n  .subtitle {\n    font-size: 1rem;\n  }\n  \n  .steps {\n    padding: 8px 12px 16px;\n  }\n  \n  .step {\n    padding: 12px 12px;\n  }\n  \n  .ctaSection {\n    padding: 16px 12px;\n  }\n}\n\n@media (max-width: 480px) {\n  .header {\n    padding: 32px 12px 14px;\n  }\n  \n  .logoImage {\n    width: 52px;\n    height: 52px;\n  }\n  \n  .title {\n    font-size: 1.7rem;\n  }\n  \n  .primaryBtn, .secondaryBtn {\n    width: 100%;\n    max-width: 280px;\n  }\n}\n\n/* 桌面端更紧凑的步骤布局 */\n@media (min-width: 768px) {\n  .steps {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 10px;\n    max-width: 840px;\n  }\n  .step {\n    text-align: left;\n    padding: 12px;\n  }\n  .stepNumber {\n    top: 10px;\n    left: 10px;\n  }\n}\n\n/* 简化动画 */\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(12px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* 基础进场动画 */\n.logo,\n.title,\n.subtitle,\n.step,\n.ctaSection {\n  opacity: 0;\n  animation: fadeIn 0.5s ease-out forwards;\n}\n\n.logo {\n  animation-delay: 0s;\n}\n\n.title {\n  animation-delay: 0.1s;\n}\n\n.subtitle {\n  animation-delay: 0.2s;\n}\n\n.step:nth-child(1) { \n  animation-delay: 0.3s;\n}\n\n.step:nth-child(2) { \n  animation-delay: 0.4s;\n}\n\n.step:nth-child(3) { \n  animation-delay: 0.5s;\n}\n\n.ctaSection {\n  animation-delay: 0.6s;\n}\n",
  "utils/constants.js": "/**\n * 应用常量定义\n */\n\n// 优惠券编码相关常量\nexport const COUPON_CODE_LENGTH = 6;\nexport const COUPON_CODE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n\n// 存储相关常量\nexport const STORAGE_COLLECTION_NAME = 'coupons';\n\n// 图片生成相关常量\nexport const DEFAULT_IMAGE_CONFIG = {\n  width: 400,\n  height: 200,\n  backgroundColor: '#4F46E5',\n  textColor: '#FFFFFF',\n  fontSize: {\n    amount: 32,\n    code: 24,\n    label: 16\n  },\n  padding: 20\n};\n\n// 验证消息常量\nexport const VALIDATION_MESSAGES = {\n  COUPON_NOT_FOUND: '优惠券不存在',\n  COUPON_ALREADY_USED: '优惠券已使用',\n  COUPON_VALID: '优惠券有效',\n  INVALID_CODE_FORMAT: '优惠券编码格式无效',\n  INVALID_AMOUNT: '金额格式无效'\n};\n\n// 成功消息常量\nexport const SUCCESS_MESSAGES = {\n  COUPON_CREATED: '优惠券创建成功',\n  COUPON_USED: '验券成功',\n  IMAGE_SAVED: '图片保存成功'\n};\n\n// 错误消息常量\nexport const ERROR_MESSAGES = {\n  STORAGE_ERROR: '存储操作失败',\n  IMAGE_GENERATION_ERROR: '图片生成失败',\n  NETWORK_ERROR: '网络连接失败'\n};",
  "utils/index.js": "// Utility functions export file\nexport * from './types';\nexport * from './constants';\nexport * from './validators';",
  "utils/types.js": "/**\n * 优惠券数据模型和类型定义\n * 基于需求文档中的数据结构定义\n */\n\n/**\n * 优惠券错误类型枚举\n */\nexport const CouponErrorType = {\n  INVALID_AMOUNT: 'INVALID_AMOUNT',\n  CODE_NOT_FOUND: 'CODE_NOT_FOUND',\n  COUPON_ALREADY_USED: 'COUPON_ALREADY_USED',\n  STORAGE_ERROR: 'STORAGE_ERROR',\n  IMAGE_GENERATION_ERROR: 'IMAGE_GENERATION_ERROR'\n};\n\n/**\n * 优惠券状态枚举\n */\nexport const CouponStatus = {\n  UNUSED: 'unused',\n  USED: 'used'\n};\n\n/**\n * 创建优惠券对象\n * @param {Object} couponData - 优惠券数据\n * @param {string} couponData.id - 优惠券ID\n * @param {string} couponData.code - 6位唯一编码\n * @param {number} couponData.amount - 优惠券金额\n * @param {boolean} couponData.isUsed - 使用状态\n * @param {Date} couponData.createdAt - 创建时间\n * @param {Date} [couponData.usedAt] - 使用时间\n * @returns {Object} 优惠券对象\n */\nexport function createCoupon({ id, code, amount, isUsed = false, createdAt = new Date(), usedAt = null }) {\n  return {\n    id,\n    code,\n    amount,\n    isUsed,\n    createdAt,\n    usedAt\n  };\n}\n\n/**\n * 创建验证结果对象\n * @param {Object} resultData - 验证结果数据\n * @param {boolean} resultData.isValid - 是否有效\n * @param {Object} [resultData.coupon] - 优惠券对象\n * @param {string} resultData.message - 结果消息\n * @param {boolean} resultData.canUse - 是否可以使用\n * @returns {Object} 验证结果对象\n */\nexport function createValidationResult({ isValid, coupon = null, message, canUse = false }) {\n  return {\n    isValid,\n    coupon,\n    message,\n    canUse\n  };\n}\n\n/**\n * 创建优惠券错误对象\n * @param {Object} errorData - 错误数据\n * @param {string} errorData.type - 错误类型\n * @param {string} errorData.message - 错误消息\n * @param {*} [errorData.details] - 错误详情\n * @returns {Object} 错误对象\n */\nexport function createCouponError({ type, message, details = null }) {\n  return {\n    type,\n    message,\n    details\n  };\n}\n\n/**\n * 创建优惠券图片配置对象\n * @param {Object} configData - 配置数据\n * @returns {Object} 图片配置对象\n */\nexport function createCouponImageConfig({\n  width = 400,\n  height = 200,\n  backgroundColor = '#4F46E5',\n  textColor = '#FFFFFF',\n  fontSize = {\n    amount: 32,\n    code: 24,\n    label: 16\n  },\n  padding = 20\n} = {}) {\n  return {\n    width,\n    height,\n    backgroundColor,\n    textColor,\n    fontSize,\n    padding\n  };\n}\n\n/**\n * 验证优惠券对象结构\n * @param {Object} coupon - 优惠券对象\n * @returns {boolean} 是否有效\n */\nexport function isValidCoupon(coupon) {\n  return coupon &&\n    typeof coupon.id === 'string' &&\n    typeof coupon.code === 'string' &&\n    typeof coupon.amount === 'number' &&\n    typeof coupon.isUsed === 'boolean' &&\n    coupon.createdAt instanceof Date &&\n    coupon.code.length === 6;\n}\n\n/**\n * 验证验证结果对象结构\n * @param {Object} result - 验证结果对象\n * @returns {boolean} 是否有效\n */\nexport function isValidValidationResult(result) {\n  return result &&\n    typeof result.isValid === 'boolean' &&\n    typeof result.message === 'string' &&\n    typeof result.canUse === 'boolean';\n}",
  "utils/validators.js": "/**\n * 验证工具函数\n */\n\nimport { COUPON_CODE_LENGTH, COUPON_CODE_CHARS } from './constants';\n\n/**\n * 验证优惠券金额格式\n * @param {string|number} amount - 金额\n * @returns {boolean} 是否有效\n */\nexport function validateAmount(amount) {\n  const numAmount = Number(amount);\n  return !isNaN(numAmount) && numAmount > 0 && numAmount <= 999999;\n}\n\n/**\n * 验证优惠券编码格式\n * @param {string} code - 优惠券编码\n * @returns {boolean} 是否有效\n */\nexport function validateCouponCode(code) {\n  if (!code || typeof code !== 'string') {\n    return false;\n  }\n  \n  if (code.length !== COUPON_CODE_LENGTH) {\n    return false;\n  }\n  \n  // 检查是否只包含允许的字符\n  for (let i = 0; i < code.length; i++) {\n    if (!COUPON_CODE_CHARS.includes(code[i])) {\n      return false;\n    }\n  }\n  \n  return true;\n}\n\n/**\n * 格式化金额显示\n * @param {number} amount - 金额\n * @returns {string} 格式化后的金额字符串\n */\nexport function formatAmount(amount) {\n  return `¥${amount.toFixed(2)}`;\n}\n\n/**\n * 格式化日期显示\n * @param {Date} date - 日期对象\n * @returns {string} 格式化后的日期字符串\n */\nexport function formatDate(date) {\n  if (!date || !(date instanceof Date)) {\n    return '';\n  }\n  \n  return date.toLocaleString('zh-CN', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n}\n\n/**\n * 清理和标准化优惠券编码输入\n * @param {string} input - 用户输入\n * @returns {string} 清理后的编码\n */\nexport function sanitizeCouponCode(input) {\n  if (!input || typeof input !== 'string') {\n    return '';\n  }\n  \n  // 转换为大写并移除空格和特殊字符\n  return input.toUpperCase().replace(/[^A-Z0-9]/g, '');\n}"
}