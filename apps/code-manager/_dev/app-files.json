{
  "app.jsx": "import { useState, useEffect } from 'react';\nimport { \n    IonTabs,\n    IonTab,\n    IonTabBar,\n    IonTabButton,\n    IonIcon,\n    IonLabel,\n    IonPage, \n    IonContent,\n    IonHeader,\n    IonToolbar,\n    IonTitle\n} from '@ionic/react';\nimport { addCircleOutline, listOutline, checkmarkCircleOutline } from 'ionicons/icons';\nimport { PageHeader } from '@morphixai/components';\nimport CouponCreatorEnhanced from './components/CouponCreatorEnhanced';\nimport CouponValidator from './components/CouponValidator';\nimport CouponList from './components/CouponList';\nimport CouponDetailModal from './components/CouponDetailModal';\nimport CouponResultModal from './components/CouponResultModal';\nimport BatchCouponResultModal from './components/BatchCouponResultModal';\nimport ValidationResultModal from './components/ValidationResultModal';\nimport ImagePreviewModal from './components/ImagePreviewModal';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport ToastManager from './components/ToastManager';\nimport { IonAlert } from '@ionic/react';\nimport useCouponManager from './hooks/useCouponManager';\nimport useImageGenerator from './hooks/useImageGenerator';\nimport useErrorHandler from './hooks/useErrorHandler';\nimport styles from './styles/App.module.css';\n\n/**\n * 主应用组件\n * \n * 优惠券管理系统，包含创建优惠券、验券管理和优惠券列表三个功能模块\n * 使用底部 Tab 布局实现无刷新切换\n */\nexport default function App() {\n    const [selectedCoupon, setSelectedCoupon] = useState(null);\n    const [batchCoupons, setBatchCoupons] = useState([]);\n    const [showDetailModal, setShowDetailModal] = useState(false);\n    const [showResultModal, setShowResultModal] = useState(false);\n    const [showBatchResultModal, setShowBatchResultModal] = useState(false);\n    const [showValidationModal, setShowValidationModal] = useState(false);\n    const [validationResult, setValidationResult] = useState(null);\n    const [showReceiveAlert, setShowReceiveAlert] = useState(false);\n    const [receiveCouponCode, setReceiveCouponCode] = useState(null);\n    const [showImagePreview, setShowImagePreview] = useState(false);\n    const [previewImageData, setPreviewImageData] = useState(null);\n    const [previewCoupon, setPreviewCoupon] = useState(null);\n    \n    const { \n        coupons,\n        getAllCoupons,\n        useCoupon,\n        isLoading: isCouponLoading\n    } = useCouponManager();\n    \n    const {\n        generateAndSave,\n        isGenerating: isImageGenerating\n    } = useImageGenerator();\n    \n    const { \n        toasts, \n        removeToast, \n        addError,\n        showToast,\n        handleImageError,\n        handleStorageError,\n        withLoading\n    } = useErrorHandler();\n\n    // 加载优惠券列表\n    useEffect(() => {\n        loadCoupons();\n        checkUrlForCoupon();\n    }, []);\n\n    const loadCoupons = async () => {\n        await getAllCoupons();\n    };\n\n    /**\n     * 检查 URL 中的 code 参数\n     */\n    const checkUrlForCoupon = async () => {\n        const urlParams = new URLSearchParams(window.location.search);\n        const code = urlParams.get('code');\n        \n        if (code) {\n            // 检查是否已经拥有这个优惠券\n            const StorageService = (await import('./services/StorageService')).default;\n            const storageService = new StorageService();\n            const existingCoupon = await storageService.getCoupon(code);\n            \n            if (!existingCoupon) {\n                // 不存在，提示领取\n                setReceiveCouponCode(code);\n                setShowReceiveAlert(true);\n            } else if (existingCoupon.source === 'created') {\n                // 是自己创建的，不提示\n                showToast('这是您创建的优惠券', 'warning');\n            } else {\n                // 已经在收到的列表中\n                showToast('您已经领取过这张优惠券了', 'warning');\n            }\n        }\n    };\n\n    /**\n     * 确认领取优惠券\n     */\n    const handleReceiveCoupon = async () => {\n        if (!receiveCouponCode) return;\n\n        const result = await withLoading(async () => {\n            const CouponService = (await import('./services/CouponService')).default;\n            const couponService = new CouponService();\n            const coupon = await couponService.receiveCoupon(receiveCouponCode);\n            \n            if (!coupon) {\n                throw new Error('领取优惠券失败');\n            }\n            \n            return coupon;\n        }, '领取优惠券失败，请重试');\n\n        if (result.success) {\n            showToast('优惠券领取成功！', 'success');\n            setShowReceiveAlert(false);\n            setReceiveCouponCode(null);\n            loadCoupons(); // 刷新列表\n            \n            // 清除 URL 参数\n            window.history.replaceState({}, document.title, window.location.pathname);\n        } else {\n            handleStorageError(result.error);\n        }\n    };\n\n    /**\n     * 处理全局错误\n     */\n    const handleGlobalError = (error, errorInfo) => {\n        console.error('全局错误:', error, errorInfo);\n        addError('应用发生意外错误，请刷新页面重试', 'critical');\n    };\n\n    /**\n     * 处理优惠券创建成功\n     */\n    const handleCouponCreated = (coupon) => {\n        setSelectedCoupon(coupon);\n        setShowResultModal(true);\n        loadCoupons(); // 刷新列表\n    };\n\n    /**\n     * 处理批量创建成功\n     */\n    const handleBatchCreated = (coupons) => {\n        setBatchCoupons(coupons);\n        setShowBatchResultModal(true);\n        loadCoupons(); // 刷新列表\n    };\n\n    /**\n     * 处理验证成功\n     */\n    const handleValidationSuccess = (result) => {\n        setValidationResult(result);\n        setShowValidationModal(true);\n    };\n\n    /**\n     * 处理优惠券点击\n     */\n    const handleCouponClick = (coupon) => {\n        setSelectedCoupon(coupon);\n        setShowDetailModal(true);\n    };\n\n    /**\n     * 处理删除优惠券\n     */\n    const handleDeleteCoupon = async (code) => {\n        const result = await withLoading(async () => {\n            const storageService = new (await import('./services/StorageService')).default();\n            const success = await storageService.deleteCoupon(code);\n            \n            if (!success) {\n                throw new Error('删除优惠券失败');\n            }\n            \n            return success;\n        }, '删除优惠券失败，请重试');\n\n        if (result.success) {\n            showToast('优惠券已删除', 'success');\n            setShowDetailModal(false);\n            setSelectedCoupon(null);\n            loadCoupons(); // 刷新列表\n        } else {\n            handleStorageError(result.error);\n        }\n    };\n\n    /**\n     * 处理保存图片（先预览）\n     */\n    const handleSaveImage = async (coupon) => {\n        // 生成图片\n        const result = await withLoading(async () => {\n            const ImageService = (await import('./services/ImageService')).default;\n            const imageService = new ImageService();\n            const imageData = await imageService.generateCouponImage(coupon);\n            \n            if (!imageData) {\n                throw new Error('生成图片失败');\n            }\n            \n            return imageData;\n        }, '生成图片失败，请重试');\n\n        if (result.success) {\n            // 显示预览\n            setPreviewImageData(result.data);\n            setPreviewCoupon(coupon);\n            setShowImagePreview(true);\n        } else {\n            handleImageError(result.error);\n        }\n    };\n\n    /**\n     * 确认保存图片到相册\n     */\n    const handleConfirmSave = async () => {\n        if (!previewImageData || !previewCoupon) return;\n\n        const result = await withLoading(async () => {\n            const ImageService = (await import('./services/ImageService')).default;\n            const imageService = new ImageService();\n            const filename = `coupon_${previewCoupon.code}_${Date.now()}.png`;\n            const saveResult = await imageService.saveImageToAlbum(previewImageData, filename);\n            \n            if (!saveResult.success) {\n                throw new Error(saveResult.error || '保存图片失败');\n            }\n            \n            return saveResult;\n        }, '保存图片失败，请重试');\n\n        if (result.success) {\n            showToast('优惠券图片已保存到相册', 'success');\n            setShowImagePreview(false);\n            setPreviewImageData(null);\n            setPreviewCoupon(null);\n        } else {\n            handleImageError(result.error);\n        }\n    };\n\n    /**\n     * 处理验券\n     */\n    const handleUseCoupon = async (code) => {\n        const result = await withLoading(async () => {\n            const success = await useCoupon(code);\n            \n            if (!success) {\n                throw new Error('验券失败');\n            }\n            \n            return success;\n        }, '验券失败，请重试');\n\n        if (result.success) {\n            showToast('验券成功！优惠券已使用', 'success');\n            setShowValidationModal(false);\n            setValidationResult(null);\n            loadCoupons(); // 刷新列表\n        } else {\n            handleStorageError(result.error);\n        }\n    };\n\n    return (\n        <ErrorBoundary onError={handleGlobalError}>\n            <IonTabs>\n                {/* 创建优惠券 Tab */}\n                <IonTab tab=\"create\">\n                    <IonPage>\n                        <PageHeader title=\"创建优惠券\" />\n                        <IonContent className={styles.content}>\n                            <CouponCreatorEnhanced \n                                onCouponCreated={handleCouponCreated}\n                                onBatchCreated={handleBatchCreated}\n                            />\n                        </IonContent>\n                    </IonPage>\n                </IonTab>\n\n                {/* 优惠券列表 Tab */}\n                <IonTab tab=\"list\">\n                    <IonPage>\n                        <PageHeader title=\"优惠券列表\" />\n                        <IonContent className={styles.content}>\n                            <CouponList \n                                coupons={coupons} \n                                onCouponClick={handleCouponClick}\n                            />\n                        </IonContent>\n                    </IonPage>\n                </IonTab>\n\n                {/* 验券管理 Tab */}\n                <IonTab tab=\"validate\">\n                    <IonPage>\n                        <PageHeader title=\"验券管理\" />\n                        <IonContent className={styles.content}>\n                            <CouponValidator onValidationSuccess={handleValidationSuccess} />\n                        </IonContent>\n                    </IonPage>\n                </IonTab>\n\n                {/* 底部 Tab 导航栏 */}\n                <IonTabBar slot=\"bottom\" className={styles.tabBar}>\n                    <IonTabButton tab=\"create\" className={styles.tabButton}>\n                        <IonIcon icon={addCircleOutline} />\n                        <IonLabel>创建优惠券</IonLabel>\n                    </IonTabButton>\n                    <IonTabButton tab=\"list\" className={styles.tabButton}>\n                        <IonIcon icon={listOutline} />\n                        <IonLabel>优惠券列表</IonLabel>\n                    </IonTabButton>\n                    <IonTabButton tab=\"validate\" className={styles.tabButton}>\n                        <IonIcon icon={checkmarkCircleOutline} />\n                        <IonLabel>验券管理</IonLabel>\n                    </IonTabButton>\n                </IonTabBar>\n            </IonTabs>\n\n            {/* 优惠券详情 Modal */}\n            <CouponDetailModal\n                isOpen={showDetailModal}\n                coupon={selectedCoupon}\n                onClose={() => {\n                    setShowDetailModal(false);\n                    setSelectedCoupon(null);\n                }}\n                onDelete={handleDeleteCoupon}\n                onSaveImage={handleSaveImage}\n                isDeleting={isCouponLoading}\n                isSavingImage={isImageGenerating}\n            />\n\n            {/* 创建结果 Modal */}\n            <CouponResultModal\n                isOpen={showResultModal}\n                coupon={selectedCoupon}\n                onClose={() => {\n                    setShowResultModal(false);\n                    setSelectedCoupon(null);\n                }}\n                onSaveImage={handleSaveImage}\n                isSavingImage={isImageGenerating}\n            />\n\n            {/* 批量创建结果 Modal */}\n            <BatchCouponResultModal\n                isOpen={showBatchResultModal}\n                coupons={batchCoupons}\n                onClose={() => {\n                    setShowBatchResultModal(false);\n                    setBatchCoupons([]);\n                }}\n            />\n\n            {/* 验证结果 Modal */}\n            <ValidationResultModal\n                isOpen={showValidationModal}\n                result={validationResult}\n                onClose={() => {\n                    setShowValidationModal(false);\n                    setValidationResult(null);\n                }}\n                onUseCoupon={handleUseCoupon}\n                isUsing={isCouponLoading}\n            />\n\n            {/* 图片预览 Modal */}\n            <ImagePreviewModal\n                isOpen={showImagePreview}\n                imageData={previewImageData}\n                coupon={previewCoupon}\n                onClose={() => {\n                    setShowImagePreview(false);\n                    setPreviewImageData(null);\n                    setPreviewCoupon(null);\n                }}\n                onSave={handleConfirmSave}\n                isSaving={isImageGenerating}\n            />\n\n            {/* 全局 Toast 管理 */}\n            <ToastManager \n                toasts={toasts} \n                onRemoveToast={removeToast} \n            />\n\n            {/* 领取优惠券确认 */}\n            <IonAlert\n                isOpen={showReceiveAlert}\n                onDidDismiss={() => {\n                    setShowReceiveAlert(false);\n                    setReceiveCouponCode(null);\n                }}\n                header=\"领取优惠券\"\n                message={`发现优惠券 ${receiveCouponCode}，是否领取？`}\n                buttons={[\n                    {\n                        text: '取消',\n                        role: 'cancel'\n                    },\n                    {\n                        text: '领取',\n                        handler: handleReceiveCoupon\n                    }\n                ]}\n            />\n        </ErrorBoundary>\n    );\n}",
  "components/BatchCouponResultModal.jsx": "/**\n * 批量创建优惠券结果 Modal 组件\n * 显示批量创建的优惠券列表\n */\n\nimport { \n  IonModal,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonButtons,\n  IonButton,\n  IonContent,\n  IonIcon,\n  IonText,\n  IonList,\n  IonItem,\n  IonLabel,\n  IonBadge\n} from '@ionic/react';\nimport { \n  close,\n  checkmarkCircleOutline,\n  downloadOutline,\n  copyOutline\n} from 'ionicons/icons';\nimport styles from '../styles/BatchCouponResultModal.module.css';\n\nconst BatchCouponResultModal = ({ \n  isOpen, \n  coupons = [], \n  onClose,\n  onExport\n}) => {\n  const handleCopyAll = () => {\n    const codes = coupons.map(c => c.code).join('\\n');\n    navigator.clipboard.writeText(codes);\n    // 可以添加 toast 提示\n  };\n\n  const handleExport = () => {\n    if (onExport) {\n      onExport(coupons);\n    }\n  };\n\n  return (\n    <IonModal isOpen={isOpen} onDidDismiss={onClose}>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>批量创建成功</IonTitle>\n          <IonButtons slot=\"end\">\n            <IonButton onClick={onClose}>\n              <IonIcon icon={close} />\n            </IonButton>\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n      \n      <IonContent className={styles.content}>\n        <div className={styles.container}>\n          {/* 成功提示 */}\n          <div className={styles.successHeader}>\n            <IonIcon icon={checkmarkCircleOutline} className={styles.successIcon} />\n            <IonText className={styles.successText}>\n              <h2>成功创建 {coupons.length} 张优惠券</h2>\n            </IonText>\n          </div>\n\n          {/* 操作按钮 */}\n          <div className={styles.actionButtons}>\n            <IonButton\n              expand=\"block\"\n              fill=\"outline\"\n              onClick={handleCopyAll}\n              className={styles.actionButton}\n            >\n              <IonIcon icon={copyOutline} slot=\"start\" />\n              复制所有编码\n            </IonButton>\n          </div>\n\n          {/* 优惠券列表 */}\n          <div className={styles.couponList}>\n            <IonText className={styles.listTitle}>\n              <h3>优惠券列表</h3>\n            </IonText>\n            <IonList className={styles.list}>\n              {coupons.map((coupon, index) => (\n                <IonItem key={coupon.code} className={styles.couponItem}>\n                  <IonLabel>\n                    <div className={styles.couponInfo}>\n                      <span className={styles.couponIndex}>#{index + 1}</span>\n                      <span className={styles.couponCode}>{coupon.code}</span>\n                      <IonBadge color=\"primary\" className={styles.couponAmount}>\n                        {coupon.type === 'amount' \n                          ? `¥${coupon.amount}` \n                          : `${coupon.discount}折`}\n                      </IonBadge>\n                    </div>\n                    {coupon.note && (\n                      <p className={styles.couponNote}>{coupon.note}</p>\n                    )}\n                  </IonLabel>\n                </IonItem>\n              ))}\n            </IonList>\n          </div>\n\n          {/* 关闭按钮 */}\n          <div className={styles.closeButtonContainer}>\n            <IonButton\n              expand=\"block\"\n              onClick={onClose}\n              className={styles.closeButton}\n            >\n              关闭\n            </IonButton>\n          </div>\n        </div>\n      </IonContent>\n    </IonModal>\n  );\n};\n\nexport default BatchCouponResultModal;\n",
  "components/CouponCreator.jsx": "/**\n * 优惠券创建组件\n * \n * 提供优惠券创建表单，包括金额输入、验证和优惠券生成功能\n * 支持显示生成的优惠券信息和图片保存功能\n */\n\nimport React, { useState } from 'react';\nimport { \n  IonButton, \n  IonInput, \n  IonItem, \n  IonLabel, \n  IonSpinner,\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardTitle,\n  IonText,\n  IonIcon\n} from '@ionic/react';\nimport { alertCircleOutline, checkmarkCircleOutline } from 'ionicons/icons';\nimport { validateAmount } from '../utils/validators';\nimport useCouponManager from '../hooks/useCouponManager';\nimport useImageGenerator from '../hooks/useImageGenerator';\nimport useErrorHandler from '../hooks/useErrorHandler';\nimport LoadingSpinner from './LoadingSpinner';\nimport styles from '../styles/CouponCreator.module.css';\n\nconst CouponCreator = ({ onCouponCreated }) => {\n  const [amount, setAmount] = useState('');\n  const [amountError, setAmountError] = useState('');\n  \n  const { \n    createCoupon, \n    isLoading: isCouponLoading, \n    error: couponError, \n    clearError\n  } = useCouponManager();\n\n  const { \n    handleValidationError,\n    handleStorageError,\n    withLoading\n  } = useErrorHandler();\n\n  /**\n   * 处理金额输入变化\n   */\n  const handleAmountChange = (e) => {\n    const value = e.detail.value;\n    setAmount(value);\n    \n    // 清除之前的错误\n    if (amountError) {\n      setAmountError('');\n    }\n    if (couponError) {\n      clearError();\n    }\n  };\n\n  /**\n   * 验证金额输入\n   */\n  const validateAmountInput = () => {\n    if (!amount.trim()) {\n      const errorMessage = '请输入优惠券金额';\n      setAmountError(errorMessage);\n      handleValidationError(errorMessage);\n      return false;\n    }\n    \n    const numAmount = parseFloat(amount);\n    if (!validateAmount(numAmount)) {\n      const errorMessage = '请输入有效的金额（大于0的数字）';\n      setAmountError(errorMessage);\n      handleValidationError(errorMessage);\n      return false;\n    }\n    \n    return true;\n  };\n\n  /**\n   * 处理创建优惠券\n   */\n  const handleCreateCoupon = async () => {\n    if (!validateAmountInput()) {\n      return;\n    }\n\n    const result = await withLoading(async () => {\n      const numAmount = parseFloat(amount);\n      const coupon = await createCoupon(numAmount);\n      \n      if (!coupon) {\n        throw new Error(couponError || '创建优惠券失败');\n      }\n      \n      return coupon;\n    }, '创建优惠券失败，请重试');\n\n    if (result.success) {\n      // 创建成功，清空输入并通知父组件\n      setAmount('');\n      setAmountError('');\n      if (onCouponCreated) {\n        onCouponCreated(result.data);\n      }\n    } else {\n      handleStorageError(result.error);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.createForm}>\n        <IonCard className={styles.formCard}>\n          <IonCardHeader>\n            <IonCardTitle>创建优惠券</IonCardTitle>\n          </IonCardHeader>\n          <IonCardContent>\n            <IonItem className={styles.inputItem}>\n              <IonLabel position=\"stacked\">优惠券金额 (元)</IonLabel>\n              <IonInput\n                type=\"number\"\n                placeholder=\"请输入金额\"\n                value={amount}\n                onIonInput={handleAmountChange}\n                className={amountError ? styles.inputError : ''}\n              />\n            </IonItem>\n            \n            {amountError && (\n              <IonText color=\"danger\" className={styles.errorText}>\n                <p>\n                  <IonIcon icon={alertCircleOutline} className={styles.errorIcon} />\n                  {amountError}\n                </p>\n              </IonText>\n            )}\n            \n            {couponError && (\n              <IonText color=\"danger\" className={styles.errorText}>\n                <p>\n                  <IonIcon icon={alertCircleOutline} className={styles.errorIcon} />\n                  {couponError}\n                </p>\n              </IonText>\n            )}\n            \n            <IonButton\n              expand=\"block\"\n              onClick={handleCreateCoupon}\n              disabled={isCouponLoading}\n              className={`${styles.createButton} ${isCouponLoading ? styles.buttonLoading : ''}`}\n            >\n              {isCouponLoading ? (\n                <>\n                  <IonSpinner name=\"crescent\" />\n                  <span className={styles.buttonText}>创建中...</span>\n                </>\n              ) : (\n                '创建优惠券'\n              )}\n            </IonButton>\n          </IonCardContent>\n        </IonCard>\n      </div>\n    </div>\n  );\n};\n\nexport default CouponCreator;",
  "components/CouponCreatorEnhanced.jsx": "/**\n * 增强版优惠券创建组件\n * \n * 支持功能：\n * - 金额券和折扣券两种类型\n * - 添加备注信息\n * - 输入公司名称\n * - 批量创建优惠券\n * - 保存为模板\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  IonButton, \n  IonInput, \n  IonItem, \n  IonLabel, \n  IonSpinner,\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardTitle,\n  IonText,\n  IonIcon,\n  IonSegment,\n  IonSegmentButton,\n  IonTextarea,\n  IonSelect,\n  IonSelectOption,\n  IonCheckbox,\n  IonAlert\n} from '@ionic/react';\nimport { \n  alertCircleOutline, \n  addCircleOutline,\n  saveOutline,\n  copyOutline\n} from 'ionicons/icons';\nimport { validateAmount, validateDiscount, validateNote, validateCompanyName, validateQuantity } from '../utils/validators';\nimport { CouponType } from '../utils/types';\nimport useCouponManager from '../hooks/useCouponManager';\nimport useErrorHandler from '../hooks/useErrorHandler';\nimport styles from '../styles/CouponCreatorEnhanced.module.css';\n\nconst CouponCreatorEnhanced = ({ onCouponCreated, onBatchCreated }) => {\n  // 表单状态\n  const [couponType, setCouponType] = useState(CouponType.AMOUNT);\n  const [amount, setAmount] = useState('');\n  const [discount, setDiscount] = useState('');\n  const [note, setNote] = useState('');\n  const [companyName, setCompanyName] = useState('');\n  const [quantity, setQuantity] = useState('1');\n  const [saveAsTemplate, setSaveAsTemplate] = useState(false);\n  const [templateName, setTemplateName] = useState('');\n  const [expiryDate, setExpiryDate] = useState('');\n  \n  // 错误状态\n  const [errors, setErrors] = useState({});\n  \n  // 模板相关\n  const [templates, setTemplates] = useState([]);\n  const [selectedTemplate, setSelectedTemplate] = useState('');\n  const [showTemplateAlert, setShowTemplateAlert] = useState(false);\n  \n  const { \n    createCoupon, \n    isLoading, \n    error: serviceError, \n    clearError\n  } = useCouponManager();\n\n  const { \n    handleValidationError,\n    handleStorageError,\n    withLoading,\n    showToast\n  } = useErrorHandler();\n\n  // 加载模板\n  useEffect(() => {\n    loadTemplates();\n  }, []);\n\n  const loadTemplates = () => {\n    const savedTemplates = localStorage.getItem('couponTemplates');\n    if (savedTemplates) {\n      setTemplates(JSON.parse(savedTemplates));\n    }\n  };\n\n  const saveTemplate = () => {\n    if (!templateName.trim()) {\n      setShowTemplateAlert(true);\n      return;\n    }\n\n    const template = {\n      id: Date.now().toString(),\n      name: templateName,\n      type: couponType,\n      amount: couponType === CouponType.AMOUNT ? amount : '0',\n      discount: couponType === CouponType.DISCOUNT ? discount : null,\n      note,\n      companyName,\n      createdAt: new Date()\n    };\n\n    const updatedTemplates = [...templates, template];\n    localStorage.setItem('couponTemplates', JSON.stringify(updatedTemplates));\n    setTemplates(updatedTemplates);\n    showToast('模板保存成功', 'success');\n    setTemplateName('');\n    setSaveAsTemplate(false);\n  };\n\n  const loadTemplate = (templateId) => {\n    const template = templates.find(t => t.id === templateId);\n    if (template) {\n      setCouponType(template.type);\n      setAmount(template.amount);\n      setDiscount(template.discount || '');\n      setNote(template.note);\n      setCompanyName(template.companyName);\n      showToast('模板加载成功', 'success');\n    }\n  };\n\n  const handleTypeChange = (e) => {\n    setCouponType(e.detail.value);\n    setErrors({});\n  };\n\n  const handleAmountChange = (e) => {\n    setAmount(e.detail.value);\n    if (errors.amount) {\n      setErrors({ ...errors, amount: '' });\n    }\n  };\n\n  const handleDiscountChange = (e) => {\n    setDiscount(e.detail.value);\n    if (errors.discount) {\n      setErrors({ ...errors, discount: '' });\n    }\n  };\n\n  const handleNoteChange = (e) => {\n    setNote(e.detail.value);\n    if (errors.note) {\n      setErrors({ ...errors, note: '' });\n    }\n  };\n\n  const handleCompanyNameChange = (e) => {\n    setCompanyName(e.detail.value);\n    if (errors.companyName) {\n      setErrors({ ...errors, companyName: '' });\n    }\n  };\n\n  const handleQuantityChange = (e) => {\n    setQuantity(e.detail.value);\n    if (errors.quantity) {\n      setErrors({ ...errors, quantity: '' });\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (couponType === CouponType.AMOUNT) {\n      if (!amount.trim()) {\n        newErrors.amount = '请输入优惠券金额';\n      } else if (!validateAmount(amount)) {\n        newErrors.amount = '请输入有效的金额（大于0）';\n      }\n    } else {\n      if (!discount.trim()) {\n        newErrors.discount = '请输入折扣值';\n      } else if (!validateDiscount(discount)) {\n        newErrors.discount = '请输入有效的折扣（1-100）';\n      }\n    }\n\n    if (note && !validateNote(note)) {\n      newErrors.note = '备注不能超过200字';\n    }\n\n    if (companyName && !validateCompanyName(companyName)) {\n      newErrors.companyName = '公司名称不能超过50字';\n    }\n\n    if (!validateQuantity(quantity)) {\n      newErrors.quantity = '请输入有效的数量（1-100）';\n    }\n\n    if (!expiryDate.trim()) {\n      newErrors.expiryDate = '请选择有效期';\n    } else {\n      const selectedDate = new Date(expiryDate);\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      if (selectedDate < today) {\n        newErrors.expiryDate = '有效期不能早于今天';\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleCreateCoupon = async () => {\n    if (!validateForm()) {\n      return;\n    }\n\n    const couponData = {\n      type: couponType,\n      amount: couponType === CouponType.AMOUNT ? parseFloat(amount) : 0,\n      discount: couponType === CouponType.DISCOUNT ? parseFloat(discount) : null,\n      note,\n      companyName,\n      expiryDate\n    };\n\n    const numQuantity = parseInt(quantity);\n\n    if (numQuantity === 1) {\n      // 创建单个优惠券\n      const result = await withLoading(async () => {\n        const coupon = await createCoupon(couponData);\n        if (!coupon) {\n          throw new Error(serviceError || '创建优惠券失败');\n        }\n        return coupon;\n      }, '创建优惠券失败，请重试');\n\n      if (result.success) {\n        resetForm();\n        if (onCouponCreated) {\n          onCouponCreated(result.data);\n        }\n      } else {\n        handleStorageError(result.error);\n      }\n    } else {\n      // 批量创建优惠券\n      const result = await withLoading(async () => {\n        const coupons = [];\n        for (let i = 0; i < numQuantity; i++) {\n          const coupon = await createCoupon(couponData);\n          if (coupon) {\n            coupons.push(coupon);\n          }\n        }\n        return coupons;\n      }, '批量创建优惠券失败，请重试');\n\n      if (result.success && result.data.length > 0) {\n        resetForm();\n        showToast(`成功创建 ${result.data.length} 张优惠券`, 'success');\n        if (onBatchCreated) {\n          onBatchCreated(result.data);\n        }\n      } else {\n        handleStorageError(result.error || '批量创建失败');\n      }\n    }\n  };\n\n  const resetForm = () => {\n    setAmount('');\n    setDiscount('');\n    setNote('');\n    setQuantity('1');\n    setExpiryDate('');\n    setErrors({});\n    if (!saveAsTemplate) {\n      setCompanyName('');\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <IonCard className={styles.formCard}>\n        <IonCardHeader>\n          <IonCardTitle>创建优惠券</IonCardTitle>\n        </IonCardHeader>\n        <IonCardContent>\n          {/* 模板选择 */}\n          {templates.length > 0 && (\n            <IonItem className={styles.inputItem}>\n              <IonLabel position=\"stacked\">使用模板（可选）</IonLabel>\n              <IonSelect\n                value={selectedTemplate}\n                placeholder=\"选择模板\"\n                onIonChange={(e) => {\n                  setSelectedTemplate(e.detail.value);\n                  loadTemplate(e.detail.value);\n                }}\n              >\n                {templates.map(template => (\n                  <IonSelectOption key={template.id} value={template.id}>\n                    {template.name}\n                  </IonSelectOption>\n                ))}\n              </IonSelect>\n            </IonItem>\n          )}\n\n          {/* 优惠券类型 */}\n          <div className={styles.typeSection}>\n            <IonLabel className={styles.sectionLabel}>优惠券类型</IonLabel>\n            <IonSegment value={couponType} onIonChange={handleTypeChange}>\n              <IonSegmentButton value={CouponType.AMOUNT}>\n                <IonLabel>金额券</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value={CouponType.DISCOUNT}>\n                <IonLabel>折扣券</IonLabel>\n              </IonSegmentButton>\n            </IonSegment>\n          </div>\n\n          {/* 金额或折扣输入 */}\n          {couponType === CouponType.AMOUNT ? (\n            <IonItem className={styles.inputItem}>\n              <IonLabel position=\"stacked\">优惠金额 (元) *</IonLabel>\n              <IonInput\n                type=\"number\"\n                placeholder=\"请输入金额\"\n                value={amount}\n                onIonInput={handleAmountChange}\n                className={errors.amount ? styles.inputError : ''}\n              />\n            </IonItem>\n          ) : (\n            <IonItem className={styles.inputItem}>\n              <IonLabel position=\"stacked\">折扣 (%) *</IonLabel>\n              <IonInput\n                type=\"number\"\n                placeholder=\"例如：8.5 表示 8.5折\"\n                value={discount}\n                onIonInput={handleDiscountChange}\n                className={errors.discount ? styles.inputError : ''}\n              />\n            </IonItem>\n          )}\n\n          {errors.amount && (\n            <IonText color=\"danger\" className={styles.errorText}>\n              <p><IonIcon icon={alertCircleOutline} /> {errors.amount}</p>\n            </IonText>\n          )}\n\n          {errors.discount && (\n            <IonText color=\"danger\" className={styles.errorText}>\n              <p><IonIcon icon={alertCircleOutline} /> {errors.discount}</p>\n            </IonText>\n          )}\n\n          {/* 公司名称 */}\n          <IonItem className={styles.inputItem}>\n            <IonLabel position=\"stacked\">公司名称（可选）</IonLabel>\n            <IonInput\n              type=\"text\"\n              placeholder=\"请输入公司名称\"\n              value={companyName}\n              onIonInput={handleCompanyNameChange}\n              maxlength={50}\n              className={errors.companyName ? styles.inputError : ''}\n            />\n          </IonItem>\n\n          {errors.companyName && (\n            <IonText color=\"danger\" className={styles.errorText}>\n              <p><IonIcon icon={alertCircleOutline} /> {errors.companyName}</p>\n            </IonText>\n          )}\n\n          {/* 备注 */}\n          <IonItem className={styles.inputItem}>\n            <IonLabel position=\"stacked\">备注（可选）</IonLabel>\n            <IonTextarea\n              placeholder=\"请输入备注信息\"\n              value={note}\n              onIonInput={handleNoteChange}\n              maxlength={200}\n              rows={3}\n              className={errors.note ? styles.inputError : ''}\n            />\n          </IonItem>\n\n          {errors.note && (\n            <IonText color=\"danger\" className={styles.errorText}>\n              <p><IonIcon icon={alertCircleOutline} /> {errors.note}</p>\n            </IonText>\n          )}\n\n          {/* 有效期 */}\n          <IonItem className={styles.inputItem}>\n            <IonLabel position=\"stacked\">有效期 *</IonLabel>\n            <IonInput\n              type=\"date\"\n              value={expiryDate}\n              onIonInput={(e) => setExpiryDate(e.detail.value)}\n              className={errors.expiryDate ? styles.inputError : ''}\n            />\n          </IonItem>\n\n          {errors.expiryDate && (\n            <IonText color=\"danger\" className={styles.errorText}>\n              <p><IonIcon icon={alertCircleOutline} /> {errors.expiryDate}</p>\n            </IonText>\n          )}\n\n          {/* 创建数量 */}\n          <IonItem className={styles.inputItem}>\n            <IonLabel position=\"stacked\">创建数量</IonLabel>\n            <IonInput\n              type=\"number\"\n              placeholder=\"1\"\n              value={quantity}\n              onIonInput={handleQuantityChange}\n              min=\"1\"\n              max=\"100\"\n              className={errors.quantity ? styles.inputError : ''}\n            />\n          </IonItem>\n\n          {errors.quantity && (\n            <IonText color=\"danger\" className={styles.errorText}>\n              <p><IonIcon icon={alertCircleOutline} /> {errors.quantity}</p>\n            </IonText>\n          )}\n\n          {/* 保存为模板 */}\n          <IonItem className={styles.checkboxItem} lines=\"none\">\n            <IonCheckbox\n              checked={saveAsTemplate}\n              onIonChange={(e) => setSaveAsTemplate(e.detail.checked)}\n            />\n            <IonLabel className={styles.checkboxLabel}>保存为模板</IonLabel>\n          </IonItem>\n\n          {saveAsTemplate && (\n            <IonItem className={styles.inputItem}>\n              <IonLabel position=\"stacked\">模板名称</IonLabel>\n              <IonInput\n                type=\"text\"\n                placeholder=\"请输入模板名称\"\n                value={templateName}\n                onIonInput={(e) => setTemplateName(e.detail.value)}\n              />\n            </IonItem>\n          )}\n\n          {serviceError && (\n            <IonText color=\"danger\" className={styles.errorText}>\n              <p><IonIcon icon={alertCircleOutline} /> {serviceError}</p>\n            </IonText>\n          )}\n\n          {/* 操作按钮 */}\n          <div className={styles.actionButtons}>\n            {saveAsTemplate && (\n              <IonButton\n                expand=\"block\"\n                fill=\"outline\"\n                onClick={saveTemplate}\n                className={styles.saveTemplateButton}\n              >\n                <IonIcon icon={saveOutline} slot=\"start\" />\n                保存模板\n              </IonButton>\n            )}\n\n            <IonButton\n              expand=\"block\"\n              onClick={handleCreateCoupon}\n              disabled={isLoading}\n              className={styles.createButton}\n            >\n              {isLoading ? (\n                <>\n                  <IonSpinner name=\"crescent\" />\n                  <span className={styles.buttonText}>创建中...</span>\n                </>\n              ) : (\n                <>\n                  <IonIcon icon={quantity > 1 ? copyOutline : addCircleOutline} slot=\"start\" />\n                  {quantity > 1 ? `批量创建 ${quantity} 张` : '创建优惠券'}\n                </>\n              )}\n            </IonButton>\n          </div>\n        </IonCardContent>\n      </IonCard>\n\n      {/* 模板名称输入提示 */}\n      <IonAlert\n        isOpen={showTemplateAlert}\n        onDidDismiss={() => setShowTemplateAlert(false)}\n        header=\"提示\"\n        message=\"请输入模板名称\"\n        buttons={['确定']}\n      />\n    </div>\n  );\n};\n\nexport default CouponCreatorEnhanced;\n",
  "components/CouponDetailModal.jsx": "/**\n * 优惠券详情 Modal 组件\n * 显示优惠券完整信息，支持删除和保存图片操作\n */\n\nimport { \n  IonModal,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonButtons,\n  IonButton,\n  IonContent,\n  IonIcon,\n  IonText,\n  IonBadge,\n  IonAlert\n} from '@ionic/react';\nimport { \n  close,\n  checkmarkCircleOutline,\n  closeCircleOutline,\n  timeOutline,\n  imageOutline,\n  trashOutline\n} from 'ionicons/icons';\nimport { useState } from 'react';\nimport styles from '../styles/CouponDetailModal.module.css';\n\nconst CouponDetailModal = ({ \n  isOpen, \n  coupon, \n  onClose, \n  onDelete,\n  onSaveImage,\n  isDeleting,\n  isSavingImage\n}) => {\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n\n  /**\n   * 格式化日期\n   */\n  const formatDate = (date) => {\n    if (!date) return '';\n    try {\n      const d = new Date(date);\n      // 检查日期是否有效\n      if (isNaN(d.getTime())) {\n        console.error('Invalid date:', date);\n        return '日期无效';\n      }\n      return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')} ${String(d.getHours()).padStart(2, '0')}:${String(d.getMinutes()).padStart(2, '0')}:${String(d.getSeconds()).padStart(2, '0')}`;\n    } catch (error) {\n      console.error('Error formatting date:', error);\n      return '日期错误';\n    }\n  };\n\n  const handleDelete = () => {\n    setShowDeleteConfirm(true);\n  };\n\n  const confirmDelete = () => {\n    setShowDeleteConfirm(false);\n    onDelete(coupon.code);\n  };\n\n  const cancelDelete = () => {\n    setShowDeleteConfirm(false);\n  };\n\n  if (!coupon) return null;\n\n  return (\n    <>\n      <IonModal isOpen={isOpen} onDidDismiss={onClose}>\n        <IonHeader>\n          <IonToolbar>\n            <IonTitle>优惠券详情</IonTitle>\n            <IonButtons slot=\"end\">\n              <IonButton onClick={onClose}>\n                <IonIcon icon={close} />\n              </IonButton>\n            </IonButtons>\n          </IonToolbar>\n        </IonHeader>\n        \n        <IonContent className={styles.content}>\n          <div className={styles.detailContainer}>\n            {/* 金额展示 */}\n            <div className={styles.amountCard}>\n              {coupon.companyName && (\n                <IonText className={styles.companyName}>{coupon.companyName}</IonText>\n              )}\n              <IonText className={styles.amountLabel}>\n                {coupon.type === 'discount' ? '折扣' : '优惠金额'}\n              </IonText>\n              <div className={styles.amountDisplay}>\n                {coupon.type === 'discount' ? (\n                  <IonText className={styles.amount}>{coupon.discount}折</IonText>\n                ) : (\n                  <>\n                    <IonText className={styles.currency}>¥</IonText>\n                    <IonText className={styles.amount}>{coupon.amount}</IonText>\n                  </>\n                )}\n              </div>\n            </div>\n\n            {/* 优惠券信息 */}\n            <div className={styles.infoSection}>\n              <div className={styles.infoItem}>\n                <IonText className={styles.infoLabel}>优惠券编码</IonText>\n                <IonText className={styles.infoValue}>\n                  {coupon.code}\n                </IonText>\n              </div>\n\n              {coupon.note && (\n                <div className={styles.infoItem}>\n                  <IonText className={styles.infoLabel}>备注信息</IonText>\n                  <IonText className={styles.infoValue}>\n                    {coupon.note}\n                  </IonText>\n                </div>\n              )}\n\n              <div className={styles.infoItem}>\n                <IonText className={styles.infoLabel}>使用状态</IonText>\n                <IonBadge \n                  color={coupon.isUsed ? 'medium' : 'success'}\n                  className={styles.statusBadge}\n                >\n                  <IonIcon \n                    icon={coupon.isUsed ? closeCircleOutline : checkmarkCircleOutline}\n                    className={styles.statusIcon}\n                  />\n                  {coupon.isUsed ? '已使用' : '未使用'}\n                </IonBadge>\n              </div>\n\n              <div className={styles.infoItem}>\n                <IonText className={styles.infoLabel}>\n                  <IonIcon icon={timeOutline} className={styles.labelIcon} />\n                  创建时间\n                </IonText>\n                <IonText className={styles.infoValue}>\n                  {formatDate(coupon.createdAt)}\n                </IonText>\n              </div>\n\n              {coupon.isUsed && coupon.usedAt && (\n                <div className={styles.infoItem}>\n                  <IonText className={styles.infoLabel}>\n                    <IonIcon icon={timeOutline} className={styles.labelIcon} />\n                    使用时间\n                  </IonText>\n                  <IonText className={styles.infoValue}>\n                    {formatDate(coupon.usedAt)}\n                  </IonText>\n                </div>\n              )}\n\n              {coupon.expiryDate && (\n                <div className={styles.infoItem}>\n                  <IonText className={styles.infoLabel}>\n                    <IonIcon icon={timeOutline} className={styles.labelIcon} />\n                    有效期至\n                  </IonText>\n                  <IonText className={styles.infoValue}>\n                    {coupon.expiryDate}\n                  </IonText>\n                </div>\n              )}\n\n              {coupon.source && (\n                <div className={styles.infoItem}>\n                  <IonText className={styles.infoLabel}>来源</IonText>\n                  <IonBadge color={coupon.source === 'created' ? 'primary' : 'secondary'}>\n                    {coupon.source === 'created' ? '我创建的' : '我收到的'}\n                  </IonBadge>\n                </div>\n              )}\n            </div>\n\n            {/* 操作按钮 */}\n            <div className={styles.actionButtons}>\n              <IonButton\n                expand=\"block\"\n                fill=\"solid\"\n                onClick={() => onSaveImage(coupon)}\n                disabled={isSavingImage}\n                className={styles.saveButton}\n              >\n                <IonIcon icon={imageOutline} slot=\"start\" />\n                {isSavingImage ? '保存中...' : '保存图片'}\n              </IonButton>\n\n              <IonButton\n                expand=\"block\"\n                fill=\"outline\"\n                color=\"danger\"\n                onClick={handleDelete}\n                disabled={isDeleting}\n                className={styles.deleteButton}\n              >\n                <IonIcon icon={trashOutline} slot=\"start\" />\n                {isDeleting ? '删除中...' : '删除优惠券'}\n              </IonButton>\n            </div>\n          </div>\n        </IonContent>\n      </IonModal>\n\n      {/* 删除确认对话框 */}\n      <IonAlert\n        isOpen={showDeleteConfirm}\n        onDidDismiss={cancelDelete}\n        header=\"确认删除\"\n        message={`确定要删除这张 ${coupon.type === 'discount' ? `${coupon.discount}折` : `¥${coupon.amount}`} 的优惠券吗？删除后将无法恢复。`}\n        buttons={[\n          {\n            text: '取消',\n            role: 'cancel',\n            handler: cancelDelete\n          },\n          {\n            text: '确认删除',\n            role: 'destructive',\n            handler: confirmDelete\n          }\n        ]}\n      />\n    </>\n  );\n};\n\nexport default CouponDetailModal;\n",
  "components/CouponList.jsx": "/**\n * 优惠券列表组件\n * 显示所有优惠券，支持点击查看详情\n */\n\nimport { \n  IonCard, \n  IonCardContent,\n  IonText,\n  IonIcon,\n  IonBadge\n} from '@ionic/react';\nimport { \n  checkmarkCircleOutline, \n  closeCircleOutline,\n  timeOutline\n} from 'ionicons/icons';\nimport styles from '../styles/CouponList.module.css';\n\nconst CouponList = ({ coupons, onCouponClick }) => {\n  // coupons 现在是 { created: [], received: [] } 结构\n  const createdCoupons = coupons?.created || [];\n  const receivedCoupons = coupons?.received || [];\n\n  /**\n   * 加密显示优惠券码（显示前2位和后2位，中间用*代替）\n   */\n  const maskCouponCode = (code) => {\n    if (!code || code.length < 4) return code;\n    return `${code.substring(0, 2)}**${code.substring(code.length - 2)}`;\n  };\n\n  /**\n   * 格式化日期\n   */\n  const formatDate = (date) => {\n    if (!date) return '';\n    try {\n      const d = new Date(date);\n      // 检查日期是否有效\n      if (isNaN(d.getTime())) {\n        console.error('Invalid date:', date);\n        return '日期无效';\n      }\n      return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')} ${String(d.getHours()).padStart(2, '0')}:${String(d.getMinutes()).padStart(2, '0')}`;\n    } catch (error) {\n      console.error('Error formatting date:', error);\n      return '日期错误';\n    }\n  };\n\n  /**\n   * 排序优惠券：未使用的在前，按创建时间倒序\n   */\n  const sortCoupons = (coupons) => {\n    return [...coupons].sort((a, b) => {\n      // 首先按使用状态排序（未使用在前）\n      if (a.isUsed !== b.isUsed) {\n        return a.isUsed ? 1 : -1;\n      }\n      \n      // 然后按创建时间倒序（新的在前）\n      const dateA = new Date(a.createdAt).getTime();\n      const dateB = new Date(b.createdAt).getTime();\n      return dateB - dateA;\n    });\n  };\n\n  const renderCouponCard = (coupon) => (\n    <IonCard \n      key={coupon.code} \n      className={styles.couponItem}\n      onClick={() => onCouponClick(coupon)}\n      button\n    >\n      <IonCardContent className={styles.cardContent}>\n        <div className={styles.leftSection}>\n          <div className={styles.amountSection}>\n            {coupon.type === 'discount' ? (\n              <>\n                <IonText className={styles.amount}>{coupon.discount}</IonText>\n                <IonText className={styles.discountLabel}>折</IonText>\n              </>\n            ) : (\n              <>\n                <IonText className={styles.currency}>¥</IonText>\n                <IonText className={styles.amount}>{coupon.amount}</IonText>\n              </>\n            )}\n          </div>\n          {coupon.companyName && (\n            <div className={styles.companyName}>\n              <IonText className={styles.companyText}>{coupon.companyName}</IonText>\n            </div>\n          )}\n        </div>\n        \n        <div className={styles.rightSection}>\n          <div className={styles.codeSection}>\n            <IonText className={styles.codeLabel}>编码</IonText>\n            <IonText className={styles.codeValue}>\n              {maskCouponCode(coupon.code)}\n            </IonText>\n          </div>\n          \n          {coupon.note && (\n            <div className={styles.noteSection}>\n              <IonText className={styles.noteText}>\n                {coupon.note.length > 20 ? `${coupon.note.substring(0, 20)}...` : coupon.note}\n              </IonText>\n            </div>\n          )}\n          \n          <div className={styles.statusSection}>\n            <IonBadge \n              color={coupon.isUsed ? 'medium' : 'success'}\n              className={styles.statusBadge}\n            >\n              <IonIcon \n                icon={coupon.isUsed ? closeCircleOutline : checkmarkCircleOutline}\n                className={styles.statusIcon}\n              />\n              {coupon.isUsed ? '已使用' : '未使用'}\n            </IonBadge>\n          </div>\n          \n          <div className={styles.dateSection}>\n            <IonIcon icon={timeOutline} className={styles.dateIcon} />\n            <IonText className={styles.dateText}>\n              {formatDate(coupon.createdAt)}\n            </IonText>\n          </div>\n        </div>\n      </IonCardContent>\n    </IonCard>\n  );\n\n  if (createdCoupons.length === 0 && receivedCoupons.length === 0) {\n    return (\n      <div className={styles.emptyState}>\n        <IonText color=\"medium\">\n          <p>暂无优惠券</p>\n        </IonText>\n      </div>\n    );\n  }\n\n  const sortedCreated = sortCoupons(createdCoupons);\n  const sortedReceived = sortCoupons(receivedCoupons);\n\n  return (\n    <div className={styles.listContainer}>\n      {/* 我创建的优惠券 */}\n      {sortedCreated.length > 0 && (\n        <div className={styles.section}>\n          <div className={styles.sectionHeader}>\n            <IonText className={styles.sectionTitle}>我创建的</IonText>\n            <IonBadge color=\"primary\">{sortedCreated.length}</IonBadge>\n          </div>\n          {sortedCreated.map(renderCouponCard)}\n        </div>\n      )}\n\n      {/* 我收到的优惠券 */}\n      {sortedReceived.length > 0 && (\n        <div className={styles.section}>\n          <div className={styles.sectionHeader}>\n            <IonText className={styles.sectionTitle}>我收到的</IonText>\n            <IonBadge color=\"secondary\">{sortedReceived.length}</IonBadge>\n          </div>\n          {sortedReceived.map(renderCouponCard)}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CouponList;\n",
  "components/CouponResultModal.jsx": "/**\n * 优惠券创建结果 Modal 组件\n * 显示新创建的优惠券信息\n */\n\nimport { \n  IonModal,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonButtons,\n  IonButton,\n  IonContent,\n  IonIcon,\n  IonText\n} from '@ionic/react';\nimport { \n  close,\n  checkmarkCircleOutline,\n  imageOutline\n} from 'ionicons/icons';\nimport styles from '../styles/CouponResultModal.module.css';\n\nconst CouponResultModal = ({ \n  isOpen, \n  coupon, \n  onClose,\n  onSaveImage,\n  isSavingImage\n}) => {\n  if (!coupon) return null;\n\n  return (\n    <IonModal isOpen={isOpen} onDidDismiss={onClose}>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>创建成功</IonTitle>\n          <IonButtons slot=\"end\">\n            <IonButton onClick={onClose}>\n              <IonIcon icon={close} />\n            </IonButton>\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n      \n      <IonContent className={styles.content}>\n        <div className={styles.resultContainer}>\n          {/* 成功提示 */}\n          <div className={styles.successHeader}>\n            <IonIcon icon={checkmarkCircleOutline} className={styles.successIcon} />\n            <IonText className={styles.successText}>\n              <h2>优惠券创建成功！</h2>\n            </IonText>\n          </div>\n\n          {/* 优惠券信息卡片 */}\n          <div className={styles.couponCard}>\n            {coupon.companyName && (\n              <div className={styles.companySection}>\n                <IonText className={styles.companyName}>{coupon.companyName}</IonText>\n              </div>\n            )}\n\n            <div className={styles.amountSection}>\n              <IonText className={styles.amountLabel}>\n                {coupon.type === 'discount' ? '折扣' : '优惠金额'}\n              </IonText>\n              <div className={styles.amountDisplay}>\n                {coupon.type === 'discount' ? (\n                  <IonText className={styles.amount}>{coupon.discount}折</IonText>\n                ) : (\n                  <>\n                    <IonText className={styles.currency}>¥</IonText>\n                    <IonText className={styles.amount}>{coupon.amount}</IonText>\n                  </>\n                )}\n              </div>\n            </div>\n\n            <div className={styles.codeSection}>\n              <IonText className={styles.codeLabel}>优惠券编码</IonText>\n              <IonText className={styles.codeValue}>\n                {coupon.code}\n              </IonText>\n            </div>\n\n            {coupon.note && (\n              <div className={styles.noteSection}>\n                <IonText className={styles.noteLabel}>备注</IonText>\n                <IonText className={styles.noteValue}>\n                  {coupon.note}\n                </IonText>\n              </div>\n            )}\n          </div>\n\n          {/* 操作按钮 */}\n          <div className={styles.actionButtons}>\n            <IonButton\n              expand=\"block\"\n              fill=\"solid\"\n              onClick={() => onSaveImage(coupon)}\n              disabled={isSavingImage}\n              className={styles.saveButton}\n            >\n              <IonIcon icon={imageOutline} slot=\"start\" />\n              {isSavingImage ? '保存中...' : '保存图片到相册'}\n            </IonButton>\n\n            <IonButton\n              expand=\"block\"\n              fill=\"outline\"\n              onClick={onClose}\n              className={styles.closeButton}\n            >\n              完成\n            </IonButton>\n          </div>\n        </div>\n      </IonContent>\n    </IonModal>\n  );\n};\n\nexport default CouponResultModal;\n",
  "components/CouponValidator.jsx": "/**\n * 优惠券验证组件\n * \n * 提供优惠券验证功能，包括编码输入、查询验证和使用操作\n * 支持显示验证结果和二次确认验券功能\n */\n\nimport React, { useState } from 'react';\nimport {\n  IonButton,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonSpinner,\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardTitle,\n  IonText,\n  IonAlert,\n  IonIcon,\n  IonActionSheet\n} from '@ionic/react';\nimport {\n  alertCircleOutline,\n  checkmarkCircleOutline,\n  closeCircleOutline,\n  searchOutline,\n  cameraOutline,\n  imagesOutline,\n  scanOutline\n} from 'ionicons/icons';\nimport { validateCouponCode } from '../utils/validators';\nimport useCouponManager from '../hooks/useCouponManager';\nimport useImageRecognition from '../hooks/useImageRecognition';\nimport useErrorHandler from '../hooks/useErrorHandler';\nimport LoadingSpinner from './LoadingSpinner';\nimport styles from '../styles/CouponValidator.module.css';\n\nconst CouponValidator = ({ onValidationSuccess }) => {\n  const [inputCode, setInputCode] = useState('');\n  const [codeError, setCodeError] = useState('');\n  const [showImageOptions, setShowImageOptions] = useState(false);\n\n  const {\n    validateCoupon,\n    isLoading,\n    error: serviceError,\n    clearError\n  } = useCouponManager();\n\n  const {\n    isRecognizing,\n    error: recognitionError,\n    captureAndRecognize,\n    selectAndRecognize,\n    clearError: clearRecognitionError\n  } = useImageRecognition();\n\n  const {\n    handleValidationError,\n    handleStorageError,\n    withLoading,\n    showToast\n  } = useErrorHandler();\n\n  /**\n   * 处理编码输入变化\n   */\n  const handleCodeChange = (e) => {\n    const value = e.detail.value.toUpperCase(); // 转换为大写\n    setInputCode(value);\n\n    // 清除之前的错误\n    if (codeError) {\n      setCodeError('');\n    }\n    if (serviceError) {\n      clearError();\n    }\n  };\n\n  /**\n   * 验证编码输入\n   */\n  const validateCodeInput = () => {\n    if (!inputCode.trim()) {\n      const errorMessage = '请输入优惠券编码';\n      setCodeError(errorMessage);\n      handleValidationError(errorMessage);\n      return false;\n    }\n\n    if (!validateCouponCode(inputCode)) {\n      const errorMessage = '请输入6位有效编码（字母和数字）';\n      setCodeError(errorMessage);\n      handleValidationError(errorMessage);\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * 处理查询优惠券\n   */\n  const handleValidateCoupon = async () => {\n    if (!validateCodeInput()) {\n      return;\n    }\n\n    const result = await withLoading(async () => {\n      const validationResult = await validateCoupon(inputCode);\n\n      if (!validationResult) {\n        throw new Error(serviceError || '查询优惠券失败');\n      }\n\n      return validationResult;\n    }, '查询优惠券失败，请重试');\n\n    if (result.success) {\n      setCodeError('');\n      setInputCode('');\n\n      // 通知父组件显示验证结果\n      if (onValidationSuccess) {\n        onValidationSuccess(result.data);\n      }\n    } else {\n      handleStorageError(result.error);\n    }\n  };\n\n  /**\n   * 显示图片识别选项\n   */\n  const handleImageRecognition = () => {\n    setShowImageOptions(true);\n  };\n\n  /**\n   * 处理拍照识别\n   */\n  const handleCameraCapture = async () => {\n    setShowImageOptions(false);\n\n    const result = await captureAndRecognize();\n\n    if (result.success && result.code) {\n      setInputCode(result.code);\n      showToast(`识别成功：${result.code}（${result.method === 'barcode' ? '条形码' : 'AI'}识别）`, 'success');\n\n      // 清除之前的错误\n      if (codeError) {\n        setCodeError('');\n      }\n      if (serviceError) {\n        clearError();\n      }\n    } else {\n      showToast(result.error || '识别失败，请手动输入', 'warning');\n    }\n  };\n\n  /**\n   * 处理相册选择识别\n   */\n  const handleGallerySelect = async () => {\n    setShowImageOptions(false);\n\n    const result = await selectAndRecognize();\n\n    if (result.success && result.code) {\n      setInputCode(result.code);\n      showToast(`识别成功：${result.code}（${result.method === 'barcode' ? '条形码' : 'AI'}识别）`, 'success');\n\n      // 清除之前的错误\n      if (codeError) {\n        setCodeError('');\n      }\n      if (serviceError) {\n        clearError();\n      }\n    } else {\n      showToast(result.error || '识别失败，请手动输入', 'warning');\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.queryForm}>\n        <IonCard className={styles.formCard}>\n          <IonCardHeader>\n            <IonCardTitle>验券查询</IonCardTitle>\n          </IonCardHeader>\n          <IonCardContent>\n            <IonItem className={styles.inputItem}>\n              <IonLabel position=\"stacked\">优惠券编码</IonLabel>\n              <IonInput\n                type=\"text\"\n                placeholder=\"请输入6位编码\"\n                value={inputCode}\n                onIonInput={handleCodeChange}\n                maxlength={6}\n                className={codeError ? styles.inputError : ''}\n              />\n            </IonItem>\n\n            {codeError && (\n              <IonText color=\"danger\" className={styles.errorText}>\n                <p>\n                  <IonIcon icon={alertCircleOutline} className={styles.errorIcon} />\n                  {codeError}\n                </p>\n              </IonText>\n            )}\n\n            {serviceError && (\n              <IonText color=\"danger\" className={styles.errorText}>\n                <p>\n                  <IonIcon icon={alertCircleOutline} className={styles.errorIcon} />\n                  {serviceError}\n                </p>\n              </IonText>\n            )}\n\n            <div className={styles.buttonGroup}>\n              <IonButton\n                expand=\"block\"\n                onClick={handleValidateCoupon}\n                disabled={isLoading || isRecognizing}\n                className={`${styles.queryButton} ${isLoading ? styles.buttonLoading : ''}`}\n              >\n                {isLoading ? (\n                  <>\n                    <IonSpinner name=\"crescent\" />\n                    <span className={styles.buttonText}>查询中...</span>\n                  </>\n                ) : (\n                  <>\n                    <IonIcon icon={searchOutline} />\n                    <span className={styles.buttonText}>查询优惠券</span>\n                  </>\n                )}\n              </IonButton>\n\n              <IonButton\n                expand=\"block\"\n                fill=\"outline\"\n                onClick={handleImageRecognition}\n                disabled={isLoading || isRecognizing}\n                className={styles.scanButton}\n              >\n                {isRecognizing ? (\n                  <>\n                    <IonSpinner name=\"crescent\" />\n                    <span className={styles.buttonText}>识别中...</span>\n                  </>\n                ) : (\n                  <>\n                    <IonIcon icon={scanOutline} />\n                    <span className={styles.buttonText}>扫码/拍照识别</span>\n                  </>\n                )}\n              </IonButton>\n            </div>\n          </IonCardContent>\n        </IonCard>\n      </div>\n\n      {/* 图片识别选项 */}\n      <IonActionSheet\n        isOpen={showImageOptions}\n        onDidDismiss={() => setShowImageOptions(false)}\n        header=\"选择识别方式\"\n        buttons={[\n          {\n            text: '拍照识别',\n            icon: cameraOutline,\n            handler: handleCameraCapture\n          },\n          {\n            text: '从相册选择',\n            icon: imagesOutline,\n            handler: handleGallerySelect\n          },\n          {\n            text: '取消',\n            role: 'cancel'\n          }\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default CouponValidator;",
  "components/ErrorBoundary.jsx": "/**\n * 错误边界组件\n * \n * 捕获 React 组件树中的 JavaScript 错误，记录错误并显示备用 UI\n */\n\nimport React from 'react';\nimport { IonButton, IonCard, IonCardContent, IonCardHeader, IonCardTitle, IonIcon } from '@ionic/react';\nimport { refreshOutline, bugOutline } from 'ionicons/icons';\nimport styles from '../styles/ErrorBoundary.module.css';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      hasError: false, \n      error: null, \n      errorInfo: null \n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // 更新 state 使下一次渲染能够显示降级后的 UI\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // 记录错误信息\n    console.error('ErrorBoundary 捕获到错误:', error, errorInfo);\n    \n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n\n    // 可以将错误日志上报给错误监控服务\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo);\n    }\n  }\n\n  handleReload() {\n    // 重新加载页面\n    window.location.reload();\n  }\n\n  handleReset() {\n    // 重置错误状态\n    this.setState({ \n      hasError: false, \n      error: null, \n      errorInfo: null \n    });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // 自定义的错误 UI\n      return (\n        <div className={styles.errorContainer}>\n          <IonCard className={styles.errorCard}>\n            <IonCardHeader>\n              <IonCardTitle className={styles.errorTitle}>\n                <IonIcon icon={bugOutline} className={styles.errorIcon} />\n                应用出现错误\n              </IonCardTitle>\n            </IonCardHeader>\n            <IonCardContent>\n              <div className={styles.errorContent}>\n                <p className={styles.errorMessage}>\n                  抱歉，应用遇到了一个意外错误。请尝试刷新页面或联系技术支持。\n                </p>\n                \n                {process.env.NODE_ENV === 'development' && this.state.error && (\n                  <details className={styles.errorDetails}>\n                    <summary>错误详情（开发模式）</summary>\n                    <pre className={styles.errorStack}>\n                      {this.state.error.toString()}\n                      {this.state.errorInfo.componentStack}\n                    </pre>\n                  </details>\n                )}\n                \n                <div className={styles.errorActions}>\n                  <IonButton \n                    fill=\"solid\" \n                    color=\"primary\"\n                    onClick={() => this.handleReload()}\n                    className={styles.reloadButton}\n                  >\n                    <IonIcon icon={refreshOutline} slot=\"start\" />\n                    刷新页面\n                  </IonButton>\n                  \n                  <IonButton \n                    fill=\"outline\" \n                    color=\"medium\"\n                    onClick={() => this.handleReset()}\n                    className={styles.resetButton}\n                  >\n                    重试\n                  </IonButton>\n                </div>\n              </div>\n            </IonCardContent>\n          </IonCard>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;",
  "components/ImagePreviewModal.jsx": "/**\n * 图片预览 Modal 组件\n * 显示生成的优惠券图片预览，支持保存到相册\n */\n\nimport { \n  IonModal,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonButtons,\n  IonButton,\n  IonContent,\n  IonIcon,\n  IonSpinner\n} from '@ionic/react';\nimport { \n  close,\n  downloadOutline\n} from 'ionicons/icons';\nimport styles from '../styles/ImagePreviewModal.module.css';\n\nconst ImagePreviewModal = ({ \n  isOpen, \n  imageData,\n  coupon,\n  onClose,\n  onSave,\n  isSaving\n}) => {\n  if (!coupon) return null;\n\n  return (\n    <IonModal isOpen={isOpen} onDidDismiss={onClose}>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>优惠券图片预览</IonTitle>\n          <IonButtons slot=\"end\">\n            <IonButton onClick={onClose}>\n              <IonIcon icon={close} />\n            </IonButton>\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n      \n      <IonContent className={styles.content}>\n        <div className={styles.previewContainer}>\n          {/* 图片预览 */}\n          {imageData ? (\n            <div className={styles.imageWrapper}>\n              <img \n                src={imageData} \n                alt=\"优惠券预览\" \n                className={styles.previewImage}\n              />\n            </div>\n          ) : (\n            <div className={styles.loadingWrapper}>\n              <IonSpinner name=\"crescent\" />\n              <p>正在生成图片...</p>\n            </div>\n          )}\n\n          {/* 操作按钮 */}\n          <div className={styles.actionButtons}>\n            <IonButton\n              expand=\"block\"\n              fill=\"solid\"\n              onClick={onSave}\n              disabled={isSaving || !imageData}\n              className={styles.saveButton}\n            >\n              <IonIcon icon={downloadOutline} slot=\"start\" />\n              {isSaving ? '保存中...' : '保存到相册'}\n            </IonButton>\n\n            <IonButton\n              expand=\"block\"\n              fill=\"outline\"\n              onClick={onClose}\n              disabled={isSaving}\n              className={styles.cancelButton}\n            >\n              取消\n            </IonButton>\n          </div>\n        </div>\n      </IonContent>\n    </IonModal>\n  );\n};\n\nexport default ImagePreviewModal;\n",
  "components/LoadingSpinner.jsx": "/**\n * 加载状态组件\n * \n * 提供统一的加载状态显示，支持不同大小和样式\n */\n\nimport React from 'react';\nimport { IonSpinner } from '@ionic/react';\nimport styles from '../styles/LoadingSpinner.module.css';\n\n/**\n * 加载状态组件\n */\nconst LoadingSpinner = ({ \n  size = 'medium', \n  message = '加载中...', \n  overlay = false,\n  fullScreen = false,\n  color = 'primary'\n}) => {\n  const containerClass = `\n    ${styles.container} \n    ${overlay ? styles.overlay : ''} \n    ${fullScreen ? styles.fullScreen : ''}\n  `.trim();\n\n  const spinnerClass = `\n    ${styles.spinner} \n    ${styles[`spinner${size.charAt(0).toUpperCase() + size.slice(1)}`]}\n  `.trim();\n\n  return (\n    <div className={containerClass}>\n      <div className={styles.content}>\n        <IonSpinner \n          name=\"crescent\" \n          color={color}\n          className={spinnerClass}\n        />\n        {message && (\n          <p className={styles.message}>{message}</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\n/**\n * 内联加载组件（用于按钮等）\n */\nexport const InlineLoader = ({ size = 'small', color = 'primary' }) => {\n  return (\n    <IonSpinner \n      name=\"crescent\" \n      color={color}\n      className={`${styles.spinner} ${styles[`spinner${size.charAt(0).toUpperCase() + size.slice(1)}`]}`}\n    />\n  );\n};\n\n/**\n * 卡片加载组件\n */\nexport const CardLoader = ({ message = '加载中...' }) => {\n  return (\n    <div className={styles.cardLoader}>\n      <div className={styles.cardContent}>\n        <IonSpinner \n          name=\"crescent\" \n          color=\"medium\"\n          className={`${styles.spinner} ${styles.spinnerMedium}`}\n        />\n        <p className={styles.cardMessage}>{message}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;",
  "components/ToastManager.jsx": "/**\n * Toast 管理组件\n * \n * 提供全局 Toast 提示功能，支持不同类型和自动消失\n */\n\nimport React from 'react';\nimport { IonToast, IonIcon } from '@ionic/react';\nimport { \n  checkmarkCircle, \n  alertCircle, \n  informationCircle, \n  warningOutline,\n  closeOutline \n} from 'ionicons/icons';\nimport styles from '../styles/ToastManager.module.css';\n\n/**\n * Toast 类型配置\n */\nconst TOAST_CONFIG = {\n  success: {\n    icon: checkmarkCircle,\n    color: 'success',\n    className: styles.successToast\n  },\n  error: {\n    icon: alertCircle,\n    color: 'danger',\n    className: styles.errorToast\n  },\n  warning: {\n    icon: warningOutline,\n    color: 'warning',\n    className: styles.warningToast\n  },\n  info: {\n    icon: informationCircle,\n    color: 'primary',\n    className: styles.infoToast\n  }\n};\n\n/**\n * Toast 管理组件\n */\nconst ToastManager = ({ toasts, onRemoveToast }) => {\n  return (\n    <>\n      {toasts.map((toast) => {\n        const config = TOAST_CONFIG[toast.type] || TOAST_CONFIG.info;\n        \n        return (\n          <IonToast\n            key={toast.id}\n            isOpen={true}\n            onDidDismiss={() => onRemoveToast(toast.id)}\n            message={toast.message}\n            duration={toast.duration}\n            position=\"top\"\n            color={config.color}\n            buttons={[\n              {\n                icon: closeOutline,\n                role: 'cancel',\n                handler: () => onRemoveToast(toast.id)\n              }\n            ]}\n            cssClass={config.className}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default ToastManager;",
  "components/ValidationResultModal.jsx": "/**\n * 验证结果 Modal 组件\n * 显示优惠券验证结果，支持验券操作\n */\n\nimport { \n  IonModal,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonButtons,\n  IonButton,\n  IonContent,\n  IonIcon,\n  IonText,\n  IonBadge,\n  IonAlert\n} from '@ionic/react';\nimport { \n  close,\n  checkmarkCircleOutline,\n  closeCircleOutline,\n  alertCircleOutline,\n  checkmarkDoneOutline\n} from 'ionicons/icons';\nimport { useState } from 'react';\nimport styles from '../styles/ValidationResultModal.module.css';\n\nconst ValidationResultModal = ({ \n  isOpen, \n  result, \n  onClose,\n  onUseCoupon,\n  isUsing\n}) => {\n  const [showUseConfirm, setShowUseConfirm] = useState(false);\n\n  const handleUseCoupon = () => {\n    setShowUseConfirm(true);\n  };\n\n  const confirmUse = () => {\n    setShowUseConfirm(false);\n    onUseCoupon(result.coupon.code);\n  };\n\n  const cancelUse = () => {\n    setShowUseConfirm(false);\n  };\n\n  if (!result) return null;\n\n  return (\n    <>\n      <IonModal isOpen={isOpen} onDidDismiss={onClose}>\n        <IonHeader>\n          <IonToolbar>\n            <IonTitle>验券结果</IonTitle>\n            <IonButtons slot=\"end\">\n              <IonButton onClick={onClose}>\n                <IonIcon icon={close} />\n              </IonButton>\n            </IonButtons>\n          </IonToolbar>\n        </IonHeader>\n        \n        <IonContent className={styles.content}>\n          {result.isValid ? (\n            <div className={styles.resultContainer}>\n              {/* 验证成功 */}\n              <div className={styles.successHeader}>\n                <IonIcon icon={checkmarkCircleOutline} className={styles.successIcon} />\n                <IonText className={styles.successText}>\n                  <h2>优惠券有效</h2>\n                </IonText>\n              </div>\n\n              {/* 优惠券信息 */}\n              <div className={styles.couponCard}>\n                {result.coupon.companyName && (\n                  <div className={styles.companySection}>\n                    <IonText className={styles.companyName}>{result.coupon.companyName}</IonText>\n                  </div>\n                )}\n\n                <div className={styles.amountSection}>\n                  <IonText className={styles.amountLabel}>\n                    {result.coupon.type === 'discount' ? '折扣' : '优惠金额'}\n                  </IonText>\n                  <div className={styles.amountDisplay}>\n                    {result.coupon.type === 'discount' ? (\n                      <IonText className={styles.amount}>{result.coupon.discount}折</IonText>\n                    ) : (\n                      <>\n                        <IonText className={styles.currency}>¥</IonText>\n                        <IonText className={styles.amount}>{result.coupon.amount}</IonText>\n                      </>\n                    )}\n                  </div>\n                </div>\n\n                <div className={styles.codeSection}>\n                  <IonText className={styles.codeLabel}>优惠券编码</IonText>\n                  <IonText className={styles.codeValue}>\n                    {result.coupon.code}\n                  </IonText>\n                </div>\n\n                {result.coupon.note && (\n                  <div className={styles.noteSection}>\n                    <IonText className={styles.noteLabel}>备注</IonText>\n                    <IonText className={styles.noteValue}>{result.coupon.note}</IonText>\n                  </div>\n                )}\n\n                <div className={styles.statusSection}>\n                  <IonText className={styles.statusLabel}>使用状态</IonText>\n                  <IonBadge \n                    color={result.coupon.isUsed ? 'medium' : 'success'}\n                    className={styles.statusBadge}\n                  >\n                    <IonIcon \n                      icon={result.coupon.isUsed ? closeCircleOutline : checkmarkCircleOutline}\n                      className={styles.statusIcon}\n                    />\n                    {result.coupon.isUsed ? '已使用' : '未使用'}\n                  </IonBadge>\n                </div>\n              </div>\n\n              {/* 提示信息 */}\n              <div className={styles.messageSection}>\n                <IonText \n                  color={result.canUse ? 'success' : 'medium'}\n                  className={styles.messageText}\n                >\n                  <p>{result.message}</p>\n                </IonText>\n              </div>\n\n              {/* 操作按钮 */}\n              <div className={styles.actionButtons}>\n                {result.canUse && result.coupon.source === 'created' && (\n                  <IonButton\n                    expand=\"block\"\n                    fill=\"solid\"\n                    color=\"primary\"\n                    onClick={handleUseCoupon}\n                    disabled={isUsing}\n                    className={styles.useButton}\n                  >\n                    <IonIcon icon={checkmarkDoneOutline} slot=\"start\" />\n                    {isUsing ? '验券中...' : '验券使用'}\n                  </IonButton>\n                )}\n\n                {result.canUse && result.coupon.source === 'received' && (\n                  <div className={styles.warningSection}>\n                    <IonText color=\"warning\">\n                      <p>收到的优惠券不支持验券操作</p>\n                    </IonText>\n                  </div>\n                )}\n\n                <IonButton\n                  expand=\"block\"\n                  fill=\"outline\"\n                  onClick={onClose}\n                  className={styles.closeButton}\n                >\n                  关闭\n                </IonButton>\n              </div>\n            </div>\n          ) : (\n            <div className={styles.resultContainer}>\n              {/* 验证失败 */}\n              <div className={styles.errorHeader}>\n                <IonIcon icon={alertCircleOutline} className={styles.errorIcon} />\n                <IonText className={styles.errorText}>\n                  <h2>优惠券无效</h2>\n                </IonText>\n              </div>\n\n              <div className={styles.errorMessage}>\n                <IonText color=\"danger\">\n                  <p>{result.message}</p>\n                </IonText>\n              </div>\n\n              <div className={styles.actionButtons}>\n                <IonButton\n                  expand=\"block\"\n                  fill=\"outline\"\n                  onClick={onClose}\n                  className={styles.closeButton}\n                >\n                  关闭\n                </IonButton>\n              </div>\n            </div>\n          )}\n        </IonContent>\n      </IonModal>\n\n      {/* 验券确认对话框 */}\n      <IonAlert\n        isOpen={showUseConfirm}\n        onDidDismiss={cancelUse}\n        header=\"确认验券\"\n        message={`确定要使用这张 ${result?.coupon?.type === 'discount' ? `${result?.coupon?.discount}折` : `¥${result?.coupon?.amount}`} 的优惠券吗？使用后将无法撤销。`}\n        buttons={[\n          {\n            text: '取消',\n            role: 'cancel',\n            handler: cancelUse\n          },\n          {\n            text: '确认使用',\n            handler: confirmUse\n          }\n        ]}\n      />\n    </>\n  );\n};\n\nexport default ValidationResultModal;\n",
  "components/Welcome.jsx": "import React from 'react';\nimport { IonIcon } from '@ionic/react';\nimport { downloadOutline, globeOutline} from 'ionicons/icons';\nimport styles from '../styles/Welcome.module.css';\n\n/**\n * 欢迎组件 - 仅用于演示\n * \n * 这个组件用于展示 Morphix AI Code 的功能和界面设计\n * 在实际开发中，请删除此组件并创建您自己的应用界面\n * \n * @component\n * @returns {JSX.Element} 欢迎页面组件\n */\nexport default function Welcome() {\n    const openDownload = () => {\n        window.open('https://baibian.app/mobile-download', '_blank');\n    };\n\n    const openWebsite = () => {\n        window.open('https://baibian.app/', '_blank');\n    };\n\n    return (\n        <div className={styles.welcomeContainer}>\n\n            {/* 头部 */}\n            <div className={styles.header}>\n                <div className={styles.logo}>\n                    <img\n                        src=\"https://app-shell.focusbe.com/Icon-60@3x.png\"\n                        alt=\"Morphix AI Logo\"\n                        className={styles.logoImage}\n                        onError={(e) => {\n                            e.target.style.display = 'none';\n                        }}\n                    />\n                    <div className={styles.logoGlow}></div>\n                </div>\n\n                <h1 className={styles.title}>\n                    <span className={styles.titleGradient}>Morphix AI</span>\n                    <span className={styles.titleSubtext}>Code</span>\n                </h1>\n                <p className={styles.subtitle}>Create your own app with AI</p>\n            </div>\n\n            {/* 三个步骤 */}\n            <div className={styles.steps}>\n                <div className={styles.step}>\n                    <div className={styles.stepNumber}>1</div>\n                    <div className={styles.stepContent}>\n                        <h3>Describe</h3>\n                        <p>Your app idea</p>\n                    </div>\n                </div>\n\n                <div className={styles.step}>\n                    <div className={styles.stepNumber}>2</div>\n                    <div className={styles.stepContent}>\n                        <h3>Generate</h3>\n                        <p>AI builds a preview</p>\n                    </div>\n                </div>\n\n                <div className={styles.step}>\n                    <div className={styles.stepNumber}>3</div>\n                    <div className={styles.stepContent}>\n                        <h3>Launch</h3>\n                        <p>Use in Morphix</p>\n                    </div>\n                </div>\n            </div>\n\n            {/* 行动按钮 */}\n            <div className={styles.ctaSection}>\n                <button \n                    className={styles.primaryBtn}\n                    onClick={openDownload}\n                >\n                    <IonIcon icon={downloadOutline} />\n                    Download Morphix AI\n                </button>\n                \n                <button \n                    className={styles.secondaryBtn}\n                    onClick={openWebsite}\n                >\n                    <IonIcon icon={globeOutline} />\n                    Visit Website\n                </button>\n            </div>\n\n            {/* 底部 */}\n            <div className={styles.footer}>\n                <p>2024 Morphix AI. Empowering everyone to create apps.</p>\n            </div>\n        </div>\n    );\n}\n",
  "hooks/index.js": "// Custom hooks export file\nexport { default as useCouponManager } from './useCouponManager';\nexport { default as useImageGenerator } from './useImageGenerator';\nexport { default as useErrorHandler } from './useErrorHandler';",
  "hooks/useCouponManager.js": "/**\n * 优惠券管理自定义Hook\n * 封装优惠券创建、查询、使用逻辑和状态管理\n */\n\nimport { useState, useCallback } from 'react';\nimport CouponService from '../services/CouponService';\n\nconst useCouponManager = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [coupons, setCoupons] = useState([]);\n  const [currentCoupon, setCurrentCoupon] = useState(null);\n\n  // 创建优惠券服务实例\n  const couponService = new CouponService();\n\n  /**\n   * 创建新优惠券\n   * @param {number} amount - 优惠券金额\n   * @returns {Promise<Object|null>} 创建的优惠券对象\n   */\n  const createCoupon = useCallback(async (amount) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const coupon = await couponService.createCoupon(amount);\n      setCurrentCoupon(coupon);\n      \n      // 更新优惠券列表\n      setCoupons(prev => [coupon, ...prev]);\n      \n      return coupon;\n    } catch (err) {\n      setError(err.message);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  /**\n   * 验证优惠券\n   * @param {string} code - 优惠券编码\n   * @returns {Promise<Object|null>} 验证结果\n   */\n  const validateCoupon = useCallback(async (code) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const result = await couponService.validateCoupon(code);\n      return result;\n    } catch (err) {\n      setError(err.message);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  /**\n   * 使用优惠券\n   * @param {string} code - 优惠券编码\n   * @returns {Promise<boolean>} 是否成功使用\n   */\n  const useCoupon = useCallback(async (code) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const success = await couponService.useCoupon(code);\n      \n      if (success) {\n        // 更新本地状态中的优惠券\n        setCoupons(prev => prev.map(coupon => \n          coupon.code === code \n            ? { ...coupon, isUsed: true, usedAt: new Date() }\n            : coupon\n        ));\n      }\n      \n      return success;\n    } catch (err) {\n      setError(err.message);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  /**\n   * 获取单个优惠券\n   * @param {string} code - 优惠券编码\n   * @returns {Promise<Object|null>} 优惠券对象\n   */\n  const getCoupon = useCallback(async (code) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const coupon = await couponService.getCoupon(code);\n      return coupon;\n    } catch (err) {\n      setError(err.message);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  /**\n   * 获取所有优惠券（分离的创建和收到）\n   * @returns {Promise<Object>} { created: [], received: [] }\n   */\n  const getAllCoupons = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const allCoupons = await couponService.getAllCoupons();\n      setCoupons(allCoupons);\n      return allCoupons;\n    } catch (err) {\n      setError(err.message);\n      return { created: [], received: [] };\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  /**\n   * 清除错误状态\n   */\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  /**\n   * 清除当前优惠券\n   */\n  const clearCurrentCoupon = useCallback(() => {\n    setCurrentCoupon(null);\n  }, []);\n\n  return {\n    // 状态\n    isLoading,\n    error,\n    coupons,\n    currentCoupon,\n    \n    // 操作方法\n    createCoupon,\n    validateCoupon,\n    useCoupon,\n    getCoupon,\n    getAllCoupons,\n    clearError,\n    clearCurrentCoupon\n  };\n};\n\nexport default useCouponManager;",
  "hooks/useErrorHandler.js": "/**\n * 全局错误处理 Hook\n * \n * 提供统一的错误处理、Toast 提示和加载状态管理\n */\n\nimport { useState, useCallback } from 'react';\n\n/**\n * 错误类型枚举\n */\nexport const ErrorType = {\n  VALIDATION: 'validation',\n  NETWORK: 'network', \n  STORAGE: 'storage',\n  IMAGE: 'image',\n  UNKNOWN: 'unknown'\n};\n\n/**\n * 错误严重程度\n */\nexport const ErrorSeverity = {\n  INFO: 'info',\n  WARNING: 'warning', \n  ERROR: 'error',\n  CRITICAL: 'critical'\n};\n\n/**\n * 全局错误处理 Hook\n */\nconst useErrorHandler = () => {\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [toasts, setToasts] = useState([]);\n\n  /**\n   * 添加错误\n   */\n  const addError = useCallback((error, type = ErrorType.UNKNOWN, severity = ErrorSeverity.ERROR) => {\n    const errorId = Date.now() + Math.random();\n    const errorObj = {\n      id: errorId,\n      message: typeof error === 'string' ? error : error.message || '未知错误',\n      type,\n      severity,\n      timestamp: new Date(),\n      details: typeof error === 'object' ? error : null\n    };\n\n    setErrors(prev => [...prev, errorObj]);\n\n    // 自动清除非关键错误\n    if (severity !== ErrorSeverity.CRITICAL) {\n      setTimeout(() => {\n        clearError(errorId);\n      }, 5000);\n    }\n\n    return errorId;\n  }, []);\n\n  /**\n   * 清除特定错误\n   */\n  const clearError = useCallback((errorId) => {\n    setErrors(prev => prev.filter(error => error.id !== errorId));\n  }, []);\n\n  /**\n   * 清除所有错误\n   */\n  const clearAllErrors = useCallback(() => {\n    setErrors([]);\n  }, []);\n\n  /**\n   * 显示 Toast 提示\n   */\n  const showToast = useCallback((message, type = 'info', duration = 3000) => {\n    const toastId = Date.now() + Math.random();\n    const toast = {\n      id: toastId,\n      message,\n      type,\n      duration,\n      timestamp: new Date()\n    };\n\n    setToasts(prev => [...prev, toast]);\n\n    // 自动移除 Toast\n    setTimeout(() => {\n      setToasts(prev => prev.filter(t => t.id !== toastId));\n    }, duration);\n\n    return toastId;\n  }, []);\n\n  /**\n   * 移除 Toast\n   */\n  const removeToast = useCallback((toastId) => {\n    setToasts(prev => prev.filter(t => t.id !== toastId));\n  }, []);\n\n  /**\n   * 异步操作包装器\n   */\n  const withLoading = useCallback(async (asyncFn, errorMessage = '操作失败') => {\n    try {\n      setIsLoading(true);\n      const result = await asyncFn();\n      return { success: true, data: result };\n    } catch (error) {\n      console.error('异步操作错误:', error);\n      addError(error.message || errorMessage, ErrorType.UNKNOWN, ErrorSeverity.ERROR);\n      return { success: false, error: error.message || errorMessage };\n    } finally {\n      setIsLoading(false);\n    }\n  }, [addError]);\n\n  /**\n   * 处理验证错误\n   */\n  const handleValidationError = useCallback((message) => {\n    return addError(message, ErrorType.VALIDATION, ErrorSeverity.WARNING);\n  }, [addError]);\n\n  /**\n   * 处理网络错误\n   */\n  const handleNetworkError = useCallback((error) => {\n    const message = '网络连接失败，请检查网络设置';\n    return addError(message, ErrorType.NETWORK, ErrorSeverity.ERROR);\n  }, [addError]);\n\n  /**\n   * 处理存储错误\n   */\n  const handleStorageError = useCallback((error) => {\n    const message = '数据保存失败，请重试';\n    return addError(message, ErrorType.STORAGE, ErrorSeverity.ERROR);\n  }, [addError]);\n\n  /**\n   * 处理图片生成错误\n   */\n  const handleImageError = useCallback((error) => {\n    const message = '图片生成失败，请重试';\n    return addError(message, ErrorType.IMAGE, ErrorSeverity.ERROR);\n  }, [addError]);\n\n  /**\n   * 获取最新错误\n   */\n  const getLatestError = useCallback(() => {\n    return errors.length > 0 ? errors[errors.length - 1] : null;\n  }, [errors]);\n\n  /**\n   * 获取特定类型的错误\n   */\n  const getErrorsByType = useCallback((type) => {\n    return errors.filter(error => error.type === type);\n  }, [errors]);\n\n  return {\n    // 状态\n    errors,\n    isLoading,\n    toasts,\n    \n    // 错误管理\n    addError,\n    clearError,\n    clearAllErrors,\n    getLatestError,\n    getErrorsByType,\n    \n    // Toast 管理\n    showToast,\n    removeToast,\n    \n    // 工具方法\n    withLoading,\n    handleValidationError,\n    handleNetworkError,\n    handleStorageError,\n    handleImageError\n  };\n};\n\nexport default useErrorHandler;",
  "hooks/useImageGenerator.js": "/**\n * 图片生成自定义Hook\n * 封装Canvas图片生成逻辑和状态管理\n */\n\nimport { useState, useCallback } from 'react';\nimport ImageService from '../services/ImageService';\n\nconst useImageGenerator = () => {\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [generatedImage, setGeneratedImage] = useState(null);\n\n  // 创建图片服务实例\n  const imageService = new ImageService();\n\n  /**\n   * 生成优惠券图片\n   * @param {Object} coupon - 优惠券对象\n   * @param {Object} config - 图片配置（可选）\n   * @returns {Promise<string|null>} Base64格式的图片数据\n   */\n  const generateImage = useCallback(async (coupon, config = null) => {\n    setIsGenerating(true);\n    setError(null);\n    \n    try {\n      const base64Data = await imageService.generateCouponImage(coupon, config);\n      setGeneratedImage(base64Data);\n      return base64Data;\n    } catch (err) {\n      setError(err.message);\n      return null;\n    } finally {\n      setIsGenerating(false);\n    }\n  }, []);\n\n  /**\n   * 保存图片到相册\n   * @param {string} base64Data - Base64格式的图片数据\n   * @param {string} filename - 文件名（可选）\n   * @returns {Promise<Object>} 保存结果\n   */\n  const saveToAlbum = useCallback(async (base64Data, filename = null) => {\n    setIsSaving(true);\n    setError(null);\n    \n    try {\n      const result = await imageService.saveImageToAlbum(base64Data, filename);\n      \n      if (!result.success && result.error) {\n        setError(result.error);\n      }\n      \n      return result;\n    } catch (err) {\n      setError(err.message);\n      return {\n        success: false,\n        filename: filename || null,\n        error: err.message\n      };\n    } finally {\n      setIsSaving(false);\n    }\n  }, []);\n\n  /**\n   * 生成并保存优惠券图片\n   * @param {Object} coupon - 优惠券对象\n   * @param {Object} config - 图片配置（可选）\n   * @returns {Promise<Object>} 生成和保存结果\n   */\n  const generateAndSave = useCallback(async (coupon, config = null) => {\n    setIsGenerating(true);\n    setIsSaving(true);\n    setError(null);\n    \n    try {\n      const result = await imageService.generateAndSaveImage(coupon, config);\n      \n      if (result.success && result.base64Data) {\n        setGeneratedImage(result.base64Data);\n      }\n      \n      return result;\n    } catch (err) {\n      setError(err.message);\n      return {\n        success: false,\n        base64Data: null,\n        filename: null,\n        error: err.message\n      };\n    } finally {\n      setIsGenerating(false);\n      setIsSaving(false);\n    }\n  }, []);\n\n  /**\n   * 清除生成的图片\n   */\n  const clearImage = useCallback(() => {\n    setGeneratedImage(null);\n  }, []);\n\n  /**\n   * 清除错误状态\n   */\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  return {\n    // 状态\n    isGenerating,\n    isSaving,\n    error,\n    generatedImage,\n    \n    // 操作方法\n    generateImage,\n    saveToAlbum,\n    generateAndSave,\n    clearImage,\n    clearError\n  };\n};\n\nexport default useImageGenerator;",
  "hooks/useImageRecognition.js": "/**\n * 图片识别自定义Hook\n * 封装图片识别逻辑和状态管理\n */\n\nimport { useState, useCallback } from 'react';\nimport ImageRecognitionService from '../services/ImageRecognitionService';\n\nconst useImageRecognition = () => {\n  const [isRecognizing, setIsRecognizing] = useState(false);\n  const [error, setError] = useState(null);\n  const [recognitionResult, setRecognitionResult] = useState(null);\n\n  // 创建图片识别服务实例\n  const recognitionService = new ImageRecognitionService();\n\n  /**\n   * 识别图片中的优惠券编码\n   * @param {string} base64Image - Base64格式的图片数据\n   * @returns {Promise<Object>} 识别结果\n   */\n  const recognizeCode = useCallback(async (base64Image) => {\n    setIsRecognizing(true);\n    setError(null);\n    \n    try {\n      const result = await recognitionService.recognizeCouponCode(base64Image);\n      setRecognitionResult(result);\n      \n      if (!result.success) {\n        setError(result.error || '识别失败');\n      }\n      \n      return result;\n    } catch (err) {\n      const errorMessage = err.message || '识别过程中发生错误';\n      setError(errorMessage);\n      return {\n        success: false,\n        code: null,\n        error: errorMessage\n      };\n    } finally {\n      setIsRecognizing(false);\n    }\n  }, []);\n\n  /**\n   * 从相机拍照并识别\n   * @returns {Promise<Object>} 识别结果\n   */\n  const captureAndRecognize = useCallback(async () => {\n    setIsRecognizing(true);\n    setError(null);\n    \n    try {\n      const base64Image = await recognitionService.captureFromCamera();\n      const result = await recognitionService.recognizeCouponCode(base64Image);\n      setRecognitionResult(result);\n      \n      if (!result.success) {\n        setError(result.error || '识别失败');\n      }\n      \n      return result;\n    } catch (err) {\n      const errorMessage = err.message || '拍照或识别失败';\n      setError(errorMessage);\n      return {\n        success: false,\n        code: null,\n        error: errorMessage\n      };\n    } finally {\n      setIsRecognizing(false);\n    }\n  }, []);\n\n  /**\n   * 从相册选择图片并识别\n   * @returns {Promise<Object>} 识别结果\n   */\n  const selectAndRecognize = useCallback(async () => {\n    setIsRecognizing(true);\n    setError(null);\n    \n    try {\n      const base64Image = await recognitionService.selectFromGallery();\n      const result = await recognitionService.recognizeCouponCode(base64Image);\n      setRecognitionResult(result);\n      \n      if (!result.success) {\n        setError(result.error || '识别失败');\n      }\n      \n      return result;\n    } catch (err) {\n      const errorMessage = err.message || '选择图片或识别失败';\n      setError(errorMessage);\n      return {\n        success: false,\n        code: null,\n        error: errorMessage\n      };\n    } finally {\n      setIsRecognizing(false);\n    }\n  }, []);\n\n  /**\n   * 清除错误状态\n   */\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  /**\n   * 清除识别结果\n   */\n  const clearResult = useCallback(() => {\n    setRecognitionResult(null);\n  }, []);\n\n  return {\n    // 状态\n    isRecognizing,\n    error,\n    recognitionResult,\n    \n    // 操作方法\n    recognizeCode,\n    captureAndRecognize,\n    selectAndRecognize,\n    clearError,\n    clearResult\n  };\n};\n\nexport default useImageRecognition;\n",
  "services/CouponService.js": "/**\n * 优惠券业务服务\n * 负责优惠券的创建、验证和状态管理\n */\n\nimport { COUPON_CODE_LENGTH, COUPON_CODE_CHARS } from '../utils/constants';\nimport { createCoupon, createValidationResult, CouponErrorType } from '../utils/types';\nimport { validateAmount, validateCouponCode } from '../utils/validators';\nimport StorageService from './StorageService';\n\nclass CouponService {\n  constructor() {\n    this.storageService = new StorageService();\n  }\n\n  /**\n   * 生成6位唯一优惠券编码\n   * @returns {string} 6位编码\n   */\n  generateCouponCode() {\n    let code = '';\n    for (let i = 0; i < COUPON_CODE_LENGTH; i++) {\n      const randomIndex = Math.floor(Math.random() * COUPON_CODE_CHARS.length);\n      code += COUPON_CODE_CHARS[randomIndex];\n    }\n    return code;\n  }\n\n  /**\n   * 创建新优惠券\n   * @param {Object} couponData - 优惠券数据\n   * @returns {Promise<Object>} 创建的优惠券对象\n   * @throws {Error} 当数据无效时抛出错误\n   */\n  async createCoupon(couponData) {\n    const { type = 'amount', amount, discount, note = '', companyName = '', expiryDate } = couponData;\n\n    // 验证金额或折扣\n    if (type === 'amount' && !validateAmount(amount)) {\n      throw new Error('Invalid amount format');\n    }\n    \n    if (type === 'discount' && !validateAmount(discount)) {\n      throw new Error('Invalid discount format');\n    }\n\n    // 生成唯一编码，确保不重复\n    let code;\n    let attempts = 0;\n    const maxAttempts = 10;\n\n    do {\n      code = this.generateCouponCode();\n      attempts++;\n      \n      if (attempts > maxAttempts) {\n        throw new Error('Failed to generate unique coupon code');\n      }\n    } while (await this.storageService.getCoupon(code));\n\n    const coupon = createCoupon({\n      id: code,\n      code,\n      type,\n      amount: type === 'amount' ? Number(amount) : 0,\n      discount: type === 'discount' ? Number(discount) : null,\n      note,\n      companyName,\n      expiryDate,\n      isUsed: false,\n      createdAt: new Date()\n    });\n\n    return await this.storageService.saveCreatedCoupon(coupon);\n  }\n\n  /**\n   * 批量创建优惠券\n   * @param {Object} couponData - 优惠券数据\n   * @param {number} quantity - 创建数量\n   * @returns {Promise<Array>} 创建的优惠券数组\n   */\n  async createBatchCoupons(couponData, quantity) {\n    const coupons = [];\n    \n    for (let i = 0; i < quantity; i++) {\n      try {\n        const coupon = await this.createCoupon(couponData);\n        coupons.push(coupon);\n      } catch (error) {\n        console.error(`Failed to create coupon ${i + 1}:`, error);\n        // 继续创建其他优惠券\n      }\n    }\n    \n    return coupons;\n  }\n\n  /**\n   * 验证优惠券编码\n   * @param {string} code - 优惠券编码\n   * @returns {Promise<Object>} 验证结果\n   */\n  async validateCoupon(code) {\n    if (!validateCouponCode(code)) {\n      return createValidationResult({\n        isValid: false,\n        message: '优惠券编码格式无效',\n        canUse: false\n      });\n    }\n\n    try {\n      const coupon = await this.storageService.getCoupon(code);\n      \n      if (!coupon) {\n        return createValidationResult({\n          isValid: false,\n          message: '优惠券不存在',\n          canUse: false\n        });\n      }\n\n      if (coupon.isUsed) {\n        return createValidationResult({\n          isValid: true,\n          coupon,\n          message: '优惠券已使用',\n          canUse: false\n        });\n      }\n\n      return createValidationResult({\n        isValid: true,\n        coupon,\n        message: '优惠券有效',\n        canUse: true\n      });\n    } catch (error) {\n      return createValidationResult({\n        isValid: false,\n        message: '查询优惠券时发生错误',\n        canUse: false\n      });\n    }\n  }\n\n  /**\n   * 使用优惠券\n   * @param {string} code - 优惠券编码\n   * @returns {Promise<boolean>} 是否成功使用\n   */\n  async useCoupon(code) {\n    try {\n      const coupon = await this.storageService.getCoupon(code);\n      \n      if (!coupon) {\n        throw new Error('Coupon not found');\n      }\n\n      if (coupon.isUsed) {\n        throw new Error('Coupon already used');\n      }\n\n      const updatedCoupon = await this.storageService.updateCoupon(code, {\n        ...coupon??{},\n        isUsed: true,\n        usedAt: new Date()\n      });\n\n      return !!updatedCoupon;\n    } catch (error) {\n      console.error('Error using coupon:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 获取所有优惠券（分离的创建和收到）\n   * @returns {Promise<Object>} { created: [], received: [] }\n   */\n  async getAllCoupons() {\n    try {\n      return await this.storageService.getAllCoupons();\n    } catch (error) {\n      console.error('Error getting all coupons:', error);\n      return { created: [], received: [] };\n    }\n  }\n\n  /**\n   * 领取优惠券（保存到收到的列表）\n   * @param {string} code - 优惠券编码\n   * @returns {Promise<Object|null>} 领取的优惠券对象\n   */\n  async receiveCoupon(code) {\n    try {\n      // 先验证优惠券是否存在（从创建的列表中查找）\n      const existingCoupon = await this.storageService.getCoupon(code);\n      \n      if (!existingCoupon) {\n        throw new Error('Coupon not found');\n      }\n\n      // 如果已经在收到的列表中，不重复添加\n      if (existingCoupon.source === 'received') {\n        return existingCoupon;\n      }\n\n      // 保存到收到的列表\n      return await this.storageService.saveReceivedCoupon(existingCoupon);\n    } catch (error) {\n      console.error('Error receiving coupon:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 获取单个优惠券\n   * @param {string} code - 优惠券编码\n   * @returns {Promise<Object|null>} 优惠券对象或null\n   */\n  async getCoupon(code) {\n    try {\n      return await this.storageService.getCoupon(code);\n    } catch (error) {\n      console.error('Error getting coupon:', error);\n      return null;\n    }\n  }\n}\n\nexport default CouponService;",
  "services/ImageRecognitionService.js": "/**\n * 图片识别服务\n * 支持条形码识别和AI文字识别\n */\n\nimport AppSdk from '@morphixai/app-sdk';\nimport { Html5Qrcode } from 'html5-qrcode';\n\nclass ImageRecognitionService {\n  /**\n   * 从图片中识别优惠券编码\n   * @param {string} base64Image - Base64格式的图片数据\n   * @returns {Promise<Object>} 识别结果\n   */\n  async recognizeCouponCode(base64Image) {\n    console.log('🔍 [识别开始] 开始识别优惠券编码');\n    console.log('📷 [图片信息] 图片大小:', Math.round(base64Image.length / 1024), 'KB');\n\n    try {\n      // 首先尝试条形码识别\n      console.log('📊 [条形码识别] 开始条形码识别...');\n      const startBarcode = Date.now();\n\n      const barcodeResult = await this.recognizeBarcode(base64Image);\n      const barcodeTime = Date.now() - startBarcode;\n\n      console.log(`⏱️  [条形码识别] 耗时: ${barcodeTime}ms`);\n\n      if (barcodeResult.success && barcodeResult.code) {\n        console.log('✅ [条形码识别] 识别成功!');\n        console.log('🎯 [识别结果] 编码:', barcodeResult.code);\n        console.log('📈 [置信度]', (barcodeResult.confidence * 100).toFixed(1) + '%');\n\n        return {\n          success: true,\n          code: barcodeResult.code,\n          method: 'barcode',\n          confidence: barcodeResult.confidence || 1.0\n        };\n      }\n\n      console.log('❌ [条形码识别] 识别失败，切换到AI识别');\n\n      // 如果条形码识别失败，使用AI识别\n      console.log('🤖 [AI识别] 开始AI识别...');\n      const startAI = Date.now();\n\n      const aiResult = await this.recognizeWithAI(base64Image);\n      const aiTime = Date.now() - startAI;\n\n      console.log(`⏱️  [AI识别] 耗时: ${aiTime}ms`);\n\n      if (aiResult.success && aiResult.code) {\n        console.log('✅ [AI识别] 识别成功!');\n        console.log('🎯 [识别结果] 编码:', aiResult.code);\n        console.log('📈 [置信度]', (aiResult.confidence * 100).toFixed(1) + '%');\n\n        return {\n          success: true,\n          code: aiResult.code,\n          method: 'ai',\n          confidence: aiResult.confidence || 0.8\n        };\n      }\n\n      console.log('❌ [AI识别] 识别失败');\n      console.log('⚠️  [识别结束] 所有识别方法均失败');\n\n      return {\n        success: false,\n        code: null,\n        method: null,\n        error: '未能识别出优惠券编码'\n      };\n    } catch (error) {\n      console.error('💥 [识别错误] 识别过程发生错误:', error);\n      return {\n        success: false,\n        code: null,\n        method: null,\n        error: error.message || '识别失败'\n      };\n    }\n  }\n\n  /**\n   * 条形码识别（使用 html5-qrcode）\n   * @param {string} base64Image - Base64格式的图片数据\n   * @returns {Promise<Object>} 识别结果\n   */\n  async recognizeBarcode(base64Image) {\n    console.log('  📊 [html5-qrcode] 初始化识别器...');\n\n    try {\n      console.log('  📊 [html5-qrcode] 准备图片数据...');\n\n      // 将 base64 转换为 File 对象\n      const blob = await this._base64ToBlob(base64Image);\n      const file = new File([blob], 'coupon.jpg', { type: blob.type });\n\n      console.log('  📊 [html5-qrcode] 文件大小:', Math.round(file.size / 1024), 'KB');\n\n      // 创建临时容器元素（html5-qrcode 需要）\n      const tempDiv = document.createElement('div');\n      tempDiv.id = 'temp-qr-reader-' + Date.now();\n      tempDiv.style.display = 'none';\n      document.body.appendChild(tempDiv);\n\n      try {\n        // 使用顶部导入的 Html5Qrcode\n        const html5QrCode = new Html5Qrcode(tempDiv.id);\n\n        console.log('  📊 [html5-qrcode] 开始扫描文件...');\n\n        // 扫描文件\n        const decodedText = await html5QrCode.scanFile(file, false);\n\n        console.log('  📊 [html5-qrcode] 原始识别结果:', decodedText);\n\n        // 清理临时元素\n        document.body.removeChild(tempDiv);\n\n        // 尝试从识别结果中提取 code\n        const extractedCode = this._extractCodeFromText(decodedText);\n\n        if (extractedCode) {\n          console.log('  📊 [html5-qrcode] ✅ 识别成功，编码:', extractedCode);\n          return {\n            success: true,\n            code: extractedCode,\n            confidence: 0.95\n          };\n        } else {\n          console.log('  📊 [html5-qrcode] ⚠️ 识别到内容但无法提取编码:', decodedText);\n          return {\n            success: false,\n            code: null,\n            rawText: decodedText\n          };\n        }\n      } catch (error) {\n        // 清理临时元素\n        if (document.body.contains(tempDiv)) {\n          document.body.removeChild(tempDiv);\n        }\n\n        console.log('  📊 [html5-qrcode] ❌ 识别失败:', error.message);\n        return {\n          success: false,\n          code: null\n        };\n      }\n    } catch (error) {\n      console.error('  📊 [html5-qrcode] 初始化失败:', error);\n      return {\n        success: false,\n        code: null,\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * 将 base64 转换为 Blob\n   * @param {string} base64Image - Base64格式的图片数据\n   * @returns {Promise<Blob>} Blob 对象\n   * @private\n   */\n  async _base64ToBlob(base64Image) {\n    // 如果是 data URL，提取 base64 部分\n    let base64Data = base64Image;\n    let mimeType = 'image/jpeg';\n\n    if (base64Image.startsWith('data:')) {\n      const matches = base64Image.match(/^data:([^;]+);base64,(.+)$/);\n      if (matches) {\n        mimeType = matches[1];\n        base64Data = matches[2];\n      }\n    }\n\n    // 将 base64 转换为二进制\n    const binaryString = atob(base64Data);\n    const bytes = new Uint8Array(binaryString.length);\n\n    for (let i = 0; i < binaryString.length; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return new Blob([bytes], { type: mimeType });\n  }\n\n  /**\n   * AI文字识别\n   * @param {string} base64Image - Base64格式的图片数据\n   * @returns {Promise<Object>} 识别结果\n   */\n  async recognizeWithAI(base64Image) {\n    try {\n      // 提取纯Base64数据\n      const pureBase64 = base64Image.replace(/^data:image\\/[a-z]+;base64,/, '');\n\n      // 使用AppSdk的AI能力进行文字识别\n      const prompt = `请识别图片中的6位优惠券编码。编码由大写字母和数字组成，格式如：ABC123。\n只返回识别到的6位编码，不要包含任何其他文字。如果图片中有多个编码，返回最清晰的一个。\n如果无法识别，返回\"NONE\"。`;\n\n      const result = await AppSdk.AI.chat({\n        messages: [\n          {\n            role: 'user',\n            content: [\n              {\n                type: 'text',\n                text: prompt\n              },\n              {\n                type: 'image_url',\n                image_url: {\n                  url: `data:image/jpeg;base64,${pureBase64}`\n                }\n              }\n            ]\n          }\n        ],\n        options: {\n          temperature: 0.1 // 使用较低的温度以获得更准确的结果\n        }\n      });\n\n      if (result && result.content) {\n        const recognizedText = result.content.trim().toUpperCase();\n\n        console.log('  🤖 [AI] 原始识别内容:', recognizedText);\n\n        // 尝试从识别结果中提取 code\n        const extractedCode = this._extractCodeFromText(recognizedText);\n\n        if (extractedCode) {\n          console.log('  🤖 [AI] 提取到编码:', extractedCode);\n          return {\n            success: true,\n            code: extractedCode,\n            confidence: 0.8\n          };\n        }\n      }\n\n      return {\n        success: false,\n        code: null\n      };\n    } catch (error) {\n      console.error('AI recognition error:', error);\n      return {\n        success: false,\n        code: null,\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * 从文本中提取优惠券编码\n   * @param {string} text - 识别到的文本\n   * @returns {string|null} 提取到的编码\n   * @private\n   */\n  _extractCodeFromText(text) {\n    // 1. 尝试从 URL 中提取 code 参数\n    const urlMatch = text.match(/[?&]code=([A-Z0-9]{6})/i);\n    if (urlMatch) {\n      console.log('  🤖 [AI] 从 URL 提取编码');\n      return urlMatch[1].toUpperCase();\n    }\n\n    // 2. 尝试直接匹配6位编码\n    const codeMatch = text.match(/[A-Z0-9]{6}/);\n    if (codeMatch) {\n      console.log('  🤖 [AI] 直接匹配编码');\n      return codeMatch[0];\n    }\n\n    return null;\n  }\n\n\n\n  /**\n   * 从相机拍照\n   * @returns {Promise<string>} Base64格式的图片数据\n   */\n  async captureFromCamera() {\n    try {\n      const result = await AppSdk.camera.takePicture({\n        quality: 0.9\n      });\n\n      if (!result.canceled && result.assets && result.assets.length > 0) {\n        const asset = result.assets[0];\n        // 如果有base64数据，直接使用\n        if (asset.base64) {\n          return `data:image/jpeg;base64,${asset.base64}`;\n        }\n        // 否则使用uri\n        return asset.uri;\n      }\n\n      throw new Error('拍照失败或已取消');\n    } catch (error) {\n      console.error('Camera capture error:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 从相册选择图片\n   * @returns {Promise<string>} Base64格式的图片数据\n   */\n  async selectFromGallery() {\n    try {\n      const result = await AppSdk.camera.pickImage({\n        quality: 0.9\n      });\n\n      if (!result.canceled && result.assets && result.assets.length > 0) {\n        const asset = result.assets[0];\n        // 如果有base64数据，直接使用\n        if (asset.base64) {\n          return `data:image/jpeg;base64,${asset.base64}`;\n        }\n        // 否则使用uri\n        return asset.uri;\n      }\n\n      throw new Error('选择图片失败或已取消');\n    } catch (error) {\n      console.error('Gallery selection error:', error);\n      throw error;\n    }\n  }\n}\n\nexport default ImageRecognitionService;\n",
  "services/ImageService.js": "/**\n * 图片生成服务\n * 基于Canvas实现优惠券图片生成和AppSdk.fileSystem.saveImageToAlbum保存功能\n */\n\nimport AppSdk from '@morphixai/app-sdk';\nimport QRCode from 'qrcode';\nimport { createCouponImageConfig, CouponErrorType, createCouponError } from '../utils/types';\n\nclass ImageService {\n  constructor() {\n    // 默认图片配置\n    this.defaultConfig = createCouponImageConfig();\n  }\n\n  /**\n   * 生成优惠券图片\n   * @param {Object} coupon - 优惠券对象\n   * @param {Object} config - 可选的图片配置\n   * @returns {Promise<string>} Base64编码的图片数据\n   */\n  async generateCouponImage(coupon, config = {}) {\n    try {\n      const imageConfig = { ...this.defaultConfig, ...config };\n\n      // 创建高分辨率Canvas元素（2倍分辨率提高清晰度）\n      const scale = 2;\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n\n      // 设置画布尺寸（使用2倍分辨率）\n      canvas.width = imageConfig.width * scale;\n      canvas.height = imageConfig.height * scale;\n\n      // 缩放上下文以匹配高分辨率\n      ctx.scale(scale, scale);\n\n      // 启用抗锯齿和图像平滑\n      ctx.imageSmoothingEnabled = true;\n      ctx.imageSmoothingQuality = 'high';\n\n      // 绘制背景渐变\n      this._drawBackground(ctx, imageConfig);\n\n      // 绘制优惠券内容（异步，因为包含二维码生成）\n      await this._drawCouponContent(ctx, coupon, imageConfig);\n\n      // 转换为Base64（使用最高质量）\n      const base64Data = canvas.toDataURL('image/png', 1.0);\n\n      return base64Data;\n    } catch (error) {\n      console.error('Error generating coupon image:', error);\n      throw createCouponError({\n        type: CouponErrorType.IMAGE_GENERATION_ERROR,\n        message: 'Failed to generate coupon image',\n        details: error\n      });\n    }\n  }\n\n  /**\n   * 保存图片到设备相册\n   * @param {string} base64Data - Base64编码的图片数据\n   * @param {string} filename - 可选的文件名\n   * @returns {Promise<Object>} 保存结果\n   */\n  async saveImageToAlbum(base64Data, filename) {\n    try {\n      // 提取纯Base64数据（去除data:image/png;base64,前缀）\n      const pureBase64 = base64Data.replace(/^data:image\\/[a-z]+;base64,/, '');\n\n      // 生成文件名（如果未提供）\n      const finalFilename = filename || `coupon_${Date.now()}.png`;\n\n      // 调用AppSdk保存到相册\n      const result = await AppSdk.fileSystem.saveImageToAlbum({\n        base64Data: pureBase64,\n        filename: finalFilename\n      });\n\n      return {\n        success: result.success,\n        filename: finalFilename,\n        error: result.error || null\n      };\n    } catch (error) {\n      console.error('Error saving image to album:', error);\n      return {\n        success: false,\n        filename: filename || null,\n        error: error.message || 'Failed to save image'\n      };\n    }\n  }\n\n  /**\n   * 生成并保存优惠券图片到相册\n   * @param {Object} coupon - 优惠券对象\n   * @param {Object} config - 可选的图片配置\n   * @returns {Promise<Object>} 生成和保存结果\n   */\n  async generateAndSaveImage(coupon, config = {}) {\n    try {\n      // 生成图片\n      const base64Data = await this.generateCouponImage(coupon, config);\n\n      // 生成文件名\n      const filename = `coupon_${coupon.code}_${Date.now()}.png`;\n\n      // 保存到相册\n      const saveResult = await this.saveImageToAlbum(base64Data, filename);\n\n      return {\n        success: saveResult.success,\n        base64Data: saveResult.success ? base64Data : null,\n        filename: saveResult.filename,\n        error: saveResult.error\n      };\n    } catch (error) {\n      console.error('Error generating and saving image:', error);\n      return {\n        success: false,\n        base64Data: null,\n        filename: null,\n        error: error.message || 'Failed to generate and save image'\n      };\n    }\n  }\n\n  /**\n   * 绘制背景渐变（红包风格）\n   * @param {CanvasRenderingContext2D} ctx - Canvas上下文\n   * @param {Object} config - 图片配置\n   * @private\n   */\n  _drawBackground(ctx, config) {\n    // 创建红包风格的渐变背景\n    const gradient = ctx.createLinearGradient(0, 0, config.width, config.height);\n    gradient.addColorStop(0, '#DC2626'); // 深红色\n    gradient.addColorStop(0.5, '#EF4444'); // 红色\n    gradient.addColorStop(1, '#F87171'); // 浅红色\n\n    // 填充背景\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, config.width, config.height);\n\n    // 添加装饰性图案（红包纹理）\n    this._drawRedEnvelopePattern(ctx, config);\n\n    // 添加圆角效果\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-in';\n    this._drawRoundedRect(ctx, 0, 0, config.width, config.height, 24);\n    ctx.restore();\n  }\n\n  /**\n   * 绘制红包装饰图案\n   * @param {CanvasRenderingContext2D} ctx - Canvas上下文\n   * @param {Object} config - 图片配置\n   * @private\n   */\n  _drawRedEnvelopePattern(ctx, config) {\n    ctx.save();\n\n    // 绘制半透明的装饰圆圈\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.05)';\n\n    // 左上角大圆\n    ctx.beginPath();\n    ctx.arc(-30, -30, 120, 0, Math.PI * 2);\n    ctx.fill();\n\n    // 右下角大圆\n    ctx.beginPath();\n    ctx.arc(config.width + 30, config.height + 30, 120, 0, Math.PI * 2);\n    ctx.fill();\n\n    // 中间装饰圆\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.03)';\n    ctx.beginPath();\n    ctx.arc(config.width / 2, config.height / 2, 180, 0, Math.PI * 2);\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  /**\n   * 绘制优惠券内容（优化布局）\n   * @param {CanvasRenderingContext2D} ctx - Canvas上下文\n   * @param {Object} coupon - 优惠券对象\n   * @param {Object} config - 图片配置\n   * @returns {Promise<void>}\n   * @private\n   */\n  async _drawCouponContent(ctx, coupon, config) {\n    const centerX = config.width / 2;\n    const padding = 40;\n\n    // === 主内容（居中显示） ===\n    ctx.fillStyle = config.textColor;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'top';\n\n    // 计算起始Y位置，让内容整体居中\n    let contentHeight = 0;\n\n    // 计算总高度\n    if (coupon.companyName) contentHeight += 50;\n    contentHeight += 45; // \"优惠券\"标题\n    contentHeight += 90; // 金额/折扣\n    if (coupon.note) {\n      const lines = this._wrapText(ctx, coupon.note, config.width - padding * 2);\n      contentHeight += lines.length * 28 + 20;\n    }\n    contentHeight += 50; // 编码\n    if (coupon.expiryDate) contentHeight += 35; // 有效期\n\n    // 从垂直居中位置开始\n    let currentY = (config.height - contentHeight) / 2;\n    currentY = Math.max(50, currentY); // 最小上边距\n\n    // 公司名称（如果有）\n    if (coupon.companyName) {\n      ctx.font = `600 ${config.fontSize.label + 6}px -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif`;\n      ctx.fillText(coupon.companyName, centerX, currentY);\n      currentY += 50;\n    }\n\n    // \"优惠券\"标题\n    ctx.font = `${config.fontSize.label}px -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif`;\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.95)';\n    ctx.fillText('优惠券', centerX, currentY);\n    currentY += 45;\n\n    // 金额或折扣（大字显示）\n    ctx.fillStyle = config.textColor;\n    ctx.font = `bold ${config.fontSize.amount + 20}px -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif`;\n    if (coupon.type === 'discount') {\n      ctx.fillText(`${coupon.discount}折`, centerX, currentY);\n    } else {\n      ctx.fillText(`¥${coupon.amount}`, centerX, currentY);\n    }\n    currentY += 90;\n\n    // 备注（如果有）\n    if (coupon.note) {\n      ctx.font = `${config.fontSize.label - 1}px -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif`;\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.92)';\n\n      // 处理长文本换行，限制宽度避免与二维码重叠\n      const maxWidth = config.width - padding * 2 - 100; // 留出二维码空间\n      const lines = this._wrapText(ctx, coupon.note, maxWidth);\n\n      lines.forEach((line, index) => {\n        ctx.fillText(line, centerX, currentY + (index * 28));\n      });\n\n      currentY += lines.length * 28 + 20;\n    }\n\n    // 编码文字\n    ctx.font = `bold ${config.fontSize.label + 4}px 'Courier New', monospace`;\n    ctx.fillStyle = '#FFFFFF';\n    ctx.fillText(coupon.code, centerX, currentY);\n    currentY += 50;\n\n    // 有效期（如果有）\n    if (coupon.expiryDate) {\n      ctx.font = `${config.fontSize.label - 3}px -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif`;\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.88)';\n      ctx.fillText(`有效期至：${coupon.expiryDate}`, centerX, currentY);\n    }\n\n    // === 二维码（右下角，在50%基础上放大10%） ===\n    const originalQrSize = 160;\n    const qrSize = originalQrSize * 0.65; // 50% * 1.1 = 55%\n    const qrPadding = 40;\n    const qrX = config.width - qrSize - qrPadding;\n    const qrY = config.height - qrSize - qrPadding;\n\n    await this._drawQRCode(ctx, coupon.code, qrX + qrSize / 2, qrY, qrSize);\n\n    // 如果已使用，添加水印\n    if (coupon.isUsed) {\n      this._drawUsedWatermark(ctx, config);\n    }\n  }\n\n  /**\n   * 生成二维码 URL\n   * @param {string} code - 优惠券编码\n   * @returns {Promise<string>} 二维码 URL\n   * @private\n   */\n  async _generateQRCodeUrl(code) {\n    try {\n      // 1. 获取当前页面的 origin（不包含路径）\n      const origin = window.location.origin;\n\n      // 2. 尝试获取 app 信息\n      let remoteId = null;\n      try {\n        const appInfo = await AppSdk.app.getAppInfo();\n        if (appInfo && appInfo.remoteId) {\n          remoteId = appInfo.remoteId;\n        }\n      } catch (error) {\n        console.warn('获取 app 信息失败:', error);\n      }\n\n      // 3. 生成最终 URL\n      let qrCodeUrl;\n      if (remoteId) {\n        // 有 remoteId，使用完整路径\n        qrCodeUrl = `${origin}/app/${remoteId}?code=${code}`;\n      } else {\n        // 没有 remoteId，直接使用 code\n        qrCodeUrl = code;\n      }\n\n      console.log('生成二维码 URL:', qrCodeUrl);\n      return qrCodeUrl;\n    } catch (error) {\n      console.error('生成二维码 URL 失败:', error);\n      // 失败时返回 code\n      return code;\n    }\n  }\n\n  /**\n   * 绘制二维码\n   * @param {CanvasRenderingContext2D} ctx - Canvas上下文\n   * @param {string} code - 优惠券编码\n   * @param {number} x - 中心X坐标\n   * @param {number} y - Y坐标\n   * @param {number} size - 二维码尺寸\n   * @returns {Promise<void>}\n   * @private\n   */\n  async _drawQRCode(ctx, code, x, y, size = 160) {\n    try {\n      // 动态导入 qrcode 库\n      const QRCode = await import('qrcode');\n\n      // 生成二维码 URL\n      const qrCodeUrl = await this._generateQRCodeUrl(code);\n\n      // 生成二维码为 Data URL\n      const qrDataUrl = await QRCode.default.toDataURL(qrCodeUrl, {\n        width: size,\n        margin: 1,\n        color: {\n          dark: '#000000',\n          light: '#FFFFFF'\n        }\n      });\n\n      // 加载二维码图片\n      const qrImage = new Image();\n      await new Promise((resolve, reject) => {\n        qrImage.onload = resolve;\n        qrImage.onerror = reject;\n        qrImage.src = qrDataUrl;\n      });\n\n      // 绘制白色背景\n      const bgPadding = 10;\n      ctx.fillStyle = '#FFFFFF';\n      ctx.fillRect(\n        x - size / 2 - bgPadding,\n        y - bgPadding,\n        size + bgPadding * 2,\n        size + bgPadding * 2\n      );\n\n      // 绘制二维码\n      ctx.drawImage(qrImage, x - size / 2, y, size, size);\n\n    } catch (error) {\n      console.error('绘制二维码失败:', error);\n    }\n  }\n\n  /**\n   * 绘制条形码\n   * @param {CanvasRenderingContext2D} ctx - Canvas上下文\n   * @param {string} code - 优惠券编码\n   * @param {number} x - 中心X坐标\n   * @param {number} y - Y坐标\n   * @param {Object} config - 图片配置\n   * @private\n   */\n  _drawBarcode(ctx, code, x, y, config) {\n    // 条形码参数（根据画布大小调整）\n    const barcodeWidth = 300;\n    const barcodeHeight = 60;\n    const barWidth = 4;\n\n    // 将编码转换为条形码模式（简化版Code 128）\n    const pattern = this._generateBarcodePattern(code);\n\n    // 绘制白色背景\n    ctx.fillStyle = '#FFFFFF';\n    const bgX = x - barcodeWidth / 2 - 15;\n    const bgY = y - 8;\n    ctx.fillRect(bgX, bgY, barcodeWidth + 30, barcodeHeight + 16);\n\n    // 绘制条形码\n    ctx.fillStyle = '#000000';\n    const startX = x - (pattern.length * barWidth) / 2;\n\n    pattern.forEach((bar, index) => {\n      if (bar === 1) {\n        ctx.fillRect(\n          startX + index * barWidth,\n          y,\n          barWidth,\n          barcodeHeight\n        );\n      }\n    });\n  }\n\n  /**\n   * 生成条形码图案\n   * @param {string} code - 优惠券编码\n   * @returns {Array} 条形码图案数组（0或1）\n   * @private\n   */\n  _generateBarcodePattern(code) {\n    const pattern = [];\n\n    // 起始标记\n    pattern.push(1, 0, 1, 0, 1);\n\n    // 为每个字符生成条纹\n    for (let i = 0; i < code.length; i++) {\n      const char = code.charCodeAt(i);\n      // 使用字符编码生成独特的条纹模式\n      const charPattern = [\n        char % 2,\n        (char >> 1) % 2,\n        (char >> 2) % 2,\n        (char >> 3) % 2,\n        (char >> 4) % 2,\n        (char >> 5) % 2\n      ];\n      pattern.push(...charPattern);\n\n      // 字符间隔\n      if (i < code.length - 1) {\n        pattern.push(0);\n      }\n    }\n\n    // 结束标记\n    pattern.push(1, 0, 1, 0, 1);\n\n    return pattern;\n  }\n\n  /**\n   * 文本换行处理\n   * @param {CanvasRenderingContext2D} ctx - Canvas上下文\n   * @param {string} text - 文本内容\n   * @param {number} maxWidth - 最大宽度\n   * @returns {Array} 换行后的文本数组\n   * @private\n   */\n  _wrapText(ctx, text, maxWidth) {\n    const lines = [];\n    let currentLine = '';\n\n    for (let i = 0; i < text.length; i++) {\n      const testLine = currentLine + text[i];\n      const metrics = ctx.measureText(testLine);\n\n      if (metrics.width > maxWidth && currentLine.length > 0) {\n        lines.push(currentLine);\n        currentLine = text[i];\n      } else {\n        currentLine = testLine;\n      }\n    }\n\n    if (currentLine.length > 0) {\n      lines.push(currentLine);\n    }\n\n    // 最多显示2行\n    return lines.slice(0, 2);\n  }\n\n  /**\n   * 绘制\"已使用\"水印\n   * @param {CanvasRenderingContext2D} ctx - Canvas上下文\n   * @param {Object} config - 图片配置\n   * @private\n   */\n  _drawUsedWatermark(ctx, config) {\n    ctx.save();\n\n    // 设置半透明红色\n    ctx.fillStyle = 'rgba(239, 68, 68, 0.8)';\n    ctx.strokeStyle = 'rgba(239, 68, 68, 1)';\n    ctx.lineWidth = 2;\n\n    // 旋转画布\n    ctx.translate(config.width / 2, config.height / 2);\n    ctx.rotate(-Math.PI / 6); // -30度\n\n    // 绘制水印文字\n    ctx.font = `bold 28px -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif`;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    // 绘制文字描边和填充\n    ctx.strokeText('已使用', 0, 0);\n    ctx.fillText('已使用', 0, 0);\n\n    ctx.restore();\n  }\n\n  /**\n   * 绘制圆角矩形\n   * @param {CanvasRenderingContext2D} ctx - Canvas上下文\n   * @param {number} x - X坐标\n   * @param {number} y - Y坐标\n   * @param {number} width - 宽度\n   * @param {number} height - 高度\n   * @param {number} radius - 圆角半径\n   * @private\n   */\n  _drawRoundedRect(ctx, x, y, width, height, radius) {\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  /**\n   * 获取默认图片配置\n   * @returns {Object} 默认配置对象\n   */\n  getDefaultConfig() {\n    return { ...this.defaultConfig };\n  }\n\n  /**\n   * 更新默认图片配置\n   * @param {Object} newConfig - 新的配置\n   */\n  updateDefaultConfig(newConfig) {\n    this.defaultConfig = { ...this.defaultConfig, ...newConfig };\n  }\n}\n\nexport default ImageService;",
  "services/StorageService.js": "/**\n * 云端存储服务\n * 基于AppSdk.appData实现优惠券数据的云端存储\n */\n\nimport AppSdk from '@morphixai/app-sdk';\nimport { STORAGE_COLLECTION_NAME, STORAGE_CREATED_COUPONS, STORAGE_RECEIVED_COUPONS } from '../utils/constants';\n\nclass StorageService {\n  constructor() {\n    this.legacyCollection = STORAGE_COLLECTION_NAME; // 旧的 collection\n    this.createdCollection = STORAGE_CREATED_COUPONS;\n    this.receivedCollection = STORAGE_RECEIVED_COUPONS;\n    this.migrationKey = 'coupon_data_migrated'; // 迁移标记\n  }\n\n  /**\n   * 保存我创建的优惠券到云端存储\n   * @param {Object} coupon - 优惠券对象\n   * @returns {Promise<Object>} 保存的优惠券对象\n   */\n  async saveCreatedCoupon(coupon) {\n    try {\n      const result = await AppSdk.appData.createData({\n        collection: this.createdCollection,\n        data: {\n          id: coupon.code,\n          ...coupon,\n          createdAt: coupon.createdAt.toISOString(),\n          usedAt: coupon.usedAt ? coupon.usedAt.toISOString() : null,\n          expiryDate: coupon.expiryDate || null\n        }\n      });\n\n      return this._deserializeCoupon(result);\n    } catch (error) {\n      console.error('Error saving created coupon:', error);\n      throw new Error('Failed to save created coupon');\n    }\n  }\n\n  /**\n   * 保存我收到的优惠券到云端存储\n   * @param {Object} coupon - 优惠券对象\n   * @returns {Promise<Object>} 保存的优惠券对象\n   */\n  async saveReceivedCoupon(coupon) {\n    try {\n      const result = await AppSdk.appData.createData({\n        collection: this.receivedCollection,\n        data: {\n          id: coupon.code,\n          ...coupon,\n          createdAt: coupon.createdAt.toISOString(),\n          usedAt: coupon.usedAt ? coupon.usedAt.toISOString() : null,\n          expiryDate: coupon.expiryDate || null,\n          receivedAt: new Date().toISOString()\n        }\n      });\n\n      return this._deserializeCoupon(result);\n    } catch (error) {\n      console.error('Error saving received coupon:', error);\n      throw new Error('Failed to save received coupon');\n    }\n  }\n\n  /**\n   * 从云端存储获取优惠券（先查创建的，再查收到的，最后查旧数据）\n   * @param {string} code - 优惠券编码\n   * @returns {Promise<Object|null>} 优惠券对象或null，包含 source 字段标识来源\n   */\n  async getCoupon(code) {\n    try {\n      // 先查创建的\n      let result = await AppSdk.appData.getData({\n        collection: this.createdCollection,\n        id: code\n      });\n\n      if (result) {\n        const coupon = this._deserializeCoupon(result);\n        coupon.source = 'created';\n        return coupon;\n      }\n\n      // 再查收到的\n      result = await AppSdk.appData.getData({\n        collection: this.receivedCollection,\n        id: code\n      });\n\n      if (result) {\n        const coupon = this._deserializeCoupon(result);\n        coupon.source = 'received';\n        return coupon;\n      }\n\n      // 最后查旧的 collection（兼容旧数据）\n      result = await AppSdk.appData.getData({\n        collection: this.legacyCollection,\n        id: code\n      });\n\n      if (result) {\n        const coupon = this._deserializeCoupon(result);\n        coupon.source = 'created'; // 旧数据默认视为创建的\n        return coupon;\n      }\n\n      return null;\n    } catch (error) {\n      console.error('Error getting coupon:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 获取我创建的优惠券\n   * @returns {Promise<Array>} 优惠券列表\n   */\n  async getCreatedCoupons() {\n    try {\n      const result = await AppSdk.appData.queryData({\n        collection: this.createdCollection,\n        query: []\n      });\n      return result.map(record => {\n        const coupon = this._deserializeCoupon(record);\n        coupon.source = 'created';\n        return coupon;\n      });\n    } catch (error) {\n      console.error('Error getting created coupons:', error);\n      return [];\n    }\n  }\n\n  /**\n   * 获取我收到的优惠券\n   * @returns {Promise<Array>} 优惠券列表\n   */\n  async getReceivedCoupons() {\n    try {\n      const result = await AppSdk.appData.queryData({\n        collection: this.receivedCollection,\n        query: []\n      });\n      return result.map(record => {\n        const coupon = this._deserializeCoupon(record);\n        coupon.source = 'received';\n        return coupon;\n      });\n    } catch (error) {\n      console.error('Error getting received coupons:', error);\n      return [];\n    }\n  }\n\n  /**\n   * 获取所有优惠券（创建的 + 收到的）\n   * 首次调用时会自动迁移旧数据\n   * @returns {Promise<Object>} { created: [], received: [] }\n   */\n  async getAllCoupons() {\n    try {\n      // 检查是否需要迁移数据\n      await this._migrateDataIfNeeded();\n\n      const [created, received] = await Promise.all([\n        this.getCreatedCoupons(),\n        this.getReceivedCoupons()\n      ]);\n      return { created, received };\n    } catch (error) {\n      console.error('Error getting all coupons:', error);\n      return { created: [], received: [] };\n    }\n  }\n\n  /**\n   * 更新优惠券\n   * @param {string} code - 优惠券编码\n   * @param {Object} updates - 更新数据\n   * @returns {Promise<Object|null>} 更新后的优惠券对象\n   */\n  async updateCoupon(code, updates) {\n    try {\n      // 先获取现有数据，确定来源\n      const existingCoupon = await this.getCoupon(code);\n      if (!existingCoupon) {\n        return null;\n      }\n\n      const collection = existingCoupon.source === 'created'\n        ? this.createdCollection\n        : this.receivedCollection;\n\n      // 准备更新数据（序列化日期）\n      const updateData = {};\n      for (const [key, value] of Object.entries(updates)) {\n        if (value instanceof Date) {\n          updateData[key] = value.toISOString();\n        } else {\n          updateData[key] = value;\n        }\n      }\n\n      // 执行更新\n      await AppSdk.appData.updateData({\n        collection,\n        id: code,\n        data: updateData\n      });\n\n      // 更新后重新获取完整数据\n      const updatedCoupon = await this.getCoupon(code);\n      return updatedCoupon;\n    } catch (error) {\n      console.error('Error updating coupon:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 删除优惠券\n   * @param {string} code - 优惠券编码\n   * @returns {Promise<boolean>} 是否成功删除\n   */\n  async deleteCoupon(code) {\n    try {\n      // 先确定优惠券来源\n      const coupon = await this.getCoupon(code);\n      if (!coupon) {\n        return false;\n      }\n\n      const collection = coupon.source === 'created'\n        ? this.createdCollection\n        : this.receivedCollection;\n\n      const result = await AppSdk.appData.deleteData({\n        collection,\n        id: code\n      });\n      return result.success;\n    } catch (error) {\n      console.error('Error deleting coupon:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 反序列化优惠券数据（将字符串日期转换为Date对象）\n   * @param {Object} data - 序列化的优惠券数据\n   * @returns {Object} 反序列化的优惠券对象\n   * @private\n   */\n  _deserializeCoupon(data) {\n    return {\n      ...data,\n      createdAt: new Date(data.createdAt),\n      usedAt: data.usedAt ? new Date(data.usedAt) : null,\n      expiryDate: data.expiryDate || null,\n      receivedAt: data.receivedAt ? new Date(data.receivedAt) : null\n    };\n  }\n\n  /**\n   * 检查并迁移旧数据（如果需要）\n   * 将旧 collection 中的数据迁移到新的 created_coupons collection\n   * @private\n   */\n  async _migrateDataIfNeeded() {\n    try {\n      // 检查是否已经迁移过\n      const migrated = localStorage.getItem(this.migrationKey);\n      if (migrated === 'true') {\n        return; // 已经迁移过，跳过\n      }\n\n      console.log('开始检查旧数据迁移...');\n\n      // 查询旧 collection 中的所有数据\n      const legacyData = await AppSdk.appData.queryData({\n        collection: this.legacyCollection,\n        query: []\n      });\n\n      if (!legacyData || legacyData.length === 0) {\n        console.log('没有发现旧数据，标记迁移完成');\n        localStorage.setItem(this.migrationKey, 'true');\n        return;\n      }\n\n      console.log(`发现 ${legacyData.length} 条旧数据，开始迁移...`);\n\n      // 迁移每条数据到新的 created_coupons collection\n      let successCount = 0;\n      let failCount = 0;\n\n      for (const oldCoupon of legacyData) {\n        try {\n          // 检查新 collection 中是否已存在\n          const exists = await AppSdk.appData.getData({\n            collection: this.createdCollection,\n            id: oldCoupon.code || oldCoupon.id\n          });\n\n          if (!exists) {\n            // 不存在则迁移\n            await AppSdk.appData.createData({\n              collection: this.createdCollection,\n              data: {\n                ...oldCoupon,\n                id: oldCoupon.code || oldCoupon.id\n              }\n            });\n            successCount++;\n          } else {\n            console.log(`优惠券 ${oldCoupon.code} 已存在，跳过迁移`);\n          }\n        } catch (error) {\n          console.error(`迁移优惠券 ${oldCoupon.code} 失败:`, error);\n          failCount++;\n        }\n      }\n\n      console.log(`数据迁移完成: 成功 ${successCount} 条, 失败 ${failCount} 条`);\n\n      // 标记迁移完成\n      localStorage.setItem(this.migrationKey, 'true');\n\n      // 可选：删除旧数据（谨慎操作，建议先保留一段时间）\n      // await this._cleanupLegacyData(legacyData);\n\n    } catch (error) {\n      console.error('数据迁移过程出错:', error);\n      // 不抛出错误，避免影响正常功能\n    }\n  }\n\n  /**\n   * 清理旧数据（可选，谨慎使用）\n   * @param {Array} legacyData - 旧数据列表\n   * @private\n   */\n  async _cleanupLegacyData(legacyData) {\n    console.log('开始清理旧数据...');\n    for (const oldCoupon of legacyData) {\n      try {\n        await AppSdk.appData.deleteData({\n          collection: this.legacyCollection,\n          id: oldCoupon.code || oldCoupon.id\n        });\n      } catch (error) {\n        console.error(`删除旧数据 ${oldCoupon.code} 失败:`, error);\n      }\n    }\n    console.log('旧数据清理完成');\n  }\n\n  /**\n   * 手动触发数据迁移（用于测试或强制重新迁移）\n   * @returns {Promise<void>}\n   */\n  async forceMigration() {\n    localStorage.removeItem(this.migrationKey);\n    await this._migrateDataIfNeeded();\n  }\n}\n\nexport default StorageService;",
  "services/__test_ImageService.js": "/**\n * ImageService 集成测试\n * 用于验证图片生成和保存功能\n */\n\nimport ImageService from './ImageService';\nimport { createCoupon } from '../utils/types';\n\n/**\n * 测试图片生成功能\n */\nasync function testImageGeneration() {\n  console.log('Testing ImageService...');\n  \n  const imageService = new ImageService();\n  \n  // 创建测试优惠券\n  const testCoupon = createCoupon({\n    id: 'test-001',\n    code: 'ABC123',\n    amount: 50,\n    isUsed: false,\n    createdAt: new Date()\n  });\n  \n  try {\n    // 测试图片生成\n    console.log('1. Testing image generation...');\n    const base64Data = await imageService.generateCouponImage(testCoupon);\n    console.log('✓ Image generated successfully');\n    console.log('Base64 data length:', base64Data.length);\n    \n    // 测试已使用优惠券的图片生成\n    console.log('2. Testing used coupon image generation...');\n    const usedCoupon = { ...testCoupon, isUsed: true, usedAt: new Date() };\n    const usedBase64Data = await imageService.generateCouponImage(usedCoupon);\n    console.log('✓ Used coupon image generated successfully');\n    \n    // 测试自定义配置\n    console.log('3. Testing custom config...');\n    const customConfig = {\n      width: 500,\n      height: 250,\n      fontSize: { amount: 36, code: 28, label: 18 }\n    };\n    const customBase64Data = await imageService.generateCouponImage(testCoupon, customConfig);\n    console.log('✓ Custom config image generated successfully');\n    \n    // 测试保存到相册功能（注意：这需要在真实设备上测试）\n    console.log('4. Testing save to album...');\n    const saveResult = await imageService.saveImageToAlbum(base64Data, 'test_coupon.png');\n    console.log('Save result:', saveResult);\n    \n    // 测试生成并保存功能\n    console.log('5. Testing generate and save...');\n    const generateAndSaveResult = await imageService.generateAndSaveImage(testCoupon);\n    console.log('Generate and save result:', generateAndSaveResult);\n    \n    console.log('✓ All ImageService tests completed successfully!');\n    return true;\n    \n  } catch (error) {\n    console.error('✗ ImageService test failed:', error);\n    return false;\n  }\n}\n\n/**\n * 测试配置管理功能\n */\nfunction testConfigManagement() {\n  console.log('Testing config management...');\n  \n  const imageService = new ImageService();\n  \n  // 获取默认配置\n  const defaultConfig = imageService.getDefaultConfig();\n  console.log('Default config:', defaultConfig);\n  \n  // 更新默认配置\n  imageService.updateDefaultConfig({\n    backgroundColor: '#FF6B6B',\n    textColor: '#000000'\n  });\n  \n  const updatedConfig = imageService.getDefaultConfig();\n  console.log('Updated config:', updatedConfig);\n  \n  console.log('✓ Config management test completed');\n}\n\n// 导出测试函数供外部调用\nexport { testImageGeneration, testConfigManagement };\n\n// 如果直接运行此文件，执行测试\nif (typeof window !== 'undefined') {\n  // 在浏览器环境中，可以通过控制台调用测试\n  window.testImageService = async () => {\n    testConfigManagement();\n    await testImageGeneration();\n  };\n  \n  console.log('ImageService test functions loaded. Call window.testImageService() to run tests.');\n}",
  "services/index.js": "// Services export file\nexport { default as CouponService } from './CouponService';\nexport { default as StorageService } from './StorageService';\nexport { default as ImageService } from './ImageService';",
  "styles/App.module.css": "/* 主应用样式 */\n\n.content {\n  --padding: 16px;\n  /* --background: var(--ion-background-color, #f5f5f5); */\n}\n\n.tabBar {\n  border-top: none;\n  /* background: var(--ion-background-color, #ffffff); */\n}\n\n.tabButton {\n  --color: var(--ion-color-medium);\n  --color-selected: var(--ion-color-primary);\n}\n\n/* Ionic 会自动处理深色模式 */\n\n/* Tab 内容区域样式 */\n.tabContent {\n  padding: 20px;\n  text-align: center;\n}\n\n.tabContent h2 {\n  margin: 0 0 16px 0;\n  font-size: 24px;\n  font-weight: 600;\n  color: #1f2937;\n}\n\n.tabContent p {\n  margin: 0;\n  font-size: 16px;\n  color: #6b7280;\n  line-height: 1.5;\n}\n\n/* 全局加载状态 */\n.globalLoading {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.9);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 9999;\n  backdrop-filter: blur(4px);\n}\n\n.loadingContent {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n}\n\n.loadingText {\n  font-size: 16px;\n  color: #6b7280;\n  font-weight: 500;\n}\n\n/* 全局错误提示 */\n.globalError {\n  position: fixed;\n  top: 20px;\n  left: 20px;\n  right: 20px;\n  background: #fef2f2;\n  border: 1px solid #fecaca;\n  border-radius: 8px;\n  padding: 16px;\n  z-index: 9998;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\n.errorContent {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.errorIcon {\n  color: #dc2626;\n  font-size: 20px;\n}\n\n.errorMessage {\n  flex: 1;\n  color: #dc2626;\n  font-weight: 500;\n}\n\n.errorClose {\n  background: none;\n  border: none;\n  color: #dc2626;\n  font-size: 18px;\n  cursor: pointer;\n  padding: 4px;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .content {\n    --padding: 12px;\n  }\n  \n  .globalError {\n    top: 16px;\n    left: 16px;\n    right: 16px;\n  }\n}\n\n@media (max-width: 480px) {\n  .content {\n    --padding: 8px;\n  }\n  \n  .globalError {\n    top: 12px;\n    left: 12px;\n    right: 12px;\n    padding: 12px;\n  }\n  \n  .errorMessage {\n    font-size: 14px;\n  }\n}\n\n/* 暗色模式支持 */\n@media (prefers-color-scheme: dark) {\n  .content {\n    background: #1f2937;\n    color: #f9fafb;\n  }\n  \n  .tabContent h2 {\n    color: #f9fafb;\n  }\n  \n  .tabContent p {\n    color: #d1d5db;\n  }\n  \n  .globalLoading {\n    background: rgba(31, 41, 55, 0.9);\n  }\n  \n  .loadingText {\n    color: #d1d5db;\n  }\n  \n  .globalError {\n    background: #450a0a;\n    border-color: #7f1d1d;\n  }\n  \n  .errorMessage {\n    color: #fca5a5;\n  }\n  \n  .errorClose {\n    color: #fca5a5;\n  }\n}",
  "styles/BatchCouponResultModal.module.css": "/* 批量创建结果模态框样式 */\n\n.content {\n  --padding-top: 20px;\n  --padding-bottom: 20px;\n}\n\n.container {\n  padding: 0 16px;\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n/* 成功提示 */\n.successHeader {\n  text-align: center;\n  margin-bottom: 24px;\n}\n\n.successIcon {\n  font-size: 64px;\n  color: #10b981;\n  margin-bottom: 16px;\n}\n\n.successText h2 {\n  margin: 0;\n  font-size: 20px;\n  font-weight: 600;\n  color: #374151;\n}\n\n/* 操作按钮 */\n.actionButtons {\n  margin-bottom: 24px;\n}\n\n.actionButton {\n  --border-radius: 8px;\n  height: 44px;\n  font-weight: 600;\n}\n\n/* 优惠券列表 */\n.couponList {\n  margin-bottom: 24px;\n}\n\n.listTitle h3 {\n  margin: 0 0 12px 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: #374151;\n}\n\n.list {\n  border-radius: 12px;\n  overflow: hidden;\n}\n\n.couponItem {\n  --padding-start: 16px;\n  --padding-end: 16px;\n  --min-height: 60px;\n}\n\n.couponInfo {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 4px;\n}\n\n.couponIndex {\n  font-size: 14px;\n  color: #6b7280;\n  font-weight: 500;\n  min-width: 30px;\n}\n\n.couponCode {\n  font-family: 'Courier New', monospace;\n  font-size: 16px;\n  font-weight: 600;\n  color: #374151;\n  letter-spacing: 1px;\n  flex: 1;\n}\n\n.couponAmount {\n  font-size: 14px;\n  font-weight: 600;\n}\n\n.couponNote {\n  margin: 4px 0 0 42px;\n  font-size: 13px;\n  color: #6b7280;\n}\n\n/* 关闭按钮 */\n.closeButtonContainer {\n  margin-top: 24px;\n}\n\n.closeButton {\n  --border-radius: 8px;\n  height: 48px;\n  font-weight: 600;\n}\n\n/* 深色模式适配 */\n@media (prefers-color-scheme: dark) {\n  .successText h2 {\n    color: #e5e7eb;\n  }\n  \n  .listTitle h3 {\n    color: #e5e7eb;\n  }\n  \n  .couponCode {\n    color: #e5e7eb;\n  }\n  \n  .couponIndex {\n    color: #9ca3af;\n  }\n  \n  .couponNote {\n    color: #9ca3af;\n  }\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .container {\n    padding: 0 12px;\n  }\n  \n  .successIcon {\n    font-size: 56px;\n  }\n  \n  .successText h2 {\n    font-size: 18px;\n  }\n}\n\n@media (max-width: 480px) {\n  .container {\n    padding: 0 8px;\n  }\n  \n  .couponInfo {\n    gap: 8px;\n  }\n  \n  .couponCode {\n    font-size: 14px;\n  }\n}\n",
  "styles/CouponCreator.module.css": "/* 优惠券创建组件样式 */\n\n.container {\n  padding: 16px;\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n/* 创建表单样式 */\n.createForm {\n  width: 100%;\n}\n\n.formCard {\n  margin: 0;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.inputItem {\n  margin-bottom: 16px;\n  --border-radius: 8px;\n  --background: #f8fafc;\n}\n\n.inputItem ion-label {\n  font-weight: 600;\n  color: #374151;\n  margin-bottom: 8px;\n}\n\n.inputItem ion-input {\n  --padding-start: 12px;\n  --padding-end: 12px;\n  --padding-top: 12px;\n  --padding-bottom: 12px;\n  font-size: 16px;\n}\n\n.inputError {\n  --border-color: #ef4444;\n  --color: #ef4444;\n}\n\n.errorText {\n  margin-top: 8px;\n  font-size: 14px;\n}\n\n.errorText p {\n  margin: 0;\n}\n\n.createButton {\n  margin-top: 24px;\n  --border-radius: 8px;\n  --background: #4f46e5;\n  --background-activated: #4338ca;\n  --color: white;\n  font-weight: 600;\n  height: 48px;\n}\n\n.buttonText {\n  margin-left: 8px;\n}\n\n/* 优惠券显示样式 */\n.couponDisplay {\n  width: 100%;\n}\n\n.couponCard {\n  margin: 0;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);\n  color: white;\n}\n\n.couponCard ion-card-header {\n  text-align: center;\n  padding-bottom: 8px;\n}\n\n.couponCard ion-card-title {\n  color: white;\n  font-size: 18px;\n  font-weight: 600;\n}\n\n.couponInfo {\n  text-align: center;\n  padding: 20px 0;\n}\n\n.amountSection {\n  margin-bottom: 24px;\n}\n\n.amountLabel p {\n  margin: 0 0 8px 0;\n  font-size: 14px;\n  opacity: 0.9;\n}\n\n.amountValue h2 {\n  margin: 0;\n  font-size: 36px;\n  font-weight: 700;\n  color: white;\n}\n\n.codeSection {\n  padding: 16px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 8px;\n  margin: 0 16px;\n}\n\n.codeLabel p {\n  margin: 0 0 8px 0;\n  font-size: 14px;\n  opacity: 0.9;\n}\n\n.codeValue h3 {\n  margin: 0;\n  font-size: 24px;\n  font-weight: 600;\n  letter-spacing: 2px;\n  color: white;\n  font-family: 'Courier New', monospace;\n}\n\n.actionButtons {\n  margin-top: 24px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.saveButton {\n  --border-radius: 8px;\n  --background: white;\n  --background-activated: #f1f5f9;\n  --color: #4f46e5;\n  font-weight: 600;\n  height: 48px;\n}\n\n.newButton {\n  --border-radius: 8px;\n  --border-color: white;\n  --color: white;\n  font-weight: 600;\n  height: 48px;\n}\n\n/* 加载状态样式 */\n.loadingOverlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 12px;\n  z-index: 10;\n}\n\n.loadingContent {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n}\n\n.loadingText {\n  font-size: 14px;\n  color: #6b7280;\n  font-weight: 500;\n}\n\n/* 成功状态样式 */\n.successMessage {\n  margin: 16px 0;\n  padding: 12px;\n  background: #f0f9ff;\n  border: 1px solid #bae6fd;\n  border-radius: 8px;\n  text-align: center;\n}\n\n.successText {\n  color: #0369a1;\n  font-weight: 500;\n  margin: 0;\n}\n\n/* 错误状态增强 */\n.errorText {\n  margin-top: 8px;\n  font-size: 14px;\n  animation: shake 0.5s ease-in-out;\n}\n\n.errorText p {\n  margin: 0;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.errorIcon {\n  font-size: 16px;\n}\n\n/* 按钮状态增强 */\n.createButton:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.saveButton:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.buttonLoading {\n  pointer-events: none;\n}\n\n/* 动画效果 */\n@keyframes shake {\n  0%, 100% { transform: translateX(0); }\n  25% { transform: translateX(-4px); }\n  75% { transform: translateX(4px); }\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.couponDisplay {\n  animation: fadeIn 0.4s ease-out;\n}\n\n.formCard {\n  position: relative;\n}\n\n/* 输入焦点状态 */\n.inputItem ion-input:focus-within {\n  --border-color: #4f46e5;\n  --color: #1f2937;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .container {\n    padding: 12px;\n  }\n  \n  .amountValue h2 {\n    font-size: 32px;\n  }\n  \n  .codeValue h3 {\n    font-size: 20px;\n  }\n  \n  .actionButtons {\n    gap: 8px;\n  }\n  \n  .createButton,\n  .saveButton,\n  .newButton {\n    height: 44px;\n    font-size: 15px;\n  }\n}\n\n@media (max-width: 480px) {\n  .container {\n    padding: 8px;\n  }\n  \n  .couponInfo {\n    padding: 16px 0;\n  }\n  \n  .amountValue h2 {\n    font-size: 28px;\n  }\n  \n  .codeValue h3 {\n    font-size: 18px;\n    letter-spacing: 1px;\n  }\n  \n  .codeSection {\n    margin: 0 8px;\n    padding: 12px;\n  }\n}\n\n/* 深色模式适配 */\n@media (prefers-color-scheme: dark) {\n  .formCard {\n    --background: #1e1e1e;\n  }\n  \n  .inputItem {\n    --background: #2a2a2a;\n    --color: #e5e7eb;\n  }\n  \n  .inputItem ion-label {\n    color: #e5e7eb;\n  }\n  \n  .inputItem ion-input {\n    --color: #e5e7eb;\n    --placeholder-color: #6b7280;\n  }\n  \n  .loadingOverlay {\n    background: rgba(0, 0, 0, 0.8);\n  }\n  \n  .loadingText {\n    color: #9ca3af;\n  }\n  \n  .successMessage {\n    background: #0c4a6e;\n    border-color: #075985;\n  }\n  \n  .successText {\n    color: #7dd3fc;\n  }\n}",
  "styles/CouponCreatorEnhanced.module.css": "/* 增强版优惠券创建组件样式 */\n\n.container {\n  padding: 16px;\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.formCard {\n  margin: 0;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* 类型选择区域 */\n.typeSection {\n  margin-bottom: 20px;\n}\n\n.sectionLabel {\n  display: block;\n  font-weight: 600;\n  color: #374151;\n  margin-bottom: 12px;\n  font-size: 14px;\n}\n\n/* 输入项样式 */\n.inputItem {\n  margin-bottom: 16px;\n  --border-radius: 8px;\n  --background: #f8fafc;\n}\n\n.inputItem ion-label {\n  font-weight: 600;\n  color: #374151;\n  margin-bottom: 8px;\n}\n\n.inputItem ion-input,\n.inputItem ion-textarea,\n.inputItem ion-select {\n  --padding-start: 12px;\n  --padding-end: 12px;\n  --padding-top: 12px;\n  --padding-bottom: 12px;\n  font-size: 16px;\n}\n\n.inputError {\n  --border-color: #ef4444;\n  --color: #ef4444;\n}\n\n/* 复选框样式 */\n.checkboxItem {\n  margin: 16px 0;\n  --background: transparent;\n}\n\n.checkboxLabel {\n  margin-left: 12px;\n  font-weight: 500;\n  color: #374151;\n}\n\n/* 错误提示 */\n.errorText {\n  margin-top: 8px;\n  font-size: 14px;\n}\n\n.errorText p {\n  margin: 0;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n/* 操作按钮 */\n.actionButtons {\n  margin-top: 24px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.createButton {\n  --border-radius: 8px;\n  --background: #4f46e5;\n  --background-activated: #4338ca;\n  --color: white;\n  font-weight: 600;\n  height: 48px;\n}\n\n.saveTemplateButton {\n  --border-radius: 8px;\n  --border-color: #4f46e5;\n  --color: #4f46e5;\n  font-weight: 600;\n  height: 44px;\n}\n\n.buttonText {\n  margin-left: 8px;\n}\n\n/* 按钮禁用状态 */\n.createButton:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n/* 深色模式适配 */\n@media (prefers-color-scheme: dark) {\n  .formCard {\n    --background: #1e1e1e;\n  }\n  \n  .inputItem {\n    --background: #2a2a2a;\n    --color: #e5e7eb;\n  }\n  \n  .inputItem ion-label {\n    color: #e5e7eb;\n  }\n  \n  .inputItem ion-input,\n  .inputItem ion-textarea,\n  .inputItem ion-select {\n    --color: #e5e7eb;\n    --placeholder-color: #6b7280;\n  }\n  \n  .sectionLabel {\n    color: #e5e7eb;\n  }\n  \n  .checkboxLabel {\n    color: #e5e7eb;\n  }\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .container {\n    padding: 12px;\n  }\n  \n  .actionButtons {\n    gap: 8px;\n  }\n  \n  .createButton,\n  .saveTemplateButton {\n    height: 44px;\n    font-size: 15px;\n  }\n}\n\n@media (max-width: 480px) {\n  .container {\n    padding: 8px;\n  }\n}\n",
  "styles/CouponDetailModal.module.css": ".content {\n  --background: var(--ion-background-color, #f5f5f5);\n}\n\n/* Ionic 会自动处理深色模式，无需额外样式 */\n\n.detailContainer {\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.amountCard {\n  background: linear-gradient(135deg, #DC2626 0%, #EF4444 50%, #F87171 100%);\n  border-radius: 16px;\n  padding: 32px 24px;\n  text-align: center;\n  box-shadow: 0 4px 12px rgba(220, 38, 38, 0.3);\n}\n\n.companyName {\n  display: block;\n  font-size: 16px;\n  font-weight: 600;\n  color: white;\n  margin-bottom: 12px;\n}\n\n.amountLabel {\n  display: block;\n  font-size: 14px;\n  color: rgba(255, 255, 255, 0.9);\n  margin-bottom: 12px;\n}\n\n.amountDisplay {\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  gap: 4px;\n}\n\n.currency {\n  font-size: 28px;\n  font-weight: 600;\n  color: white;\n}\n\n.amount {\n  font-size: 48px;\n  font-weight: 700;\n  color: white;\n}\n\n.infoSection {\n  background: var(--ion-card-background);\n  border-radius: 12px;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.infoItem {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid var(--ion-border-color);\n}\n\n.infoItem:last-child {\n  border-bottom: none;\n  padding-bottom: 0;\n}\n\n.infoLabel {\n  font-size: 13px;\n  color: var(--ion-color-medium);\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.labelIcon {\n  font-size: 14px;\n}\n\n.infoValue {\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--ion-text-color);\n  font-family: 'Courier New', monospace;\n  letter-spacing: 1px;\n}\n\n.statusBadge {\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 6px 12px;\n  font-size: 13px;\n  align-self: flex-start;\n}\n\n.statusIcon {\n  font-size: 16px;\n}\n\n.actionButtons {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-top: 8px;\n}\n\n.saveButton,\n.deleteButton {\n  --border-radius: 12px;\n  height: 48px;\n  font-weight: 500;\n}\n\n.saveButton {\n  --background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n}\n",
  "styles/CouponList.module.css": ".listContainer {\n  padding: 0;\n  margin: 0;\n}\n\n.section {\n  margin-bottom: 32px;\n}\n\n.sectionHeader {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin: 16px 16px 8px 16px;\n  padding: 0 8px;\n}\n\n.sectionTitle {\n  font-size: 18px;\n  font-weight: 600;\n  color: var(--ion-color-dark);\n}\n\n.emptyState {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 60px 20px;\n  text-align: center;\n}\n\n.emptyState p {\n  font-size: 16px;\n  margin: 0;\n}\n\n.couponItem {\n  margin: 12px 16px;\n  cursor: pointer;\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n}\n\n.couponItem:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\n.couponItem:active {\n  transform: translateY(0);\n}\n\n.cardContent {\n  display: flex;\n  align-items: center;\n  padding: 16px;\n  gap: 16px;\n}\n\n.leftSection {\n  flex-shrink: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 12px 20px;\n  background: linear-gradient(135deg, #DC2626 0%, #EF4444 50%, #F87171 100%);\n  border-radius: 12px;\n  min-width: 100px;\n  gap: 4px;\n}\n\n.amountSection {\n  display: flex;\n  align-items: baseline;\n  gap: 4px;\n}\n\n.currency {\n  font-size: 18px;\n  font-weight: 600;\n  color: white;\n}\n\n.amount {\n  font-size: 28px;\n  font-weight: 700;\n  color: white;\n}\n\n.discountLabel {\n  font-size: 18px;\n  font-weight: 600;\n  color: white;\n}\n\n.companyName {\n  margin-top: 4px;\n}\n\n.companyText {\n  font-size: 11px;\n  color: rgba(255, 255, 255, 0.9);\n  font-weight: 500;\n  text-align: center;\n  display: block;\n}\n\n.rightSection {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.codeSection {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.codeLabel {\n  font-size: 12px;\n  color: var(--ion-color-medium);\n}\n\n.codeValue {\n  font-size: 16px;\n  font-weight: 600;\n  font-family: 'Courier New', monospace;\n  letter-spacing: 2px;\n  color: var(--ion-text-color);\n}\n\n.noteSection {\n  margin: 4px 0;\n}\n\n.noteText {\n  font-size: 12px;\n  color: var(--ion-color-medium);\n  font-style: italic;\n}\n\n.statusSection {\n  display: flex;\n  align-items: center;\n}\n\n.statusBadge {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  padding: 4px 12px;\n  font-size: 12px;\n}\n\n.statusIcon {\n  font-size: 14px;\n}\n\n.dateSection {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.dateIcon {\n  font-size: 14px;\n  color: var(--ion-color-medium);\n}\n\n.dateText {\n  font-size: 12px;\n  color: var(--ion-color-medium);\n}\n\n/* 深色模式适配 */\n@media (prefers-color-scheme: dark) {\n  .codeValue {\n    color: #e5e7eb;\n  }\n  \n  .noteText {\n    color: #9ca3af;\n  }\n}\n",
  "styles/CouponResultModal.module.css": ".content {\n  --background: var(--ion-background-color, #f5f5f5);\n}\n\n/* Ionic 会自动处理深色模式 */\n\n.resultContainer {\n  padding: 32px 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  align-items: center;\n}\n\n.successHeader {\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n}\n\n.successIcon {\n  font-size: 64px;\n  color: var(--ion-color-success);\n}\n\n.successText h2 {\n  margin: 0;\n  font-size: 24px;\n  font-weight: 600;\n  color: var(--ion-text-color);\n}\n\n.couponCard {\n  width: 100%;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  border-radius: 16px;\n  padding: 32px 24px;\n  box-shadow: 0 8px 24px rgba(102, 126, 234, 0.3);\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n}\n\n.amountSection {\n  text-align: center;\n  padding-bottom: 24px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.amountLabel {\n  display: block;\n  font-size: 14px;\n  color: rgba(255, 255, 255, 0.9);\n  margin-bottom: 12px;\n}\n\n.amountDisplay {\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  gap: 4px;\n}\n\n.currency {\n  font-size: 28px;\n  font-weight: 600;\n  color: white;\n}\n\n.amount {\n  font-size: 56px;\n  font-weight: 700;\n  color: white;\n}\n\n.companySection {\n  text-align: center;\n  padding-bottom: 16px;\n}\n\n.companyName {\n  display: block;\n  font-size: 18px;\n  font-weight: 600;\n  color: white;\n}\n\n.codeSection {\n  text-align: center;\n}\n\n.codeLabel {\n  display: block;\n  font-size: 14px;\n  color: rgba(255, 255, 255, 0.9);\n  margin-bottom: 12px;\n}\n\n.codeValue {\n  display: block;\n  font-size: 28px;\n  font-weight: 700;\n  color: white;\n  font-family: 'Courier New', monospace;\n  letter-spacing: 4px;\n}\n\n.noteSection {\n  text-align: center;\n  padding-top: 16px;\n  border-top: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.noteLabel {\n  display: block;\n  font-size: 14px;\n  color: rgba(255, 255, 255, 0.9);\n  margin-bottom: 8px;\n}\n\n.noteValue {\n  display: block;\n  font-size: 14px;\n  color: rgba(255, 255, 255, 0.95);\n  line-height: 1.6;\n}\n\n.actionButtons {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-top: 8px;\n}\n\n.saveButton,\n.closeButton {\n  --border-radius: 12px;\n  height: 48px;\n  font-weight: 500;\n}\n\n.saveButton {\n  --background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n}\n",
  "styles/CouponValidator.module.css": "/* 优惠券验证组件样式 */\n\n.container {\n  padding: 16px;\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n/* 查询表单样式 */\n.queryForm {\n  margin-bottom: 20px;\n}\n\n.formCard {\n  margin: 0;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.inputItem {\n  margin-bottom: 16px;\n  --border-radius: 8px;\n  --background: #f8f9fa;\n}\n\n.inputError {\n  --border-color: var(--ion-color-danger);\n}\n\n.errorText {\n  margin: 8px 0;\n  font-size: 14px;\n}\n\n.buttonGroup {\n  margin-top: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.queryButton {\n  --border-radius: 8px;\n  height: 48px;\n  font-weight: 600;\n}\n\n.scanButton {\n  --border-radius: 8px;\n  height: 48px;\n  font-weight: 600;\n  --border-color: #4f46e5;\n  --color: #4f46e5;\n}\n\n.buttonText {\n  margin-left: 8px;\n}\n\n/* 结果显示样式 */\n.resultDisplay {\n  margin-bottom: 20px;\n}\n\n.resultCard {\n  margin: 0;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* 有效优惠券结果样式 */\n.validResult {\n  text-align: center;\n}\n\n.couponInfo {\n  margin-bottom: 24px;\n  padding: 16px;\n  background: linear-gradient(135deg, #f8f9ff 0%, #f0f4ff 100%);\n  border-radius: 12px;\n  border: 1px solid #e0e7ff;\n}\n\n.codeSection {\n  margin-bottom: 16px;\n}\n\n.codeLabel {\n  font-size: 14px;\n  color: #6b7280;\n  margin-bottom: 4px;\n}\n\n.codeValue {\n  font-family: 'Courier New', monospace;\n  font-weight: bold;\n  color: #374151;\n  letter-spacing: 2px;\n}\n\n.amountSection {\n  margin-bottom: 16px;\n}\n\n.amountLabel {\n  font-size: 14px;\n  color: #6b7280;\n  margin-bottom: 4px;\n}\n\n.amountValue {\n  color: #059669;\n  font-weight: bold;\n}\n\n.statusSection {\n  margin-bottom: 8px;\n}\n\n.statusLabel {\n  font-size: 14px;\n  color: #6b7280;\n  margin-bottom: 4px;\n}\n\n.statusValue {\n  font-weight: 600;\n}\n\n.availableStatus {\n  color: #059669;\n}\n\n.usedStatus {\n  color: #dc2626;\n}\n\n.messageSection {\n  margin: 16px 0;\n  padding: 12px;\n  border-radius: 8px;\n  background: #f0f9ff;\n}\n\n.messageText {\n  font-size: 16px;\n  font-weight: 500;\n}\n\n/* 无效优惠券结果样式 */\n.invalidResult {\n  text-align: center;\n}\n\n.errorMessage {\n  margin: 24px 0;\n  padding: 16px;\n  background: #fef2f2;\n  border-radius: 8px;\n  border: 1px solid #fecaca;\n}\n\n/* 操作按钮样式 */\n.actionButtons {\n  margin-top: 24px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.useButton {\n  --border-radius: 8px;\n  height: 48px;\n  font-weight: 600;\n  --background: #3b82f6;\n  --background-activated: #2563eb;\n}\n\n.newQueryButton {\n  --border-radius: 8px;\n  height: 44px;\n  font-weight: 500;\n  --color: #6b7280;\n  --border-color: #d1d5db;\n}\n\n/* 加载状态增强 */\n.loadingOverlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 12px;\n  z-index: 10;\n}\n\n.loadingContent {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n}\n\n.loadingText {\n  font-size: 14px;\n  color: #6b7280;\n  font-weight: 500;\n}\n\n.queryButton:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.useButton:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.buttonLoading {\n  pointer-events: none;\n}\n\n/* 错误状态增强 */\n.errorText {\n  margin: 8px 0;\n  font-size: 14px;\n  animation: shake 0.5s ease-in-out;\n}\n\n.errorText p {\n  margin: 0;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.errorIcon {\n  font-size: 16px;\n}\n\n.errorMessage {\n  margin: 24px 0;\n  padding: 16px;\n  background: #fef2f2;\n  border-radius: 8px;\n  border: 1px solid #fecaca;\n  animation: fadeIn 0.3s ease-out;\n}\n\n.errorMessage h3 {\n  margin: 0;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n/* 成功状态样式 */\n.successMessage {\n  margin: 16px 0;\n  padding: 12px;\n  background: #f0f9ff;\n  border: 1px solid #bae6fd;\n  border-radius: 8px;\n  text-align: center;\n}\n\n.successText {\n  color: #0369a1;\n  font-weight: 500;\n  margin: 0;\n}\n\n/* 状态指示器 */\n.statusIndicator {\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.availableIndicator {\n  background: #dcfce7;\n  color: #166534;\n}\n\n.usedIndicator {\n  background: #fee2e2;\n  color: #991b1b;\n}\n\n/* 输入焦点状态 */\n.inputItem ion-input:focus-within {\n  --border-color: #4f46e5;\n  --color: #1f2937;\n}\n\n.formCard {\n  position: relative;\n}\n\n/* 动画效果 */\n@keyframes slideIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes shake {\n  0%, 100% { transform: translateX(0); }\n  25% { transform: translateX(-4px); }\n  75% { transform: translateX(4px); }\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.resultCard {\n  animation: slideIn 0.3s ease-out;\n}\n\n.couponInfo {\n  animation: fadeIn 0.4s ease-out 0.1s both;\n}\n\n.actionButtons {\n  animation: fadeIn 0.4s ease-out 0.2s both;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .container {\n    padding: 12px;\n  }\n  \n  .couponInfo {\n    padding: 12px;\n  }\n  \n  .amountValue h2 {\n    font-size: 28px;\n  }\n  \n  .codeValue h3 {\n    font-size: 20px;\n  }\n  \n  .actionButtons {\n    gap: 8px;\n  }\n  \n  .queryButton,\n  .useButton,\n  .newQueryButton {\n    height: 44px;\n    font-size: 15px;\n  }\n}\n\n@media (max-width: 480px) {\n  .container {\n    padding: 8px;\n  }\n  \n  .couponInfo {\n    padding: 8px;\n  }\n  \n  .amountValue h2 {\n    font-size: 24px;\n  }\n  \n  .codeValue h3 {\n    font-size: 18px;\n    letter-spacing: 1px;\n  }\n  \n  .messageSection {\n    margin: 12px 0;\n    padding: 10px;\n  }\n  \n  .errorMessage {\n    margin: 16px 0;\n    padding: 12px;\n  }\n}\n\n/* 深色模式适配 */\n@media (prefers-color-scheme: dark) {\n  .formCard {\n    --background: #1e1e1e;\n  }\n  \n  .inputItem {\n    --background: #2a2a2a;\n    --color: #e5e7eb;\n  }\n  \n  .inputItem ion-input {\n    --color: #e5e7eb;\n    --placeholder-color: #6b7280;\n  }\n  \n  .inputItem ion-label {\n    color: #e5e7eb;\n  }\n  \n  .codeValue {\n    color: #e5e7eb;\n  }\n  \n  .codeLabel {\n    color: #9ca3af;\n  }\n  \n  .amountLabel {\n    color: #9ca3af;\n  }\n  \n  .statusLabel {\n    color: #9ca3af;\n  }\n  \n  .loadingOverlay {\n    background: rgba(0, 0, 0, 0.8);\n  }\n  \n  .loadingText {\n    color: #9ca3af;\n  }\n  \n  .couponInfo {\n    background: linear-gradient(135deg, #1e293b 0%, #0f172a 100%);\n    border-color: #334155;\n  }\n  \n  .messageSection {\n    background: #0c4a6e;\n  }\n  \n  .errorMessage {\n    background: #450a0a;\n    border-color: #7f1d1d;\n  }\n  \n  .successMessage {\n    background: #0c4a6e;\n    border-color: #075985;\n  }\n  \n  .successText {\n    color: #7dd3fc;\n  }\n}",
  "styles/ErrorBoundary.module.css": "/* 错误边界组件样式 */\n\n.errorContainer {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 20px;\n  background: #f9fafb;\n}\n\n.errorCard {\n  max-width: 500px;\n  width: 100%;\n  margin: 0;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  border: 1px solid #e5e7eb;\n}\n\n.errorTitle {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  color: #dc2626;\n  font-size: 20px;\n  font-weight: 600;\n}\n\n.errorIcon {\n  font-size: 24px;\n  color: #dc2626;\n}\n\n.errorContent {\n  text-align: center;\n}\n\n.errorMessage {\n  color: #6b7280;\n  font-size: 16px;\n  line-height: 1.6;\n  margin: 0 0 24px 0;\n}\n\n.errorDetails {\n  text-align: left;\n  margin: 20px 0;\n  padding: 16px;\n  background: #f3f4f6;\n  border-radius: 8px;\n  border: 1px solid #d1d5db;\n}\n\n.errorDetails summary {\n  cursor: pointer;\n  font-weight: 600;\n  color: #374151;\n  margin-bottom: 12px;\n}\n\n.errorStack {\n  font-family: 'Courier New', monospace;\n  font-size: 12px;\n  color: #dc2626;\n  background: #fef2f2;\n  padding: 12px;\n  border-radius: 6px;\n  border: 1px solid #fecaca;\n  overflow-x: auto;\n  white-space: pre-wrap;\n  word-break: break-word;\n}\n\n.errorActions {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-top: 24px;\n}\n\n.reloadButton {\n  --border-radius: 8px;\n  height: 48px;\n  font-weight: 600;\n}\n\n.resetButton {\n  --border-radius: 8px;\n  height: 44px;\n  font-weight: 500;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .errorContainer {\n    padding: 16px;\n  }\n  \n  .errorCard {\n    max-width: none;\n  }\n  \n  .errorTitle {\n    font-size: 18px;\n  }\n  \n  .errorMessage {\n    font-size: 15px;\n  }\n  \n  .errorActions {\n    gap: 8px;\n  }\n  \n  .reloadButton,\n  .resetButton {\n    height: 44px;\n  }\n}\n\n@media (max-width: 480px) {\n  .errorContainer {\n    padding: 12px;\n  }\n  \n  .errorTitle {\n    font-size: 16px;\n    gap: 8px;\n  }\n  \n  .errorIcon {\n    font-size: 20px;\n  }\n  \n  .errorMessage {\n    font-size: 14px;\n  }\n  \n  .errorStack {\n    font-size: 11px;\n    padding: 8px;\n  }\n}\n\n/* 暗色模式支持 */\n@media (prefers-color-scheme: dark) {\n  .errorContainer {\n    background: #1f2937;\n  }\n  \n  .errorCard {\n    --background: #374151;\n    border-color: #4b5563;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n  }\n  \n  .errorTitle {\n    color: #fca5a5;\n  }\n  \n  .errorIcon {\n    color: #fca5a5;\n  }\n  \n  .errorMessage {\n    color: #d1d5db;\n  }\n  \n  .errorDetails {\n    background: #4b5563;\n    border-color: #6b7280;\n  }\n  \n  .errorDetails summary {\n    color: #f9fafb;\n  }\n  \n  .errorStack {\n    background: #450a0a;\n    border-color: #7f1d1d;\n    color: #fca5a5;\n  }\n}",
  "styles/ImagePreviewModal.module.css": ".content {\n  --background: var(--ion-background-color, #f5f5f5);\n}\n\n.previewContainer {\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  height: 100%;\n}\n\n.imageWrapper {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: var(--ion-card-background);\n  border-radius: 16px;\n  padding: 20px;\n  overflow: auto;\n}\n\n.previewImage {\n  max-width: 100%;\n  max-height: 100%;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\n.loadingWrapper {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n}\n\n.loadingWrapper p {\n  margin: 0;\n  color: var(--ion-color-medium);\n  font-size: 14px;\n}\n\n.actionButtons {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.saveButton,\n.cancelButton {\n  --border-radius: 12px;\n  height: 48px;\n  font-weight: 500;\n}\n\n.saveButton {\n  --background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n}\n\n/* 深色模式适配 */\n@media (prefers-color-scheme: dark) {\n  .imageWrapper {\n    background: var(--ion-card-background);\n  }\n}\n",
  "styles/LoadingSpinner.module.css": "/* 加载状态组件样式 */\n\n.container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n}\n\n.overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(2px);\n  z-index: 100;\n}\n\n.fullScreen {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(4px);\n  z-index: 9999;\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n}\n\n.spinner {\n  animation: spin 1s linear infinite;\n}\n\n.spinnerSmall {\n  width: 16px;\n  height: 16px;\n}\n\n.spinnerMedium {\n  width: 24px;\n  height: 24px;\n}\n\n.spinnerLarge {\n  width: 32px;\n  height: 32px;\n}\n\n.message {\n  margin: 0;\n  font-size: 14px;\n  color: #6b7280;\n  font-weight: 500;\n  text-align: center;\n}\n\n/* 卡片加载器 */\n.cardLoader {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 40px 20px;\n  background: #f9fafb;\n  border-radius: 12px;\n  border: 1px solid #e5e7eb;\n}\n\n.cardContent {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n}\n\n.cardMessage {\n  margin: 0;\n  font-size: 16px;\n  color: #6b7280;\n  font-weight: 500;\n  text-align: center;\n}\n\n/* 动画效果 */\n@keyframes spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.5;\n  }\n}\n\n.content {\n  animation: pulse 2s ease-in-out infinite;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .container {\n    padding: 16px;\n  }\n  \n  .message {\n    font-size: 13px;\n  }\n  \n  .cardLoader {\n    padding: 32px 16px;\n  }\n  \n  .cardMessage {\n    font-size: 15px;\n  }\n}\n\n@media (max-width: 480px) {\n  .container {\n    padding: 12px;\n  }\n  \n  .message {\n    font-size: 12px;\n  }\n  \n  .cardLoader {\n    padding: 24px 12px;\n  }\n  \n  .cardMessage {\n    font-size: 14px;\n  }\n  \n  .spinnerLarge {\n    width: 28px;\n    height: 28px;\n  }\n}\n\n/* 暗色模式支持 */\n@media (prefers-color-scheme: dark) {\n  .overlay {\n    background: rgba(31, 41, 55, 0.8);\n  }\n  \n  .fullScreen {\n    background: rgba(31, 41, 55, 0.9);\n  }\n  \n  .message {\n    color: #d1d5db;\n  }\n  \n  .cardLoader {\n    background: #374151;\n    border-color: #4b5563;\n  }\n  \n  .cardMessage {\n    color: #d1d5db;\n  }\n}",
  "styles/ToastManager.module.css": "/* Toast 管理器样式 */\n\n/* 成功 Toast */\n.successToast {\n  --background: #10b981;\n  --color: white;\n  --border-radius: 8px;\n  --box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);\n}\n\n/* 错误 Toast */\n.errorToast {\n  --background: #ef4444;\n  --color: white;\n  --border-radius: 8px;\n  --box-shadow: 0 4px 12px rgba(239, 68, 68, 0.3);\n}\n\n/* 警告 Toast */\n.warningToast {\n  --background: #f59e0b;\n  --color: white;\n  --border-radius: 8px;\n  --box-shadow: 0 4px 12px rgba(245, 158, 11, 0.3);\n}\n\n/* 信息 Toast */\n.infoToast {\n  --background: #3b82f6;\n  --color: white;\n  --border-radius: 8px;\n  --box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .successToast,\n  .errorToast,\n  .warningToast,\n  .infoToast {\n    --font-size: 14px;\n    --padding-start: 12px;\n    --padding-end: 12px;\n  }\n}\n\n/* 暗色模式支持 */\n@media (prefers-color-scheme: dark) {\n  .successToast {\n    --background: #059669;\n    --box-shadow: 0 4px 12px rgba(5, 150, 105, 0.4);\n  }\n  \n  .errorToast {\n    --background: #dc2626;\n    --box-shadow: 0 4px 12px rgba(220, 38, 38, 0.4);\n  }\n  \n  .warningToast {\n    --background: #d97706;\n    --box-shadow: 0 4px 12px rgba(217, 119, 6, 0.4);\n  }\n  \n  .infoToast {\n    --background: #2563eb;\n    --box-shadow: 0 4px 12px rgba(37, 99, 235, 0.4);\n  }\n}",
  "styles/ValidationResultModal.module.css": ".content {\n  --background: var(--ion-background-color, #f5f5f5);\n}\n\n/* Ionic 会自动处理深色模式 */\n\n.resultContainer {\n  padding: 32px 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  align-items: center;\n}\n\n.successHeader,\n.errorHeader {\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n}\n\n.successIcon {\n  font-size: 64px;\n  color: var(--ion-color-success);\n}\n\n.errorIcon {\n  font-size: 64px;\n  color: var(--ion-color-danger);\n}\n\n.successText h2 {\n  margin: 0;\n  font-size: 24px;\n  font-weight: 600;\n  color: var(--ion-color-success);\n}\n\n.errorText h2 {\n  margin: 0;\n  font-size: 24px;\n  font-weight: 600;\n  color: var(--ion-color-danger);\n}\n\n.successText h2 {\n  color: var(--ion-color-success);\n}\n\n.errorText h2 {\n  color: var(--ion-color-danger);\n}\n\n.couponCard {\n  width: 100%;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  border-radius: 16px;\n  padding: 32px 24px;\n  box-shadow: 0 8px 24px rgba(102, 126, 234, 0.3);\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n}\n\n.amountSection {\n  text-align: center;\n  padding-bottom: 24px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.amountLabel {\n  display: block;\n  font-size: 14px;\n  color: rgba(255, 255, 255, 0.9);\n  margin-bottom: 12px;\n}\n\n.amountDisplay {\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  gap: 4px;\n}\n\n.currency {\n  font-size: 28px;\n  font-weight: 600;\n  color: white;\n}\n\n.amount {\n  font-size: 56px;\n  font-weight: 700;\n  color: white;\n}\n\n.companySection {\n  text-align: center;\n  padding-bottom: 16px;\n}\n\n.companyName {\n  display: block;\n  font-size: 18px;\n  font-weight: 600;\n  color: white;\n}\n\n.noteSection {\n  text-align: center;\n  padding-top: 16px;\n  border-top: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.noteLabel {\n  display: block;\n  font-size: 14px;\n  color: rgba(255, 255, 255, 0.9);\n  margin-bottom: 8px;\n}\n\n.noteValue {\n  display: block;\n  font-size: 14px;\n  color: rgba(255, 255, 255, 0.95);\n  line-height: 1.6;\n}\n\n.codeSection {\n  text-align: center;\n  padding-bottom: 24px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.codeLabel {\n  display: block;\n  font-size: 14px;\n  color: rgba(255, 255, 255, 0.9);\n  margin-bottom: 12px;\n}\n\n.codeValue {\n  display: block;\n  font-size: 24px;\n  font-weight: 700;\n  color: white;\n  font-family: 'Courier New', monospace;\n  letter-spacing: 4px;\n}\n\n.statusSection {\n  text-align: center;\n}\n\n.statusLabel {\n  display: block;\n  font-size: 14px;\n  color: rgba(255, 255, 255, 0.9);\n  margin-bottom: 12px;\n}\n\n.statusBadge {\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 16px;\n  font-size: 14px;\n}\n\n.statusIcon {\n  font-size: 16px;\n}\n\n.messageSection {\n  width: 100%;\n  text-align: center;\n  padding: 16px;\n  background: var(--ion-card-background);\n  border-radius: 12px;\n}\n\n.messageText p {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--ion-text-color);\n}\n\n.errorMessage {\n  width: 100%;\n  text-align: center;\n  padding: 24px;\n  background: var(--ion-card-background);\n  border-radius: 12px;\n}\n\n.errorMessage p {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--ion-color-danger);\n}\n\n.actionButtons {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-top: 8px;\n}\n\n.useButton,\n.closeButton {\n  --border-radius: 12px;\n  height: 48px;\n  font-weight: 500;\n}\n\n.useButton {\n  --background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n}\n\n.warningSection {\n  width: 100%;\n  text-align: center;\n  padding: 16px;\n  background: rgba(255, 193, 7, 0.1);\n  border-radius: 12px;\n  border: 1px solid rgba(255, 193, 7, 0.3);\n}\n\n.warningSection p {\n  margin: 0;\n  font-size: 14px;\n  font-weight: 500;\n}\n",
  "styles/Welcome.module.css": "/* Welcome 组件样式 - 简约风格 */\n\n.welcomeContainer {\n  background: #ffffff;\n  min-height: 100vh;\n  color: #333333;\n  position: relative;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n}\n\n/* 头部 */\n.header {\n  text-align: center;\n  padding: 56px 16px 16px;\n}\n\n.logo {\n  display: inline-block;\n  margin-bottom: 12px;\n}\n\n.logoImage {\n  width: 64px;\n  height: 64px;\n  border-radius: 12px;\n  transition: opacity 0.2s ease;\n  box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1);\n}\n\n.logoImage:hover {\n  opacity: 0.8;\n}\n\n.title {\n  font-size: 2.1rem;\n  font-weight: 600;\n  margin: 0 0 6px 0;\n  line-height: 1.2;\n  letter-spacing: -0.02em;\n}\n\n.titleGradient {\n  color: #1a1a1a;\n}\n\n.titleSubtext {\n  color: #666666;\n  font-weight: 400;\n  margin-left: 6px;\n}\n\n.subtitle {\n  font-size: 1rem;\n  color: #666666;\n  margin: 0;\n  font-weight: 400;\n}\n\n/* 步骤 */\n.steps {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 8px 16px 16px;\n  max-width: 560px;\n  margin: 0 auto;\n}\n\n.step {\n  padding: 12px 12px;\n  background: #fff;\n  border-radius: 12px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  position: relative;\n  text-align: center;\n  transition: background-color 0.2s ease;\n}\n\n.stepContent {\n  margin-top: 0;\n}\n\n.stepContent h3 {\n  font-size: 1.1rem;\n  font-weight: 500;\n  color: #1a1a1a;\n  margin: 0 0 4px 0;\n}\n\n.stepContent p {\n  color: #666666;\n  margin: 0;\n  font-size: 0.95rem;\n  line-height: 1.4;\n}\n\n.stepNumber {\n  position: absolute;\n  top: 8px;\n  left: 8px;\n  background: #e5e5e5;\n  color: #666666;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 500;\n  font-size: 0.75rem;\n}\n\n/* 行动按钮 */\n.ctaSection {\n  text-align: center;\n  padding: 16px 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  align-items: center;\n}\n\n.primaryBtn {\n  background: #1a1a1a;\n  color: #ffffff;\n  border: none;\n  border-radius: 6px;\n  padding: 10px 18px;\n  font-weight: 500;\n  font-size: 0.95rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  justify-content: center;\n  transition: background-color 0.2s ease;\n  width: 180px;\n  max-width: 90%;\n}\n\n.primaryBtn:hover {\n  background: #333333;\n}\n\n.primaryBtn:active {\n  background: #000000;\n}\n\n.secondaryBtn {\n  background: transparent;\n  color: #666666;\n  border: 1px solid #d5d5d5;\n  border-radius: 6px;\n  padding: 10px 18px;\n  font-weight: 500;\n  font-size: 0.95rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  justify-content: center;\n  transition: all 0.2s ease;\n  width: 180px;\n  max-width: 90%;\n}\n\n.secondaryBtn:hover {\n  background: #fafafa;\n  border-color: #999999;\n}\n\n/* 底部 */\n.footer {\n  text-align: center;\n  padding: 8px 16px 16px;\n  color: #999999;\n  font-size: 0.85rem;\n}\n\n.footer p {\n  margin: 0;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .header {\n    padding: 40px 12px 16px;\n  }\n  \n  .title {\n    font-size: 2rem;\n  }\n  \n  .subtitle {\n    font-size: 1rem;\n  }\n  \n  .steps {\n    padding: 8px 12px 16px;\n  }\n  \n  .step {\n    padding: 12px 12px;\n  }\n  \n  .ctaSection {\n    padding: 16px 12px;\n  }\n}\n\n@media (max-width: 480px) {\n  .header {\n    padding: 32px 12px 14px;\n  }\n  \n  .logoImage {\n    width: 52px;\n    height: 52px;\n  }\n  \n  .title {\n    font-size: 1.7rem;\n  }\n  \n  .primaryBtn, .secondaryBtn {\n    width: 100%;\n    max-width: 280px;\n  }\n}\n\n/* 桌面端更紧凑的步骤布局 */\n@media (min-width: 768px) {\n  .steps {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 10px;\n    max-width: 840px;\n  }\n  .step {\n    text-align: left;\n    padding: 12px;\n  }\n  .stepNumber {\n    top: 10px;\n    left: 10px;\n  }\n}\n\n/* 简化动画 */\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(12px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* 基础进场动画 */\n.logo,\n.title,\n.subtitle,\n.step,\n.ctaSection {\n  opacity: 0;\n  animation: fadeIn 0.5s ease-out forwards;\n}\n\n.logo {\n  animation-delay: 0s;\n}\n\n.title {\n  animation-delay: 0.1s;\n}\n\n.subtitle {\n  animation-delay: 0.2s;\n}\n\n.step:nth-child(1) { \n  animation-delay: 0.3s;\n}\n\n.step:nth-child(2) { \n  animation-delay: 0.4s;\n}\n\n.step:nth-child(3) { \n  animation-delay: 0.5s;\n}\n\n.ctaSection {\n  animation-delay: 0.6s;\n}\n",
  "utils/constants.js": "/**\n * 应用常量定义\n */\n\n// 优惠券编码相关常量\nexport const COUPON_CODE_LENGTH = 6;\nexport const COUPON_CODE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n\n// 优惠券类型\nexport const COUPON_TYPES = {\n  AMOUNT: 'amount',      // 金额券\n  DISCOUNT: 'discount'   // 折扣券\n};\n\n// 存储相关常量\nexport const STORAGE_COLLECTION_NAME = 'coupons';\nexport const STORAGE_CREATED_COUPONS = 'created_coupons';  // 我创建的优惠券\nexport const STORAGE_RECEIVED_COUPONS = 'received_coupons'; // 我收到的优惠券\n\n// 图片生成相关常量\nexport const DEFAULT_IMAGE_CONFIG = {\n  width: 600,  // 增加宽度提高清晰度\n  height: 420, // 增加高度提高清晰度\n  backgroundColor: '#DC2626',\n  textColor: '#FFFFFF',\n  fontSize: {\n    amount: 48,  // 增大字号\n    code: 28,    // 增大字号\n    label: 22    // 增大字号\n  },\n  padding: 30\n};\n\n// 验证消息常量\nexport const VALIDATION_MESSAGES = {\n  COUPON_NOT_FOUND: '优惠券不存在',\n  COUPON_ALREADY_USED: '优惠券已使用',\n  COUPON_VALID: '优惠券有效',\n  INVALID_CODE_FORMAT: '优惠券编码格式无效',\n  INVALID_AMOUNT: '金额格式无效'\n};\n\n// 成功消息常量\nexport const SUCCESS_MESSAGES = {\n  COUPON_CREATED: '优惠券创建成功',\n  COUPON_USED: '验券成功',\n  IMAGE_SAVED: '图片保存成功'\n};\n\n// 错误消息常量\nexport const ERROR_MESSAGES = {\n  STORAGE_ERROR: '存储操作失败',\n  IMAGE_GENERATION_ERROR: '图片生成失败',\n  NETWORK_ERROR: '网络连接失败'\n};",
  "utils/index.js": "// Utility functions export file\nexport * from './types';\nexport * from './constants';\nexport * from './validators';",
  "utils/types.js": "/**\n * 优惠券数据模型和类型定义\n * 基于需求文档中的数据结构定义\n */\n\n/**\n * 优惠券错误类型枚举\n */\nexport const CouponErrorType = {\n  INVALID_AMOUNT: 'INVALID_AMOUNT',\n  CODE_NOT_FOUND: 'CODE_NOT_FOUND',\n  COUPON_ALREADY_USED: 'COUPON_ALREADY_USED',\n  STORAGE_ERROR: 'STORAGE_ERROR',\n  IMAGE_GENERATION_ERROR: 'IMAGE_GENERATION_ERROR'\n};\n\n/**\n * 优惠券状态枚举\n */\nexport const CouponStatus = {\n  UNUSED: 'unused',\n  USED: 'used'\n};\n\n/**\n * 优惠券类型枚举\n */\nexport const CouponType = {\n  AMOUNT: 'amount',      // 金额券\n  DISCOUNT: 'discount'   // 折扣券\n};\n\n/**\n * 创建优惠券对象\n * @param {Object} couponData - 优惠券数据\n * @param {string} couponData.id - 优惠券ID\n * @param {string} couponData.code - 6位唯一编码\n * @param {string} couponData.type - 优惠券类型 (amount/discount)\n * @param {number} couponData.amount - 优惠券金额\n * @param {number} [couponData.discount] - 折扣值 (0-100)\n * @param {string} [couponData.note] - 备注信息\n * @param {string} [couponData.companyName] - 公司名称\n * @param {boolean} couponData.isUsed - 使用状态\n * @param {Date} couponData.createdAt - 创建时间\n * @param {Date} [couponData.usedAt] - 使用时间\n * @returns {Object} 优惠券对象\n */\nexport function createCoupon({ \n  id, \n  code, \n  type = 'amount',\n  amount, \n  discount = null,\n  note = '',\n  companyName = '',\n  isUsed = false, \n  createdAt = new Date(), \n  usedAt = null \n}) {\n  return {\n    id,\n    code,\n    type,\n    amount,\n    discount,\n    note,\n    companyName,\n    isUsed,\n    createdAt,\n    usedAt\n  };\n}\n\n/**\n * 创建验证结果对象\n * @param {Object} resultData - 验证结果数据\n * @param {boolean} resultData.isValid - 是否有效\n * @param {Object} [resultData.coupon] - 优惠券对象\n * @param {string} resultData.message - 结果消息\n * @param {boolean} resultData.canUse - 是否可以使用\n * @returns {Object} 验证结果对象\n */\nexport function createValidationResult({ isValid, coupon = null, message, canUse = false }) {\n  return {\n    isValid,\n    coupon,\n    message,\n    canUse\n  };\n}\n\n/**\n * 创建优惠券错误对象\n * @param {Object} errorData - 错误数据\n * @param {string} errorData.type - 错误类型\n * @param {string} errorData.message - 错误消息\n * @param {*} [errorData.details] - 错误详情\n * @returns {Object} 错误对象\n */\nexport function createCouponError({ type, message, details = null }) {\n  return {\n    type,\n    message,\n    details\n  };\n}\n\n/**\n * 创建优惠券图片配置对象\n * @param {Object} configData - 配置数据\n * @returns {Object} 图片配置对象\n */\nexport function createCouponImageConfig({\n  width = 600,\n  height = 420,\n  backgroundColor = '#DC2626',\n  textColor = '#FFFFFF',\n  fontSize = {\n    amount: 48,\n    code: 28,\n    label: 22\n  },\n  padding = 30\n} = {}) {\n  return {\n    width,\n    height,\n    backgroundColor,\n    textColor,\n    fontSize,\n    padding\n  };\n}\n\n/**\n * 创建优惠券模板对象\n * @param {Object} templateData - 模板数据\n * @returns {Object} 模板对象\n */\nexport function createCouponTemplate({\n  id,\n  name,\n  type,\n  amount,\n  discount = null,\n  note = '',\n  companyName = '',\n  createdAt = new Date()\n}) {\n  return {\n    id,\n    name,\n    type,\n    amount,\n    discount,\n    note,\n    companyName,\n    createdAt\n  };\n}\n\n/**\n * 验证优惠券对象结构\n * @param {Object} coupon - 优惠券对象\n * @returns {boolean} 是否有效\n */\nexport function isValidCoupon(coupon) {\n  return coupon &&\n    typeof coupon.id === 'string' &&\n    typeof coupon.code === 'string' &&\n    typeof coupon.type === 'string' &&\n    typeof coupon.amount === 'number' &&\n    typeof coupon.isUsed === 'boolean' &&\n    coupon.createdAt instanceof Date &&\n    coupon.code.length === 6;\n}\n\n/**\n * 验证验证结果对象结构\n * @param {Object} result - 验证结果对象\n * @returns {boolean} 是否有效\n */\nexport function isValidValidationResult(result) {\n  return result &&\n    typeof result.isValid === 'boolean' &&\n    typeof result.message === 'string' &&\n    typeof result.canUse === 'boolean';\n}",
  "utils/validators.js": "/**\n * 验证工具函数\n */\n\nimport { COUPON_CODE_LENGTH, COUPON_CODE_CHARS } from './constants';\n\n/**\n * 验证优惠券金额格式\n * @param {string|number} amount - 金额\n * @returns {boolean} 是否有效\n */\nexport function validateAmount(amount) {\n  const numAmount = Number(amount);\n  return !isNaN(numAmount) && numAmount > 0 && numAmount <= 999999;\n}\n\n/**\n * 验证优惠券编码格式\n * @param {string} code - 优惠券编码\n * @returns {boolean} 是否有效\n */\nexport function validateCouponCode(code) {\n  if (!code || typeof code !== 'string') {\n    return false;\n  }\n  \n  if (code.length !== COUPON_CODE_LENGTH) {\n    return false;\n  }\n  \n  // 检查是否只包含允许的字符\n  for (let i = 0; i < code.length; i++) {\n    if (!COUPON_CODE_CHARS.includes(code[i])) {\n      return false;\n    }\n  }\n  \n  return true;\n}\n\n/**\n * 格式化金额显示\n * @param {number} amount - 金额\n * @returns {string} 格式化后的金额字符串\n */\nexport function formatAmount(amount) {\n  return `¥${amount.toFixed(2)}`;\n}\n\n/**\n * 格式化日期显示\n * @param {Date} date - 日期对象\n * @returns {string} 格式化后的日期字符串\n */\nexport function formatDate(date) {\n  if (!date || !(date instanceof Date)) {\n    return '';\n  }\n  \n  return date.toLocaleString('zh-CN', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n}\n\n/**\n * 验证折扣值\n * @param {string|number} discount - 折扣值\n * @returns {boolean} 是否有效\n */\nexport function validateDiscount(discount) {\n  const numDiscount = Number(discount);\n  return !isNaN(numDiscount) && numDiscount > 0 && numDiscount <= 100;\n}\n\n/**\n * 验证备注长度\n * @param {string} note - 备注内容\n * @returns {boolean} 是否有效\n */\nexport function validateNote(note) {\n  if (!note) return true; // 备注可选\n  return typeof note === 'string' && note.length <= 200;\n}\n\n/**\n * 验证公司名称\n * @param {string} companyName - 公司名称\n * @returns {boolean} 是否有效\n */\nexport function validateCompanyName(companyName) {\n  if (!companyName) return true; // 公司名称可选\n  return typeof companyName === 'string' && companyName.length <= 50;\n}\n\n/**\n * 验证批量创建数量\n * @param {string|number} quantity - 数量\n * @returns {boolean} 是否有效\n */\nexport function validateQuantity(quantity) {\n  const numQuantity = Number(quantity);\n  return !isNaN(numQuantity) && numQuantity > 0 && numQuantity <= 100;\n}\n\n/**\n * 清理和标准化优惠券编码输入\n * @param {string} input - 用户输入\n * @returns {string} 清理后的编码\n */\nexport function sanitizeCouponCode(input) {\n  if (!input || typeof input !== 'string') {\n    return '';\n  }\n  \n  // 转换为大写并移除空格和特殊字符\n  return input.toUpperCase().replace(/[^A-Z0-9]/g, '');\n}"
}